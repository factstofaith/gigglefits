{
  "getting-started-guide": "# Getting Started Guide\n\nWelcome to the TAP Integration Platform! This guide will walk you through the basics of using the platform to create powerful integrations between your various systems and data sources.\n\n## Overview\n\nThe TAP Integration Platform allows you to visually design, deploy, and monitor integrations between different systems. With an intuitive drag-and-drop interface, you can create complex data flows without writing code.\n\n## Key Features\n\n* **Visual Flow Designer**: Create integrations using a drag-and-drop canvas\n* **Pre-built Connectors**: Connect to popular systems and services\n* **Transformation Tools**: Map and transform data between systems\n* **Scheduling & Triggers**: Run integrations on a schedule or trigger them based on events\n* **Monitoring & Alerting**: Monitor your integrations and receive alerts on failures\n\n## Quickstart\n\n1. **Sign in** to your TAP Integration Platform account\n2. Navigate to the **Integrations** page\n3. Click **Create New Integration**\n4. Give your integration a name and description\n5. Use the visual designer to create your flow\n6. **Save** and **Deploy** your integration\n\n## Next Steps\n\n* [Creating Your First Integration](./integration-creation)\n* [Connecting to Data Sources](./data-sources)\n* [Transformation Techniques](./transformations)\n* [Scheduling Options](./scheduling)\n\nIf you need assistance, please contact our support team at support@example.com.",
  
  "rest-api-reference": "# REST API Reference\n\n## Introduction\n\nThe TAP Integration Platform provides a comprehensive REST API that allows you to programmatically manage your integrations, data sources, and configurations.\n\n## Authentication\n\nAll API requests require authentication using an API key or OAuth token. You can generate API keys in the admin console.\n\n```\nAuthorization: Bearer YOUR_API_TOKEN\n```\n\n## API Endpoints\n\n### Integrations\n\n#### GET /api/integrations\n\nReturns a list of all integrations.\n\n**Query Parameters:**\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| page | integer | Page number for pagination |\n| limit | integer | Number of items per page |\n| status | string | Filter by status (active, inactive, error) |\n\n**Response:**\n\n```json\n{\n  \"data\": [\n    {\n      \"id\": \"integration-123\",\n      \"name\": \"Salesforce to Database\",\n      \"description\": \"Sync Salesforce contacts to database\",\n      \"status\": \"active\",\n      \"created_at\": \"2025-03-15T10:30:00Z\",\n      \"updated_at\": \"2025-03-16T14:22:10Z\"\n    },\n    // More integrations...\n  ],\n  \"meta\": {\n    \"total\": 42,\n    \"page\": 1,\n    \"limit\": 10,\n    \"pages\": 5\n  }\n}\n```\n\n#### POST /api/integrations\n\nCreate a new integration.\n\n**Request Body:**\n\n```json\n{\n  \"name\": \"New Integration\",\n  \"description\": \"Integration description\",\n  \"flow\": {\n    // Flow definition...\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"id\": \"integration-456\",\n  \"name\": \"New Integration\",\n  \"description\": \"Integration description\",\n  \"status\": \"draft\",\n  \"created_at\": \"2025-03-20T15:45:30Z\",\n  \"updated_at\": \"2025-03-20T15:45:30Z\"\n}\n```\n\n## Error Handling\n\nAll errors return an appropriate HTTP status code and a JSON response with details:\n\n```json\n{\n  \"error\": {\n    \"code\": \"validation_error\",\n    \"message\": \"The name field is required\",\n    \"details\": {\n      \"field\": \"name\",\n      \"rule\": \"required\"\n    }\n  }\n}\n```\n\n## Rate Limiting\n\nAPI requests are limited to 100 requests per minute per API key. Rate limit information is included in the response headers.\n\n## SDK Libraries\n\nOur API is available through the following SDKs:\n\n* [JavaScript SDK](./sdk-documentation#javascript)\n* [Python SDK](./sdk-documentation#python)\n* [Java SDK](./sdk-documentation#java)",
  
  "azure-blob-integration": "# Azure Blob Storage Integration\n\n## Overview\n\nThe TAP Integration Platform allows you to easily connect to Azure Blob Storage to read from and write to blob containers. This guide covers how to set up the connection and use it in your integrations.\n\n## Prerequisites\n\n* An active Azure subscription\n* A Storage Account with Blob Storage enabled\n* Access keys or SAS tokens for authentication\n\n## Setting Up the Connection\n\n1. Navigate to **Connections** in the main menu\n2. Click **New Connection**\n3. Select **Azure Blob Storage** from the list of connectors\n4. Enter the following information:\n   * **Connection Name**: A name for this connection\n   * **Storage Account Name**: Your Azure Storage account name\n   * **Authentication Method**: Choose Access Key or SAS Token\n   * **Access Key** or **SAS Token**: Paste your authentication credentials\n5. Click **Test Connection** to verify\n6. Click **Save Connection**\n\n## Using Azure Blob Storage in Flows\n\n### Reading from Blob Storage\n\n1. In the Integration Designer, drag an **Azure Blob Source** node onto the canvas\n2. Select your Azure Blob connection\n3. Configure the source with the following settings:\n   * **Container**: Select the blob container to read from\n   * **Blob Path/Pattern**: Specify the path or pattern for blobs to read\n   * **File Format**: Select the format (CSV, JSON, etc.)\n\n### Writing to Blob Storage\n\n1. Drag an **Azure Blob Destination** node onto the canvas\n2. Select your Azure Blob connection\n3. Configure the destination with the following settings:\n   * **Container**: Select the blob container to write to\n   * **Blob Path**: Specify the path for the output blob\n   * **File Format**: Select the output format\n   * **Write Mode**: Choose Append or Overwrite\n\n## Example: CSV to JSON Transformation\n\n![Azure Blob Integration Example](./images/azure-blob-example.png)\n\nThis example flow reads CSV files from an Azure Blob container, transforms them to JSON, and writes them to another container.\n\n## Best Practices\n\n* Use folder structures in your containers to organize data\n* Implement proper error handling for Azure API limits\n* Consider using SAS tokens with appropriate permissions instead of access keys\n* Monitor your storage costs and implement lifecycle policies\n\n## Troubleshooting\n\n### Common Issues\n\n* **Connection Failed**: Verify your credentials and network connectivity\n* **Container Not Found**: Check the container name and permissions\n* **Permission Denied**: Ensure your authentication has the right permissions\n\n### Diagnostic Logs\n\nEnable diagnostic logs in the flow settings to troubleshoot issues with Azure Blob connections."
}