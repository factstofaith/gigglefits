[
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/App.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScrollToTop",
        "line": 45,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ScrollToTop",
        "line": 48,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/AppRoutes.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "AppRoutes",
        "line": 80,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "AppRoutes",
        "line": 83,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/AzureConfigContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 20,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 23,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 26,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 29,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 30,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 31,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 34,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 35,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "AzureConfigProvider",
        "line": 40,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/BreadcrumbContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 220,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 221,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 222,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 223,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 226,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 252,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 277,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 290,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 299,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "BreadcrumbProvider",
        "line": 328,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "BreadcrumbProvider",
        "line": 221,
        "column": 42,
        "firstCall": 220,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "BreadcrumbProvider",
        "line": 222,
        "column": 40,
        "firstCall": 220,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "BreadcrumbProvider",
        "line": 252,
        "column": 2,
        "firstCall": 226,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "BreadcrumbProvider",
        "line": 290,
        "column": 2,
        "firstCall": 226,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "BreadcrumbProvider",
        "line": 299,
        "column": 30,
        "firstCall": 277,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/ConfigContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "ConfigProvider",
        "line": 33,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/EarningsContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 46,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 63,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 64,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 65,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 68,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 69,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 72,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 75,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 87,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 99,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 120,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 143,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 164,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 193,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 223,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 258,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 284,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 305,
        "column": 37,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 326,
        "column": 37,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 347,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 370,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 384,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "EarningsProvider",
        "line": 395,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 64,
        "column": 50,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 65,
        "column": 46,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 68,
        "column": 44,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 69,
        "column": 42,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 72,
        "column": 36,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 75,
        "column": 32,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 87,
        "column": 30,
        "firstCall": 63,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 120,
        "column": 26,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 143,
        "column": 26,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 164,
        "column": 31,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 193,
        "column": 31,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 223,
        "column": 29,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 258,
        "column": 29,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 284,
        "column": 32,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 305,
        "column": 37,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 326,
        "column": 37,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 347,
        "column": 25,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 370,
        "column": 32,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "EarningsProvider",
        "line": 395,
        "column": 2,
        "firstCall": 384,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/IntegrationContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 118,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 188,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 194,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 200,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 206,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 212,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 218,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 224,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 230,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 236,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 245,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 251,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 270,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 300,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 335,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 373,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 407,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 448,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 482,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 512,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 542,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 574,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 604,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 638,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 673,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 706,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 736,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 769,
        "column": 45,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 802,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 832,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 862,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationProvider",
        "line": 895,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useEffect has too many dependencies (8)",
        "component": "IntegrationProvider",
        "line": 895,
        "column": 2,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 194,
        "column": 40,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 200,
        "column": 32,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 206,
        "column": 26,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 212,
        "column": 34,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 218,
        "column": 44,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 224,
        "column": 34,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 230,
        "column": 46,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 236,
        "column": 50,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 245,
        "column": 52,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 251,
        "column": 32,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 270,
        "column": 30,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 335,
        "column": 23,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 373,
        "column": 20,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 407,
        "column": 33,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 448,
        "column": 36,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 482,
        "column": 24,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 512,
        "column": 23,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 542,
        "column": 23,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 574,
        "column": 29,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 604,
        "column": 24,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 638,
        "column": 24,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 673,
        "column": 24,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 706,
        "column": 24,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 736,
        "column": 42,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 769,
        "column": 45,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 802,
        "column": 30,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 832,
        "column": 25,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationProvider",
        "line": 862,
        "column": 36,
        "firstCall": 300,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/KeyboardShortcutsContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 99,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 102,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 118,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 145,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 168,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 180,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 190,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 245,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 259,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "KeyboardShortcutsProvider",
        "line": 320,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "KeyboardShortcutsProvider",
        "line": 102,
        "column": 50,
        "firstCall": 99,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "KeyboardShortcutsProvider",
        "line": 145,
        "column": 29,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "KeyboardShortcutsProvider",
        "line": 168,
        "column": 26,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "KeyboardShortcutsProvider",
        "line": 180,
        "column": 33,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "KeyboardShortcutsProvider",
        "line": 190,
        "column": 24,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/MonitoringContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useAzureConfig' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 37,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 40,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 43,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 44,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 45,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 48,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 49,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 50,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 53,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 54,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 55,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 58,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 59,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 60,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 61,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 62,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 65,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 66,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 67,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 68,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 69,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 72,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 118,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 159,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (9)",
        "component": "MonitoringProvider",
        "line": 159,
        "column": 25,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 302,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 310,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 318,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 326,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 360,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 384,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 403,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 414,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 421,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useEffect has too many dependencies (7)",
        "component": "MonitoringProvider",
        "line": 421,
        "column": 2,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 441,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 448,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useEffect has too many dependencies (6)",
        "component": "MonitoringProvider",
        "line": 448,
        "column": 2,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "MonitoringProvider",
        "line": 527,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 44,
        "column": 44,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 45,
        "column": 40,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 48,
        "column": 40,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 49,
        "column": 46,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 50,
        "column": 42,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 53,
        "column": 36,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 54,
        "column": 40,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 55,
        "column": 48,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 58,
        "column": 54,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 59,
        "column": 50,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 60,
        "column": 48,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 61,
        "column": 50,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 62,
        "column": 48,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 65,
        "column": 30,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 66,
        "column": 44,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 67,
        "column": 40,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 68,
        "column": 42,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 69,
        "column": 56,
        "firstCall": 43,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 118,
        "column": 30,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 159,
        "column": 25,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 302,
        "column": 32,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 310,
        "column": 34,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 318,
        "column": 38,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 326,
        "column": 31,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 360,
        "column": 21,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 384,
        "column": 27,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 403,
        "column": 24,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 421,
        "column": 2,
        "firstCall": 414,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 441,
        "column": 2,
        "firstCall": 414,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "MonitoringProvider",
        "line": 448,
        "column": 2,
        "firstCall": 414,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/NotificationContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useReducer' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 238,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 252,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 283,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 308,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 359,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 378,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 393,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 407,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 422,
        "column": 35,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 441,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "NotificationProvider",
        "line": 461,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useEffect has too many dependencies (6)",
        "component": "NotificationProvider",
        "line": 461,
        "column": 2,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 283,
        "column": 22,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 308,
        "column": 26,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 359,
        "column": 29,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 378,
        "column": 29,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 393,
        "column": 24,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 407,
        "column": 32,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 422,
        "column": 35,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "NotificationProvider",
        "line": 441,
        "column": 28,
        "firstCall": 252,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/ResourceContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 50,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 108,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 114,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 120,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 126,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 132,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 138,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 144,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 150,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 156,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 162,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 168,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 174,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 180,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 186,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 192,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 198,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 204,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 210,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 216,
        "column": 62,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 222,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 236,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 265,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 294,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 323,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 354,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 376,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 410,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 444,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 478,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 498,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 531,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 546,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 564,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 579,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 594,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 609,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 624,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 639,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 654,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 669,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 683,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 698,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 713,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 728,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ResourceProvider",
        "line": 775,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 114,
        "column": 34,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 120,
        "column": 34,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 126,
        "column": 32,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 132,
        "column": 54,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 138,
        "column": 46,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 144,
        "column": 46,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 150,
        "column": 44,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 156,
        "column": 50,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 162,
        "column": 42,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 168,
        "column": 42,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 174,
        "column": 40,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 180,
        "column": 54,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 186,
        "column": 46,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 192,
        "column": 46,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 198,
        "column": 44,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 204,
        "column": 54,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 210,
        "column": 46,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 216,
        "column": 62,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 222,
        "column": 58,
        "firstCall": 108,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 265,
        "column": 24,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 294,
        "column": 24,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 323,
        "column": 23,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 354,
        "column": 28,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 376,
        "column": 31,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 410,
        "column": 27,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 444,
        "column": 27,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 478,
        "column": 26,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 498,
        "column": 31,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 531,
        "column": 34,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 546,
        "column": 34,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 564,
        "column": 34,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 579,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 594,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 609,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 624,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 639,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 654,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 669,
        "column": 31,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 683,
        "column": 29,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 698,
        "column": 29,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 713,
        "column": 29,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 728,
        "column": 34,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ResourceProvider",
        "line": 775,
        "column": 30,
        "firstCall": 236,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/SettingsContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 17,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 44,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 100,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 103,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 106,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 162,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 211,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 267,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 351,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "SettingsProvider",
        "line": 404,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 100,
        "column": 36,
        "firstCall": 44,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 103,
        "column": 28,
        "firstCall": 44,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 211,
        "column": 25,
        "firstCall": 162,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 267,
        "column": 24,
        "firstCall": 162,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 351,
        "column": 2,
        "firstCall": 106,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "SettingsProvider",
        "line": 404,
        "column": 21,
        "firstCall": 162,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/TenantContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 72,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 78,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 84,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 90,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 109,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 163,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 193,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 222,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 251,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TenantProvider",
        "line": 267,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 78,
        "column": 46,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 84,
        "column": 36,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 90,
        "column": 28,
        "firstCall": 72,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 163,
        "column": 23,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 193,
        "column": 27,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 222,
        "column": 32,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TenantProvider",
        "line": 251,
        "column": 28,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/UserContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 53,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 123,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 129,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 135,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 141,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 147,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 153,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 159,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 165,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 171,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 177,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 183,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 189,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserProvider",
        "line": 195,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/contexts/WebhookContext.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 51,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 118,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 124,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 130,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 136,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 142,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 148,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 154,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 160,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 166,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 172,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 178,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 184,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 190,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 196,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 202,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 208,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 223,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 257,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 301,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 339,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 379,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 425,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 454,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 494,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 530,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 582,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 608,
        "column": 39,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 646,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 689,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 730,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 770,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 826,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "WebhookProvider",
        "line": 859,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 124,
        "column": 32,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 130,
        "column": 50,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 136,
        "column": 52,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 142,
        "column": 44,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 148,
        "column": 50,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 154,
        "column": 36,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 160,
        "column": 48,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 166,
        "column": 44,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 172,
        "column": 44,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 178,
        "column": 48,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 184,
        "column": 28,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 190,
        "column": 44,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 196,
        "column": 40,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 202,
        "column": 40,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 208,
        "column": 44,
        "firstCall": 118,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 257,
        "column": 27,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 301,
        "column": 24,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 339,
        "column": 24,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 379,
        "column": 24,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 425,
        "column": 22,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 454,
        "column": 32,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 494,
        "column": 36,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 530,
        "column": 33,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 582,
        "column": 27,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 608,
        "column": 39,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 646,
        "column": 30,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 689,
        "column": 29,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 730,
        "column": 29,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 770,
        "column": 32,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "WebhookProvider",
        "line": 826,
        "column": 33,
        "firstCall": 223,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useAutoSave.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 28,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 29,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 30,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 31,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 32,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 33,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 36,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 41,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useConnectionValidation.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 122,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 123,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 139,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 161,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 193,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 214,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 233,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 249,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 269,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useFlowHistory.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 21,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 24,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 27,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 28,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 34,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 65,
        "column": 15,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 87,
        "column": 15,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 109,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 119,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 133,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 144,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useFlowOptimizer.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 63,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 64,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 70,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 81,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 82,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 88,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 96,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 97,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 98,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 104,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 114,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 125,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 129,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 139,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 191,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useEffect has too many dependencies (6)",
        "component": null,
        "line": 191,
        "column": 2,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 209,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 231,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useFlowTemplates.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 74,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 75,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 76,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 79,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 147,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 161,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 174,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 189,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 225,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 278,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 326,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 361,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 397,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useFlowValidation.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 19,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 22,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 43,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 77,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 99,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useLiveDataPreview.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 18,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 21,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 24,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 33,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 115,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useNotification.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 87,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/useResponsiveCanvas.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 22,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 25,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 31,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 37,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 62,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 93,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/AdminDashboard.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/AdminDashboardPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/EarningsPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/HomePage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/IntegrationDetailPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (45:0)",
        "line": 45,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/IntegrationsPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/LoginPage.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "LoginPage",
        "line": 22,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginPage",
        "line": 23,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginPage",
        "line": 24,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginPage",
        "line": 25,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginPage",
        "line": 24,
        "column": 28,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginPage",
        "line": 25,
        "column": 32,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/UserSettingsPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/utils/accessibilityUtils.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 624,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/utils/bidirectionalSync.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 187,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 191,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 218,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/utils/reactFlowAdapter.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useReactFlow' cannot be called inside a nested function",
        "component": null,
        "line": 112,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useViewport' cannot be called inside a nested function",
        "component": null,
        "line": 115,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/pages/LoginPage.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:32)",
        "line": 1,
        "column": 32
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/project/code_cleanup/implementation/ThemeCompatibilityLayer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 159,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 176,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "conditional-hook",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' cannot be called inside a IfStatement",
        "component": "ThemeCompatibilityProvider",
        "line": 181,
        "column": 24,
        "fix": {
          "type": "extract-hook",
          "description": "Move hook outside of conditional statement",
          "automated": true,
          "replacement": {
            "lookBehind": 179,
            "extract": "/**\n * Theme Compatibility Layer\n * This utility creates a bridge between the Material UI theme system and our design system theme.\n * It ensures components can work with either theme structure without breaking.\n */\n\nimport React, { createContext, useContext } from 'react';\nimport { createTheme } from '@mui/material/styles';\nimport { useTheme as useDesignTheme } from '../../design-system/foundations/theme/ThemeProvider';\n\n// Create a default Material UI theme for reference\nconst defaultMuiTheme = createTheme();\n\n// Create compatibility context\nconst ThemeCompatibilityContext = createContext({\n  theme: null,\n  muiTheme: null,\n});\n\n/**\n * Maps design system theme properties to Material UI equivalent\n * @param {Object} designTheme - Our design system theme\n * @returns {Object} - Material UI compatible theme object\n */\nexport function createCompatibilityTheme(designTheme) {\n  // Create a Material UI compatible theme based on our design system theme\n  return {\n    // Material UI compatibility layer\n    palette: {\n      primary: {\n        main: designTheme.colors?.primary?.main || '#1976d2',\n        light: designTheme.colors?.primary?.light || '#42a5f5',\n        dark: designTheme.colors?.primary?.dark || '#1565c0',\n        contrastText: designTheme.colors?.primary?.contrastText || '#fff',\n      },\n      secondary: {\n        main: designTheme.colors?.secondary?.main || '#9c27b0',\n        light: designTheme.colors?.secondary?.light || '#ba68c8',\n        dark: designTheme.colors?.secondary?.dark || '#7b1fa2',\n        contrastText: designTheme.colors?.secondary?.contrastText || '#fff',\n      },\n      error: {\n        main: designTheme.colors?.status?.error?.main || '#d32f2f',\n        light: designTheme.colors?.status?.error?.light || '#ef5350',\n        dark: designTheme.colors?.status?.error?.dark || '#c62828',\n        contrastText: designTheme.colors?.status?.error?.contrastText || '#fff',\n      },\n      warning: {\n        main: designTheme.colors?.status?.warning?.main || '#ed6c02',\n        light: designTheme.colors?.status?.warning?.light || '#ff9800',\n        dark: designTheme.colors?.status?.warning?.dark || '#e65100',\n        contrastText: designTheme.colors?.status?.warning?.contrastText || '#fff',\n      },\n      info: {\n        main: designTheme.colors?.status?.info?.main || '#0288d1',\n        light: designTheme.colors?.status?.info?.light || '#03a9f4',\n        dark: designTheme.colors?.status?.info?.dark || '#01579b',\n        contrastText: designTheme.colors?.status?.info?.contrastText || '#fff',\n      },\n      success: {\n        main: designTheme.colors?.status?.success?.main || '#2e7d32',\n        light: designTheme.colors?.status?.success?.light || '#4caf50',\n        dark: designTheme.colors?.status?.success?.dark || '#1b5e20',\n        contrastText: designTheme.colors?.status?.success?.contrastText || '#fff',\n      },\n      text: {\n        primary: designTheme.colors?.text?.primary || 'rgba(0, 0, 0, 0.87)',\n        secondary: designTheme.colors?.text?.secondary || 'rgba(0, 0, 0, 0.6)',\n        disabled: designTheme.colors?.text?.disabled || 'rgba(0, 0, 0, 0.38)',\n      },\n      background: {\n        paper: designTheme.colors?.background?.paper || '#fff',\n        default: designTheme.colors?.background?.default || '#f5f5f5',\n      },\n      divider: designTheme.colors?.divider || 'rgba(0, 0, 0, 0.12)',\n      action: {\n        active: designTheme.colors?.action?.active || 'rgba(0, 0, 0, 0.54)',\n        hover: designTheme.colors?.action?.hover || 'rgba(0, 0, 0, 0.04)',\n        selected: designTheme.colors?.action?.selected || 'rgba(0, 0, 0, 0.08)',\n        disabled: designTheme.colors?.action?.disabled || 'rgba(0, 0, 0, 0.26)',\n        disabledBackground: designTheme.colors?.action?.disabledBackground || 'rgba(0, 0, 0, 0.12)',\n      },\n    },\n    \n    // Typography mapping\n    typography: {\n      ...defaultMuiTheme.typography,\n      fontFamily: designTheme.typography?.fontFamily || defaultMuiTheme.typography.fontFamily,\n      fontSize: designTheme.typography?.fontSize || defaultMuiTheme.typography.fontSize,\n      fontWeightLight: designTheme.typography?.fontWeightLight || defaultMuiTheme.typography.fontWeightLight,\n      fontWeightRegular: designTheme.typography?.fontWeightRegular || defaultMuiTheme.typography.fontWeightRegular,\n      fontWeightMedium: designTheme.typography?.fontWeightMedium || defaultMuiTheme.typography.fontWeightMedium,\n      fontWeightBold: designTheme.typography?.fontWeightBold || defaultMuiTheme.typography.fontWeightBold,\n    },\n    \n    // Spacing function compatible with Material UI\n    spacing: (factor) => {\n      return designTheme.spacing?.[factor] || `${factor * 8}px`;\n    },\n    \n    // Shape mapping\n    shape: {\n      borderRadius: designTheme.borderRadius || 4,\n    },\n    \n    // Breakpoints mapping\n    breakpoints: {\n      values: {\n        xs: designTheme.breakpoints?.xs || 0,\n        sm: designTheme.breakpoints?.sm || 600,\n        md: designTheme.breakpoints?.md || 900,\n        lg: designTheme.breakpoints?.lg || 1200,\n        xl: designTheme.breakpoints?.xl || 1536,\n      },\n      // Add Material UI breakpoint utility functions\n      up: (key) => {\n        const value = \n          typeof key === 'number' \n            ? key \n            : designTheme.breakpoints?.[key] || defaultMuiTheme.breakpoints.values[key];\n        return `@media (min-width:${value}px)`;\n      },\n      down: (key) => {\n        const value = \n          typeof key === 'number' \n            ? key \n            : designTheme.breakpoints?.[key] || defaultMuiTheme.breakpoints.values[key];\n        return `@media (max-width:${value - 0.05}px)`;\n      },\n      between: (start, end) => {\n        const startValue = \n          typeof start === 'number' \n            ? start \n            : designTheme.breakpoints?.[start] || defaultMuiTheme.breakpoints.values[start];\n        const endValue = \n          typeof end === 'number' \n            ? end \n            : designTheme.breakpoints?.[end] || defaultMuiTheme.breakpoints.values[end];\n        return `@media (min-width:${startValue}px) and (max-width:${endValue - 0.05}px)`;\n      },\n    },\n    \n    // Other Material UI properties\n    shadows: defaultMuiTheme.shadows,\n    transitions: defaultMuiTheme.transitions,\n    zIndex: defaultMuiTheme.zIndex,\n    \n    // Include the original design system theme for access to its properties\n    designSystem: designTheme,\n  };\n}\n\n/**\n * ThemeCompatibilityProvider component\n * Wrapper component that provides both the design system theme and a Material UI compatible theme\n */\nexport function ThemeCompatibilityProvider({ children }) {\n  // Get the design system theme\n  const designTheme = useDesignTheme();\n  \n  // Create a Material UI compatible theme\n  const muiTheme = createCompatibilityTheme(designTheme);\n  \n  return (\n    <ThemeCompatibilityContext.Provider value={{ theme: designTheme, muiTheme }}>\n      {children}\n    </ThemeCompatibilityContext.Provider>\n  );\n}\n\n/**\n * Combined theme hook that provides access to both design system and Material UI themes\n * @returns {Object} - Object containing both theme objects and helper functions\n */\nexport function useTheme() {\n  const { theme, muiTheme } = useContext(ThemeCompatibilityContext);\n  \n  // If the context is not available, fall back to design system theme\n  // This happens when the component is not wrapped in ThemeCompatibilityProvider\n  if (!theme) {\n    const designTheme = useDesignTheme();\n    const fallbackMuiTheme = createCompatibilityTheme(designTheme);\n    return { \n      ...designTheme, \n      ...fallbackMuiTheme, \n      // Provide a clear indicator that this is the fallback\n      __compatFallback: true,\n    };\n  }\n  \n  // Return a combined theme object with both design system and Material UI properties\n  return {\n    // Original design system theme properties\n    ...theme,\n    // Material UI theme properties\n    ...muiTheme,\n    // Helper functions\n    isDark: theme.mode === 'dark',\n    isLight: theme.mode === 'light',\n  };\n}\n\nexport default ThemeCompatibilityProvider;",
            "variableName": "useDesignThemeResult"
          }
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 181,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' is called conditionally or multiple times in the same component",
        "component": "ThemeCompatibilityProvider",
        "line": 181,
        "column": 24,
        "firstCall": 159,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/AlertConfiguration.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Missing semicolon. (6:24)",
        "line": 6,
        "column": 24
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/ApplicationsManager.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (3:23)",
        "line": 3,
        "column": 23
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/AzureConfigurationPanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/DatasetsManager.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unterminated string constant. (271:17)",
        "line": 271,
        "column": 17
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/DocumentationAnalytics.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 71,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 72,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 73,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 74,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 75,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 76,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 77,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 78,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 81,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 84,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 87,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 72,
        "column": 38,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 73,
        "column": 32,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 74,
        "column": 28,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 75,
        "column": 28,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 76,
        "column": 40,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 77,
        "column": 44,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 78,
        "column": 52,
        "firstCall": 71,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/EmailConfiguration.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 23,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 45,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 46,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 49,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 52,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 53,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 56,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 57,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 58,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 59,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 62,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 65,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/ErrorLogViewer.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (38:0)",
        "line": 38,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/InvitationForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 15,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 24,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 25,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 26,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 29,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 31,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 24,
        "column": 30,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 25,
        "column": 36,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 26,
        "column": 40,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 29,
        "column": 42,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/InvitationList.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 23,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 24,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 25,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 28,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 29,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 32,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 33,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 35,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 38,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 24,
        "column": 32,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 25,
        "column": 28,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 28,
        "column": 26,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 29,
        "column": 40,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 32,
        "column": 38,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 33,
        "column": 42,
        "firstCall": 23,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MFASettings.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 25,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 49,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 50,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 51,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 52,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 55,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MonitoringDashboard.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MonitoringDashboard",
        "line": 81,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "MonitoringDashboard",
        "line": 84,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useAzureConfig' cannot be called inside a nested function",
        "component": "MonitoringDashboard",
        "line": 93,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/ReleasesManager.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (58:24)",
        "line": 58,
        "column": 24
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/ResourceHealthCards.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/TenantsManager.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 43,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 44,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 50,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 170,
        "column": 41,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useResource' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 188,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 190,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 191,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 192,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 193,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 196,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 299,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CreateTenantDialog",
        "line": 50,
        "column": 42,
        "firstCall": 44,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 191,
        "column": 38,
        "firstCall": 190,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 192,
        "column": 50,
        "firstCall": 190,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 193,
        "column": 36,
        "firstCall": 190,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/UserDetail.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useParams' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 27,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 28,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 31,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 32,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 33,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 34,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 35,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 38,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 39,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 49,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 52,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 53,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 54,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 55,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 58,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 32,
        "column": 32,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 33,
        "column": 28,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 34,
        "column": 34,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 35,
        "column": 42,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 38,
        "column": 34,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 39,
        "column": 34,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 49,
        "column": 38,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 52,
        "column": 52,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 53,
        "column": 56,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 54,
        "column": 54,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 55,
        "column": 58,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/UserManagement.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 28,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 29,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 30,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 33,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 34,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 37,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 38,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 39,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 42,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 43,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 46,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 47,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 48,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 49,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 51,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 54,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 29,
        "column": 32,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 30,
        "column": 28,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 33,
        "column": 26,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 34,
        "column": 40,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 37,
        "column": 38,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 38,
        "column": 42,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 39,
        "column": 38,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 42,
        "column": 50,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 43,
        "column": 46,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 46,
        "column": 52,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 47,
        "column": 56,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 48,
        "column": 54,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 49,
        "column": 58,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/AuthModal.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unterminated string constant. (45:43)",
        "line": 45,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/ChatSupportPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ChatSupportPanel",
        "line": 15,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ChatSupportPanel",
        "line": 16,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ChatSupportPanel",
        "line": 17,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ChatSupportPanel",
        "line": 20,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ChatSupportPanel",
        "line": 17,
        "column": 34,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ChatSupportPanel",
        "line": 20,
        "column": 42,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/DataTable.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"from\" (59:13)",
        "line": 59,
        "column": 13
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/ErrorBoundary.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ErrorDetails",
        "line": 47,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ErrorFallback",
        "line": 158,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ErrorFallback",
        "line": 163,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/InputField.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "InputField",
        "line": 24,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/KeyboardShortcutsHelp.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "KeyCap",
        "line": 38,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "KeyboardShortcutsHelp",
        "line": 133,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": "KeyboardShortcutsHelp",
        "line": 134,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/Navigation.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 56,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 57,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 58,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 59,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 62,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 63,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "Navigation",
        "line": 63,
        "column": 42,
        "firstCall": 62,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/NotificationCenter.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 31,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 33,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 35,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/OptimizedToast.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 40,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 41,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 44,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/PortalModal.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFocusTrap' cannot be called inside a nested function",
        "component": "PortalModal",
        "line": 54,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "PortalModal",
        "line": 57,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "PortalModal",
        "line": 158,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/SearchBar.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"from\" (54:13)",
        "line": 54,
        "column": 13
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/UserProfile.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"}\" (147:8)",
        "line": 147,
        "column": 8
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/common/VirtualizedDataTable.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (72:9)",
        "line": 72,
        "column": 9
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/documentation/DocumentRedirect.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "DocumentRedirect",
        "line": 14,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentRedirect",
        "line": 19,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/documentation/PublicDocumentationPortal.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 33,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 34,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 35,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 36,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 37,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 38,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 39,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "PublicDocumentationPortal",
        "line": 74,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ApplicationNodePropertiesPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ConnectionStatus",
        "line": 46,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "AuthenticationForm",
        "line": 128,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DatasetAssociations",
        "line": 425,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetAssociations",
        "line": 426,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 553,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 556,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 557,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 558,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 559,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 562,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 573,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ApplicationNodePropertiesPanel",
        "line": 660,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationNodePropertiesPanel",
        "line": 557,
        "column": 32,
        "firstCall": 556,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationNodePropertiesPanel",
        "line": 558,
        "column": 52,
        "firstCall": 556,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationNodePropertiesPanel",
        "line": 559,
        "column": 50,
        "firstCall": 556,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationNodePropertiesPanel",
        "line": 562,
        "column": 34,
        "firstCall": 556,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/AzureBlobConfiguration.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ConnectionPropertiesPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ConnectionCard",
        "line": 72,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ConnectionEditDialog",
        "line": 182,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionEditDialog",
        "line": 183,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ConnectionEditDialog",
        "line": 192,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 327,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 330,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 331,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 332,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 333,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 334,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 335,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 338,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 379,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "ConnectionPropertiesPanel",
        "line": 404,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ConnectionPropertiesPanel",
        "line": 331,
        "column": 52,
        "firstCall": 330,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ConnectionPropertiesPanel",
        "line": 332,
        "column": 46,
        "firstCall": 330,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ConnectionPropertiesPanel",
        "line": 333,
        "column": 52,
        "firstCall": 330,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ConnectionPropertiesPanel",
        "line": 334,
        "column": 50,
        "firstCall": 330,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ConnectionPropertiesPanel",
        "line": 335,
        "column": 48,
        "firstCall": 330,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ContextualPropertiesPanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"from\" (48:13)",
        "line": 48,
        "column": 13
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/DataPreviewComponent.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unterminated string constant. (134:24)",
        "line": 134,
        "column": 24
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/DataPreviewPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "JSONFormatter",
        "line": 80,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 108,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 110,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 111,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 112,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 113,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 114,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 115,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 116,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "NodePreview",
        "line": 119,
        "column": 35,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 618,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 620,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 621,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 624,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 631,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 639,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "DataPreviewPanel",
        "line": 647,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 111,
        "column": 26,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 112,
        "column": 40,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 113,
        "column": 42,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 114,
        "column": 38,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 115,
        "column": 42,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "NodePreview",
        "line": 116,
        "column": 36,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DataPreviewPanel",
        "line": 621,
        "column": 36,
        "firstCall": 620,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "DataPreviewPanel",
        "line": 639,
        "column": 30,
        "firstCall": 631,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "DataPreviewPanel",
        "line": 647,
        "column": 18,
        "firstCall": 631,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/DatasetApplicationAssociation.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 30,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 31,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 34,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 35,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 38,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 41,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 42,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 45,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 79,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 93,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 31,
        "column": 58,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 34,
        "column": 44,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 35,
        "column": 52,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 38,
        "column": 42,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 41,
        "column": 38,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 42,
        "column": 38,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 93,
        "column": 34,
        "firstCall": 79,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/DatasetNodePropertiesPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "FieldDisplay",
        "line": 55,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 117,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 118,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 119,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 120,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 121,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 122,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 123,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 124,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SchemaDiscoveryDialog",
        "line": 125,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DatasetCard",
        "line": 488,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 567,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 570,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 571,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 572,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 573,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 574,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 575,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 576,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 577,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 578,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 579,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 580,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 583,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 588,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DatasetNodePropertiesPanel",
        "line": 598,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 120,
        "column": 38,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 121,
        "column": 50,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 122,
        "column": 44,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 123,
        "column": 28,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 124,
        "column": 42,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SchemaDiscoveryDialog",
        "line": 125,
        "column": 50,
        "firstCall": 119,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 571,
        "column": 32,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 572,
        "column": 28,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 573,
        "column": 52,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 574,
        "column": 48,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 575,
        "column": 38,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 576,
        "column": 38,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 577,
        "column": 60,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 578,
        "column": 52,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 579,
        "column": 46,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 580,
        "column": 60,
        "firstCall": 570,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 588,
        "column": 2,
        "firstCall": 583,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "DatasetNodePropertiesPanel",
        "line": 598,
        "column": 2,
        "firstCall": 583,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/DebugModePanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 213,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 216,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 219,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 220,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 221,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 222,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 223,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 224,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 225,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 226,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 227,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 228,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 229,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 230,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 231,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 232,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 239,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 240,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 249,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 279,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 318,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 329,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (6)",
        "component": "DebugModePanel",
        "line": 329,
        "column": 24,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 355,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 366,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (11)",
        "component": "DebugModePanel",
        "line": 366,
        "column": 33,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 498,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 515,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 595,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DebugModePanel",
        "line": 613,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "Accordion",
        "line": 1477,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 220,
        "column": 36,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 221,
        "column": 38,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 222,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 223,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 224,
        "column": 38,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 225,
        "column": 36,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 226,
        "column": 40,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 227,
        "column": 40,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 228,
        "column": 42,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 229,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 230,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 231,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 232,
        "column": 44,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 239,
        "column": 54,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 240,
        "column": 46,
        "firstCall": 219,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 318,
        "column": 29,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 329,
        "column": 24,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 355,
        "column": 25,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 366,
        "column": 33,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 498,
        "column": 34,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 515,
        "column": 22,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 595,
        "column": 27,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DebugModePanel",
        "line": 613,
        "column": 17,
        "firstCall": 279,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/EarningsMappingDetail.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"from\" (31:13)",
        "line": 31,
        "column": 13
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/EnhancedNodePalette.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 160,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 161,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 162,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 163,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 164,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 165,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 166,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 169,
        "column": 39,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 186,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 220,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 236,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 247,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 260,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 271,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 291,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 299,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 304,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 436,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 441,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 526,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 533,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 614,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (7)",
        "component": "EnhancedNodePalette",
        "line": 614,
        "column": 26,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 620,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 711,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (7)",
        "component": "EnhancedNodePalette",
        "line": 711,
        "column": 29,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EnhancedNodePalette",
        "line": 717,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 162,
        "column": 54,
        "firstCall": 161,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 163,
        "column": 46,
        "firstCall": 161,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 164,
        "column": 40,
        "firstCall": 161,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 165,
        "column": 36,
        "firstCall": 161,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 166,
        "column": 42,
        "firstCall": 161,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 220,
        "column": 25,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 236,
        "column": 21,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 247,
        "column": 27,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 260,
        "column": 25,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 271,
        "column": 29,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 291,
        "column": 28,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 299,
        "column": 25,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useTheme' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 304,
        "column": 20,
        "firstCall": 160,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 436,
        "column": 25,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useTheme' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 441,
        "column": 20,
        "firstCall": 160,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 526,
        "column": 25,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useTheme' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 533,
        "column": 20,
        "firstCall": 160,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 614,
        "column": 26,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useTheme' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 620,
        "column": 18,
        "firstCall": 160,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 711,
        "column": 29,
        "firstCall": 169,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useTheme' is called conditionally or multiple times in the same component",
        "component": "EnhancedNodePalette",
        "line": 717,
        "column": 18,
        "firstCall": 160,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ErrorVisualization.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 40,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 41,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 47,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 48,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 49,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 52,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 95,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 106,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 117,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 130,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 140,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ErrorVisualization",
        "line": 169,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ErrorIndicator",
        "line": 455,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "NodeErrorHighlight",
        "line": 548,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "EdgeErrorHighlight",
        "line": 620,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 41,
        "column": 44,
        "firstCall": 40,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 47,
        "column": 32,
        "firstCall": 40,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 48,
        "column": 44,
        "firstCall": 40,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 49,
        "column": 46,
        "firstCall": 40,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 106,
        "column": 23,
        "firstCall": 95,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 117,
        "column": 23,
        "firstCall": 95,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 130,
        "column": 25,
        "firstCall": 95,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ErrorVisualization",
        "line": 140,
        "column": 32,
        "firstCall": 95,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ExecutionMonitoring.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useExecutionMonitor' cannot be called inside a nested function",
        "component": "ExecutionMonitoringPanel",
        "line": 29,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ExecutionMonitoringPanel",
        "line": 31,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ExecutionMonitoringPanel",
        "line": 32,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ExecutionMonitoringPanel",
        "line": 35,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useExecutionMonitor' cannot be called inside a nested function",
        "component": "ExecutionTimeline",
        "line": 389,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ExecutionMonitoringPanel",
        "line": 32,
        "column": 54,
        "firstCall": 31,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FieldMappingEditor.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (27:0)",
        "line": 27,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FileBrowserComponent.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unterminated string constant. (53:12)",
        "line": 53,
        "column": 12
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FileMonitoringSystem.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 132,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 135,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 150,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 160,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 163,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 166,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 235,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 271,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 287,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 318,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 356,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 370,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 387,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 404,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FileNotificationSystem.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 184,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 255,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 258,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 259,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 260,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 261,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 262,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 263,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 264,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 265,
        "column": 70,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 266,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FileNotificationSystem",
        "line": 269,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 255,
        "column": 44,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 258,
        "column": 36,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 259,
        "column": 32,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 260,
        "column": 28,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 261,
        "column": 32,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 262,
        "column": 48,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 263,
        "column": 46,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 264,
        "column": 52,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 265,
        "column": 70,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileNotificationSystem",
        "line": 266,
        "column": 58,
        "firstCall": 184,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FilePreviewComponent.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 188,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 189,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 190,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 191,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 192,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 193,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 194,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 195,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 196,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 197,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 200,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 456,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 476,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 483,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 508,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "FilePreviewComponent",
        "line": 552,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 189,
        "column": 28,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 190,
        "column": 40,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 191,
        "column": 36,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 192,
        "column": 38,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 193,
        "column": 26,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 194,
        "column": 40,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 195,
        "column": 30,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 196,
        "column": 38,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 197,
        "column": 42,
        "firstCall": 188,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 476,
        "column": 2,
        "firstCall": 456,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 508,
        "column": 24,
        "firstCall": 483,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "FilePreviewComponent",
        "line": 552,
        "column": 27,
        "firstCall": 483,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FileTriggerMechanism.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 129,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 132,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 135,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 138,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 139,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 142,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 145,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 189,
        "column": 39,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 205,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 269,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 282,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 291,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 316,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 365,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 401,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 417,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 445,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 461,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 480,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 499,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FileTriggerMechanism",
        "line": 522,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 132,
        "column": 46,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 135,
        "column": 52,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 138,
        "column": 32,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 139,
        "column": 28,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 142,
        "column": 56,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 145,
        "column": 50,
        "firstCall": 129,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 205,
        "column": 27,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 269,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 282,
        "column": 28,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 291,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 316,
        "column": 28,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 365,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 401,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 417,
        "column": 31,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 445,
        "column": 21,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 461,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 480,
        "column": 30,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileTriggerMechanism",
        "line": 499,
        "column": 33,
        "firstCall": 189,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/FlowPerformanceMonitor.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FlowPerformanceMonitor",
        "line": 44,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FlowPerformanceMonitor",
        "line": 45,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FlowPerformanceMonitor",
        "line": 45,
        "column": 36,
        "firstCall": 44,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/HistoryPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 130,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 133,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 138,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationCreationDialog.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationDetailView.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 93,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 94,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 95,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 96,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 97,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 98,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 99,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 100,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 103,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 104,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 105,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 106,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 107,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useIntegrationDetailSync' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 115,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 124,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 125,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 128,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 129,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 130,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 131,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 134,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 137,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 209,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 217,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 245,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 289,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 339,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 367,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 384,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 401,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 94,
        "column": 32,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 95,
        "column": 28,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 96,
        "column": 36,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 97,
        "column": 36,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 98,
        "column": 40,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 99,
        "column": 30,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 100,
        "column": 54,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 103,
        "column": 36,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 104,
        "column": 36,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 105,
        "column": 40,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 106,
        "column": 38,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 107,
        "column": 36,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 124,
        "column": 42,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 125,
        "column": 40,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 128,
        "column": 50,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 129,
        "column": 52,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 130,
        "column": 56,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 131,
        "column": 44,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 209,
        "column": 2,
        "firstCall": 137,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 217,
        "column": 2,
        "firstCall": 137,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 289,
        "column": 25,
        "firstCall": 245,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 339,
        "column": 27,
        "firstCall": 245,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 367,
        "column": 27,
        "firstCall": 245,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 384,
        "column": 32,
        "firstCall": 245,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 401,
        "column": 31,
        "firstCall": 245,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationFlowCanvas.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 263,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 267,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNodesState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 268,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEdgesState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 269,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 270,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 271,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 272,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 273,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 274,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 275,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 276,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 277,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 278,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 279,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 280,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 281,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 282,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 283,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 284,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 285,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 286,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 287,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 288,
        "column": 64,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 289,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 290,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 291,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowHistory' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 294,
        "column": 59,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useAutoSave' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 295,
        "column": 59,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowValidation' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 296,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowTemplates' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 303,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLiveDataPreview' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 304,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useResponsiveCanvas' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 305,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowOptimizer' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 315,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useReactFlow' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 331,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 334,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 335,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 336,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 337,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 338,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyPress' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 339,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 342,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 346,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 350,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 354,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 358,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 362,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 373,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useOnViewportChange' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 387,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 394,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 418,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 434,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 443,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 451,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 522,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 566,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 602,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 628,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 649,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 683,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (6)",
        "component": "IntegrationFlowCanvas",
        "line": 683,
        "column": 21,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 714,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 744,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 774,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 788,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 796,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 804,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 813,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 873,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 915,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 950,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 971,
        "column": 33,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 980,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1024,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useMemo has too many dependencies (13)",
        "component": "IntegrationFlowCanvas",
        "line": 1024,
        "column": 24,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1134,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1145,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1155,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1211,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "IntegrationFlowCanvas",
        "line": 1220,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useMemo has too many dependencies (43)",
        "component": "IntegrationFlowCanvas",
        "line": 1220,
        "column": 23,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 271,
        "column": 48,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 272,
        "column": 38,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 273,
        "column": 36,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 274,
        "column": 40,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 275,
        "column": 36,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 276,
        "column": 32,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 277,
        "column": 28,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 278,
        "column": 32,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 279,
        "column": 50,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 280,
        "column": 26,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 281,
        "column": 60,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 282,
        "column": 56,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 283,
        "column": 50,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 284,
        "column": 46,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 285,
        "column": 54,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 286,
        "column": 34,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 287,
        "column": 48,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 288,
        "column": 64,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 289,
        "column": 46,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 290,
        "column": 50,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 291,
        "column": 58,
        "firstCall": 270,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useKeyPress' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 335,
        "column": 22,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useKeyPress' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 336,
        "column": 22,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useKeyPress' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 337,
        "column": 21,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useKeyPress' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 338,
        "column": 24,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useKeyPress' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 339,
        "column": 22,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 346,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 350,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 354,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 358,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 362,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 373,
        "column": 2,
        "firstCall": 342,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 418,
        "column": 22,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 434,
        "column": 22,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 443,
        "column": 26,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 451,
        "column": 24,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 522,
        "column": 27,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 566,
        "column": 27,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 602,
        "column": 27,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 628,
        "column": 27,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 649,
        "column": 20,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 683,
        "column": 21,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 714,
        "column": 20,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 744,
        "column": 27,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 774,
        "column": 32,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 788,
        "column": 29,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 796,
        "column": 26,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 804,
        "column": 30,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 813,
        "column": 28,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 873,
        "column": 30,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 915,
        "column": 31,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 950,
        "column": 33,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 971,
        "column": 33,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1024,
        "column": 24,
        "firstCall": 980,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1134,
        "column": 21,
        "firstCall": 980,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1145,
        "column": 22,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1155,
        "column": 17,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1211,
        "column": 21,
        "firstCall": 394,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "IntegrationFlowCanvas",
        "line": 1220,
        "column": 23,
        "firstCall": 980,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationMonitoringDashboard.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationTable.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/NotificationSettings.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/RunLogViewer.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Missing semicolon. (614:40)",
        "line": 614,
        "column": 40
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ScheduleConfiguration.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 49,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 50,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 51,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 68,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 69,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 70,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ScheduleConfiguration",
        "line": 108,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ScheduleConfiguration",
        "line": 50,
        "column": 54,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ScheduleConfiguration",
        "line": 51,
        "column": 48,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ScheduleConfiguration",
        "line": 68,
        "column": 44,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ScheduleConfiguration",
        "line": 69,
        "column": 36,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ScheduleConfiguration",
        "line": 70,
        "column": 52,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/StorageConfigPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 61,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 93,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 96,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 102,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 105,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 108,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 120,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 123,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 179,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 278,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 311,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (7)",
        "component": "StorageConfigPanel",
        "line": 311,
        "column": 23,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 345,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 353,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConfigPanel",
        "line": 376,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 93,
        "column": 36,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 96,
        "column": 38,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 102,
        "column": 48,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 105,
        "column": 48,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 108,
        "column": 50,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 120,
        "column": 34,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 123,
        "column": 54,
        "firstCall": 61,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 311,
        "column": 23,
        "firstCall": 278,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 345,
        "column": 31,
        "firstCall": 278,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 353,
        "column": 27,
        "firstCall": 278,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConfigPanel",
        "line": 376,
        "column": 32,
        "firstCall": 278,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/StorageFileBrowserPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 80,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 81,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 82,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 83,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 84,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 87,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 88,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 89,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 90,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 93,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 106,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 122,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 144,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 149,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 183,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 219,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 276,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 81,
        "column": 34,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 82,
        "column": 32,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 83,
        "column": 28,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 84,
        "column": 48,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 87,
        "column": 56,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 88,
        "column": 50,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 89,
        "column": 44,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 90,
        "column": 42,
        "firstCall": 80,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 106,
        "column": 24,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 122,
        "column": 27,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 149,
        "column": 25,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 183,
        "column": 29,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 219,
        "column": 23,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 276,
        "column": 25,
        "firstCall": 93,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/TemplateBrowser.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token, expected \"from\" (36:13)",
        "line": 36,
        "column": 13
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/TemplateForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 38,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 46,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 49,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 69,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 80,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 98,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 109,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 128,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 46,
        "column": 30,
        "firstCall": 38,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 69,
        "column": 26,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 80,
        "column": 23,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 98,
        "column": 26,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 109,
        "column": 23,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 128,
        "column": 23,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/UserRoleSwitcher.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Box' has already been declared. (1:23)",
        "line": 1,
        "column": 23
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/ValidationPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 89,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 91,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 92,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 93,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 94,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 97,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 109,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 120,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 153,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 164,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 188,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 198,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 215,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 232,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ValidationPanel",
        "line": 310,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 92,
        "column": 46,
        "firstCall": 91,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 93,
        "column": 44,
        "firstCall": 91,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 94,
        "column": 36,
        "firstCall": 91,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 109,
        "column": 17,
        "firstCall": 97,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 120,
        "column": 25,
        "firstCall": 97,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 164,
        "column": 26,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 188,
        "column": 34,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 198,
        "column": 26,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 215,
        "column": 27,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 232,
        "column": 24,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ValidationPanel",
        "line": 310,
        "column": 27,
        "firstCall": 153,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/VisualFieldMapper.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "Xarrow",
        "line": 114,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "FieldItem",
        "line": 149,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "FieldItem",
        "line": 150,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 303,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 304,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 305,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 306,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 307,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 309,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "TransformationDialog",
        "line": 408,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 712,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 714,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 715,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 716,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 717,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MultiSourceMapping",
        "line": 718,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1164,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1165,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1166,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1167,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1168,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1169,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1170,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1171,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1172,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1173,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1174,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1175,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1177,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1180,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1185,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1197,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1210,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1225,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1240,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1284,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1314,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1338,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1408,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1424,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1434,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1444,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1471,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1562,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (9)",
        "component": "VisualFieldMapper",
        "line": 1562,
        "column": 21,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1589,
        "column": 37,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1599,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "VisualFieldMapper",
        "line": 1623,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TransformationDialog",
        "line": 304,
        "column": 38,
        "firstCall": 303,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TransformationDialog",
        "line": 305,
        "column": 30,
        "firstCall": 303,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TransformationDialog",
        "line": 306,
        "column": 38,
        "firstCall": 303,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TransformationDialog",
        "line": 307,
        "column": 42,
        "firstCall": 303,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MultiSourceMapping",
        "line": 715,
        "column": 44,
        "firstCall": 714,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MultiSourceMapping",
        "line": 716,
        "column": 46,
        "firstCall": 714,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MultiSourceMapping",
        "line": 717,
        "column": 42,
        "firstCall": 714,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MultiSourceMapping",
        "line": 718,
        "column": 38,
        "firstCall": 714,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1166,
        "column": 42,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1167,
        "column": 34,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1168,
        "column": 50,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1169,
        "column": 50,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1170,
        "column": 46,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1171,
        "column": 48,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1172,
        "column": 50,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1173,
        "column": 56,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1174,
        "column": 52,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1175,
        "column": 44,
        "firstCall": 1165,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1197,
        "column": 29,
        "firstCall": 1185,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1225,
        "column": 26,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1240,
        "column": 30,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1284,
        "column": 26,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1314,
        "column": 25,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1338,
        "column": 21,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1408,
        "column": 27,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1424,
        "column": 30,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1434,
        "column": 36,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1444,
        "column": 30,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1471,
        "column": 24,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1562,
        "column": 21,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1589,
        "column": 37,
        "firstCall": 1185,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1599,
        "column": 28,
        "firstCall": 1210,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "VisualFieldMapper",
        "line": 1623,
        "column": 23,
        "firstCall": 1185,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/WebhookSettings.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 77,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 78,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 79,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 80,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 81,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 82,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 83,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 84,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 85,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 86,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 87,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 90,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 105,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 78,
        "column": 32,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 79,
        "column": 28,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 80,
        "column": 32,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 81,
        "column": 38,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 82,
        "column": 50,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 83,
        "column": 44,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 84,
        "column": 48,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 85,
        "column": 46,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 86,
        "column": 38,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 87,
        "column": 40,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 90,
        "column": 34,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/invitation/AcceptInvitation.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 32,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 33,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 34,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 35,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useParams' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 37,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 38,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "AcceptInvitation",
        "line": 41,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "AcceptInvitation",
        "line": 33,
        "column": 32,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "AcceptInvitation",
        "line": 34,
        "column": 28,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "AcceptInvitation",
        "line": 35,
        "column": 32,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/invitation/CompleteRegistration.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 22,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 23,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 24,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 25,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 26,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 27,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 30,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 48,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 50,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 56,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 23,
        "column": 32,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 24,
        "column": 28,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 25,
        "column": 38,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 26,
        "column": 42,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 27,
        "column": 56,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 30,
        "column": 34,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 48,
        "column": 30,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/invitation/OAuthCallback.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 14,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 15,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useParams' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 16,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 17,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 18,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 20,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "OAuthCallback",
        "line": 15,
        "column": 28,
        "firstCall": 14,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/profile/LoginHistory.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 20,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 21,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 22,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 23,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 26,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 27,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 30,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 37,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 40,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 21,
        "column": 28,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 22,
        "column": 42,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 23,
        "column": 38,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 26,
        "column": 26,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 27,
        "column": 40,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 30,
        "column": 32,
        "firstCall": 20,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/profile/SecuritySettings.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 48,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 49,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 50,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 51,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 52,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 53,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 56,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 57,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 58,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 59,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 61,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 71,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "SecuritySettings",
        "line": 74,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 49,
        "column": 42,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 50,
        "column": 52,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 51,
        "column": 44,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 52,
        "column": 42,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 53,
        "column": 48,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 56,
        "column": 52,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 57,
        "column": 56,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 58,
        "column": 54,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "SecuritySettings",
        "line": 59,
        "column": 58,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/profile/UserProfile.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 29,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 32,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 33,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 44,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 47,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 50,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 51,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 52,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 53,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 55,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 58,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 33,
        "column": 34,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 44,
        "column": 38,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 47,
        "column": 34,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 50,
        "column": 42,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 51,
        "column": 42,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 52,
        "column": 32,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 53,
        "column": 42,
        "firstCall": 32,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/security/MFAEnrollment.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 36,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 37,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 38,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 39,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 40,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 41,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 42,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 43,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 45,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 46,
        "column": 90,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MFAEnrollment",
        "line": 49,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 37,
        "column": 50,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 38,
        "column": 38,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 39,
        "column": 36,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 40,
        "column": 44,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 41,
        "column": 54,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 42,
        "column": 32,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAEnrollment",
        "line": 43,
        "column": 28,
        "firstCall": 36,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/security/MFAVerification.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 15,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 16,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 17,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 18,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 19,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 20,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 22,
        "column": 49,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 23,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 24,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 30,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 16,
        "column": 42,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 17,
        "column": 42,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 18,
        "column": 28,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 19,
        "column": 42,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 20,
        "column": 48,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/security/RecoveryCodes.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 39,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 40,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 41,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 42,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 43,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 45,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 52,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "RecoveryCodes",
        "line": 55,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RecoveryCodes",
        "line": 40,
        "column": 32,
        "firstCall": 39,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RecoveryCodes",
        "line": 41,
        "column": 58,
        "firstCall": 39,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RecoveryCodes",
        "line": 42,
        "column": 42,
        "firstCall": 39,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RecoveryCodes",
        "line": 43,
        "column": 48,
        "firstCall": 39,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/testing/ThemeTestComponent.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ThemeTestComponent",
        "line": 48,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ThemeTestComponent",
        "line": 49,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ThemeTestComponent",
        "line": 50,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ThemeTestComponent",
        "line": 51,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ThemeTestComponent",
        "line": 49,
        "column": 38,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ThemeTestComponent",
        "line": 50,
        "column": 34,
        "firstCall": 48,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/users/UserManagement.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 27,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 30,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 31,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 32,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 33,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 36,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 37,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 38,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 41,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 42,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 45,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 46,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 47,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 50,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 31,
        "column": 38,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 32,
        "column": 26,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 33,
        "column": 40,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 36,
        "column": 42,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 37,
        "column": 38,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 38,
        "column": 40,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 41,
        "column": 32,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 42,
        "column": 28,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 45,
        "column": 38,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 46,
        "column": 42,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 47,
        "column": 42,
        "firstCall": 30,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/docs/DesignSystemDemo.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 62,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 63,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 66,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 78,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 81,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 82,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 85,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 88,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DesignSystemDemo",
        "line": 91,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DemoSection",
        "line": 1069,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 78,
        "column": 38,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 81,
        "column": 36,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 82,
        "column": 44,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 85,
        "column": 34,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 88,
        "column": 42,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DesignSystemDemo",
        "line": 91,
        "column": 26,
        "firstCall": 66,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/hooks/useMediaQuery.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 9,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 11,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/legacy/TooltipLegacy.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TooltipLegacy",
        "line": 12,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/BreadcrumbContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useBreadcrumbs' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 71,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 74,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useBreadcrumbs' cannot be called inside a nested function",
        "component": "TestHookComponent",
        "line": 384,
        "column": 8,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/EarningsContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEarnings' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 143,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 146,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEarnings' cannot be called inside a nested function",
        "component": "TestHookComponent",
        "line": 709,
        "column": 8,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/IntegrationContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useIntegration' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 215,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 218,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useIntegration' cannot be called inside a nested function",
        "component": "TestHookComponent",
        "line": 1044,
        "column": 8,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/KeyboardShortcutsContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyboardShortcuts' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 94,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 97,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 111,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useKeyboardShortcuts' cannot be called inside a nested function",
        "component": "TestHookComponent",
        "line": 443,
        "column": 8,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "TestComponent",
        "line": 111,
        "column": 2,
        "firstCall": 97,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/NotificationContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "EnhancedTestComponent",
        "line": 42,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/ResourceContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useResource' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 144,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/SettingsContext.test.js",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useSettings' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 76,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 79,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useSettings' cannot be called inside a nested function",
        "component": "TestHookComponent",
        "line": 464,
        "column": 8,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/contexts/WebhookContext.test.js",
    "issues": [
      {
        "type": "conditional-hook",
        "severity": "error",
        "message": "React Hook 'useWebhook' cannot be called inside a LogicalExpression",
        "component": "TestComponent",
        "line": 191,
        "column": 6,
        "fix": {
          "type": "extract-hook",
          "description": "Move hook outside of conditional statement",
          "automated": true,
          "replacement": {
            "lookBehind": 190,
            "extract": "// WebhookContext.test.js\n// -----------------------------------------------------------------------------\n// Tests for WebhookContext provider using dependency injection pattern\n\nimport React from 'react';\nimport { render, screen, waitFor, act } from '@testing-library/react';\n// Using older userEvent API that works with our testing setup\nimport { fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\n\n// Import the context directly (no need for mocking apiServiceFactory)\nimport { WebhookProvider, useWebhook } from '../../contexts/WebhookContext';\n\n// Mock webhook data\nconst mockWebhooks = [\n  { id: '1', name: 'Webhook 1', endpoint: 'https://example.com/hook1', active: true },\n  { id: '2', name: 'Webhook 2', endpoint: 'https://example.com/hook2', active: false },\n];\n\nconst mockWebhookTemplates = [\n  { id: 't1', name: 'Github', description: 'Github webhook template', schema: {} },\n  { id: 't2', name: 'Slack', description: 'Slack webhook template', schema: {} },\n];\n\n// Create individual mock functions for all API methods\nconst mockGetAll = jest.fn().mockResolvedValue(mockWebhooks);\nconst mockGetById = jest.fn(id => {\n  const webhook = mockWebhooks.find(w => w.id === id);\n  return webhook ? Promise.resolve(webhook) : Promise.reject(new Error('Webhook not found'));\n});\nconst mockCreate = jest.fn(data =>\n  Promise.resolve({\n    id: '3',\n    ...data,\n    active: true,\n  })\n);\nconst mockUpdate = jest.fn((id, data) =>\n  Promise.resolve({\n    id,\n    ...data,\n    lastUpdated: new Date().toISOString(),\n  })\n);\nconst mockDelete = jest.fn(id => Promise.resolve({ success: true }));\nconst mockExecuteCustom = jest.fn((endpoint, method, data, options) => {\n  if (endpoint.includes('templates')) {\n    return Promise.resolve(mockWebhookTemplates);\n  }\n  if (endpoint.includes('test')) {\n    return Promise.resolve({\n      success: true,\n      result: { statusCode: 200, responseTime: 345 },\n    });\n  }\n  if (endpoint.includes('integration-status')) {\n    return Promise.resolve({\n      connected: true,\n      lastSync: new Date().toISOString(),\n      pendingEvents: 0,\n    });\n  }\n  if (endpoint.includes('logs')) {\n    return Promise.resolve([\n      { timestamp: new Date().toISOString(), status: 'success', responseTime: 240 },\n      {\n        timestamp: new Date().toISOString(),\n        status: 'error',\n        errorMessage: 'Connection timeout',\n      },\n    ]);\n  }\n  if (endpoint.includes('documentation')) {\n    return Promise.resolve({\n      schema: { type: 'object', properties: {} },\n      examples: [],\n      usageNotes: 'Example usage notes',\n    });\n  }\n  if (endpoint.includes('parse-payload')) {\n    return Promise.resolve({\n      valid: true,\n      parsed: { event: 'push', repository: 'test-repo' },\n    });\n  }\n  if (endpoint.includes('create-from-template')) {\n    return Promise.resolve({\n      id: 't1-instance',\n      name: data?.name || 'Template Instance',\n      endpoint: 'https://example.com/template-instance',\n      active: true,\n      templateId: data?.templateId,\n    });\n  }\n  if (endpoint.includes('/events')) {\n    if (endpoint.includes('/replay')) {\n      return Promise.resolve({\n        success: true,\n        message: 'Event replayed successfully',\n        newEventId: 'new-event-123'\n      });\n    }\n    return Promise.resolve([\n      { \n        id: 'event-1',\n        webhookId: '1',\n        status: 'success',\n        timestamp: new Date().toISOString(),\n        payload: { event: 'push', repository: 'test-repo' },\n        response: { statusCode: 200, body: 'OK' },\n        duration: 156\n      },\n      { \n        id: 'event-2',\n        webhookId: '1',\n        status: 'failed',\n        timestamp: new Date().toISOString(),\n        payload: { event: 'push', repository: 'test-repo' },\n        error: 'Connection refused',\n        duration: 2000\n      }\n    ]);\n  }\n  if (endpoint.includes('/security')) {\n    if (method === 'PUT') {\n      return Promise.resolve({\n        ...data,\n        updated: true\n      });\n    }\n    return Promise.resolve({\n      authType: 'api_key',\n      apiKey: '********',\n      signatureMethod: 'sha256',\n      includePayloadInSignature: true,\n      ipFiltering: {\n        enabled: false,\n        allowedIps: []\n      }\n    });\n  }\n  return Promise.resolve({});\n});\n\n// Create a complete mock API service object\nconst mockApiService = {\n  getAll: mockGetAll,\n  getById: mockGetById,\n  create: mockCreate,\n  update: mockUpdate,\n  delete: mockDelete,\n  executeCustom: mockExecuteCustom,\n};\n\n// Test component that uses the context\nconst TestComponent = () => {\n  // Added display name\n  TestComponent.displayName = 'TestComponent';\n\n\n  const {\n    webhooks = [],\n    webhook,\n    webhookTemplates = [],\n    webhookEvents = {},\n    securitySettings = {},\n    isLoading,\n    error,\n    templateLoading,\n    templateError,\n    eventsLoading,\n    eventsError,\n    securityLoading,\n    securityError,\n    fetchWebhooks,\n    fetchWebhookById,\n    createWebhook,\n    updateWebhook,\n    deleteWebhook,\n    testWebhook,\n    fetchWebhookTemplates,\n    createWebhookFromTemplate,\n    fetchIntegrationStatus,\n    fetchWebhookEvents,\n    replayWebhookEvent,\n    fetchSecuritySettings,\n    updateSecuritySettings,\n    fetchWebhookLogs,\n    generateWebhookDocumentation,\n    parseWebhookPayload,\n  } = useWebhook() || {}; // Add fallback empty object\n\n  // Add safety check for undefined values\n  const safeWebhooks = webhooks || [];\n  const safeTemplates = webhookTemplates || [];\n\n  return (\n    <div>\n      <div data-testid=\"loading-state\">{isLoading ? 'Loading' : 'Not Loading'}</div>\n      <div data-testid=\"template-loading\">{templateLoading ? 'Loading' : 'Not Loading'}</div>\n      <div data-testid=\"events-loading\">{eventsLoading ? 'Loading' : 'Not Loading'}</div>\n      <div data-testid=\"security-loading\">{securityLoading ? 'Loading' : 'Not Loading'}</div>\n      \n      <div data-testid=\"error-state\">{error || 'No Error'}</div>\n      <div data-testid=\"template-error\">{templateError || 'No Error'}</div>\n      <div data-testid=\"events-error\">{eventsError || 'No Error'}</div>\n      <div data-testid=\"security-error\">{securityError || 'No Error'}</div>\n      \n      <div data-testid=\"webhooks-count\">{safeWebhooks.length}</div>\n      <div data-testid=\"webhook-data\">{webhook ? JSON.stringify(webhook) : 'No Webhook'}</div>\n      <div data-testid=\"templates-count\">{safeTemplates.length}</div>\n      <div data-testid=\"webhook-events\">{Object.keys(webhookEvents).length > 0 ? 'Has Events' : 'No Events'}</div>\n      <div data-testid=\"security-settings\">{Object.keys(securitySettings).length > 0 ? 'Has Settings' : 'No Settings'}</div>\n\n      <button data-testid=\"fetch-webhooks-button\" onClick={fetchWebhooks}>\n        Fetch Webhooks\n      </button>\n\n      <button data-testid=\"fetch-webhook-button\" onClick={() => fetchWebhookById('1')}>\n        Fetch Webhook\n      </button>\n\n      <button\n        data-testid=\"create-webhook-button\"\n        onClick={() => createWebhook({ name: 'New Webhook', endpoint: 'https://example.com/new' })}\n      >\n        Create Webhook\n      </button>\n\n      <button\n        data-testid=\"update-webhook-button\"\n        onClick={() => updateWebhook('1', { name: 'Updated Webhook' })}\n      >\n        Update Webhook\n      </button>\n\n      <button data-testid=\"delete-webhook-button\" onClick={() => deleteWebhook('1')}>\n        Delete Webhook\n      </button>\n\n      <button\n        data-testid=\"test-webhook-button\"\n        onClick={() => testWebhook('1', { payload: { test: true } })}\n      >\n        Test Webhook\n      </button>\n\n      <button data-testid=\"fetch-templates-button\" onClick={fetchWebhookTemplates}>\n        Fetch Templates\n      </button>\n\n      <button\n        data-testid=\"create-from-template-button\"\n        onClick={() => createWebhookFromTemplate('t1', { name: 'Github Hook' })}\n      >\n        Create From Template\n      </button>\n\n      <button data-testid=\"fetch-status-button\" onClick={() => fetchIntegrationStatus('1')}>\n        Fetch Status\n      </button>\n\n      <button data-testid=\"fetch-logs-button\" onClick={() => fetchWebhookLogs('1')}>\n        Fetch Logs\n      </button>\n\n      <button \n        data-testid=\"generate-docs-button\" \n        onClick={() => generateWebhookDocumentation('1')}\n      >\n        Generate Docs\n      </button>\n      \n      <button \n        data-testid=\"parse-payload-button\" \n        onClick={() => parseWebhookPayload('1', { event: 'push' })}\n      >\n        Parse Payload\n      </button>\n      \n      <button\n        data-testid=\"fetch-events-button\"\n        onClick={() => fetchWebhookEvents('1', { status: 'all' })}\n      >\n        Fetch Events\n      </button>\n      \n      <button\n        data-testid=\"replay-event-button\"\n        onClick={() => replayWebhookEvent('1', 'event-2')}\n      >\n        Replay Event\n      </button>\n      \n      <button\n        data-testid=\"fetch-security-button\"\n        onClick={() => fetchSecuritySettings('1')}\n      >\n        Fetch Security\n      </button>\n      \n      <button\n        data-testid=\"update-security-button\"\n        onClick={() => updateSecuritySettings('1', { \n          authType: 'basic',\n          username: 'testuser',\n          password: 'testpass'\n        })}\n      >\n        Update Security\n      </button>\n    </div>\n  );\n};\n\ndescribe('WebhookContext', () => {\n  // Create a simple mock component that directly tests context values\n  const SimpleTestComponent = ({ onLoad }) => {\n  // Added display name\n  SimpleTestComponent.displayName = 'SimpleTestComponent';\n\n\n    const context = useWebhook();\n    \n    React.useEffect(() => {\n      if (onLoad) onLoad(context);\n    }, [onLoad]);\n    \n    return <div data-testid=\"test-component\">Test Component</div>;\n  };\n  \n  // Setup test wrapper with dependency injection and controlled initialization\n  const renderWithWebhookContext = (customApiService = mockApiService) => {\n  // Added display name\n  renderWithWebhookContext.displayName = 'renderWithWebhookContext';\n\n\n    let contextValues;\n    \n    const wrapper = render(\n      <WebhookProvider apiService={customApiService}>\n        <SimpleTestComponent \n          onLoad={(context) => {\n            contextValues = context;\n          }} \n        />\n      </WebhookProvider>\n    );\n    \n    return {\n      ...wrapper,\n      getContextValues: () => contextValues\n    };\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test('initializes provider API service correctly', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n\n    // Assert that the provider has been initialized\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n\n    // Verify mock was called during initialization\n    expect(mockGetAll).toHaveBeenCalled();\n    expect(mockExecuteCustom).toHaveBeenCalledWith('templates', 'GET');\n  });\n\n  test('fetches a single webhook by ID', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Call the fetchWebhookById method directly\n    const id = '1';\n    await act(async () => {\n      await getContextValues().fetchWebhookById(id);\n    });\n    \n    // Verify mock was called with expected ID\n    expect(mockGetById).toHaveBeenCalledWith(id);\n  });\n\n  test('creates a new webhook', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Data for new webhook\n    const newWebhookData = {\n      name: 'New Webhook',\n      endpoint: 'https://example.com/new',\n    };\n    \n    // Call createWebhook directly\n    await act(async () => {\n      await getContextValues().createWebhook(newWebhookData);\n    });\n    \n    // Verify mock was called with expected data\n    expect(mockCreate).toHaveBeenCalledWith(newWebhookData);\n  });\n\n  test('updates an existing webhook', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Data and ID for the webhook update\n    const id = '1';\n    const updateData = { name: 'Updated Webhook' };\n    \n    // Call updateWebhook directly\n    await act(async () => {\n      await getContextValues().updateWebhook(id, updateData);\n    });\n    \n    // Verify mock was called with expected ID and data\n    expect(mockUpdate).toHaveBeenCalledWith(id, updateData);\n  });\n\n  test('deletes a webhook', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // ID for the webhook to delete\n    const id = '1';\n    \n    // Call deleteWebhook directly\n    await act(async () => {\n      await getContextValues().deleteWebhook(id);\n    });\n    \n    // Verify mock was called with expected ID\n    expect(mockDelete).toHaveBeenCalledWith(id);\n  });\n\n  test('tests a webhook', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // ID and data for testing the webhook\n    const id = '1';\n    const testPayload = { payload: { test: true } };\n    \n    // Call testWebhook directly\n    await act(async () => {\n      await getContextValues().testWebhook(id, testPayload);\n    });\n    \n    // Verify mock was called with expected path and data\n    expect(mockExecuteCustom).toHaveBeenCalledWith(`${id}/test`, 'POST', testPayload);\n  });\n\n  test('creates a webhook from template', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Template ID and customization data\n    const templateId = 't1';\n    const customization = { name: 'Github Hook' };\n    \n    // Call createWebhookFromTemplate directly\n    await act(async () => {\n      await getContextValues().createWebhookFromTemplate(templateId, customization);\n    });\n    \n    // Verify mock was called with expected path and data\n    expect(mockExecuteCustom).toHaveBeenCalledWith('create-from-template', 'POST', {\n      templateId,\n      ...customization,\n    });\n  });\n\n  test('fetches webhook documentation', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID for documentation\n    const webhookId = '1';\n    \n    // Call generateWebhookDocumentation directly\n    await act(async () => {\n      await getContextValues().generateWebhookDocumentation(webhookId);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(`${webhookId}/documentation`, 'GET');\n  });\n\n  test('parses webhook payload', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID and payload data\n    const webhookId = '1';\n    const payload = { event: 'push' };\n    \n    // Call parseWebhookPayload directly\n    await act(async () => {\n      await getContextValues().parseWebhookPayload(webhookId, payload);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(`${webhookId}/parse-payload`, 'POST', { payload });\n  });\n  \n  test('fetches webhook events', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID and filters\n    const webhookId = '1';\n    const filters = { status: 'all' };\n    \n    // Call fetchWebhookEvents directly\n    await act(async () => {\n      await getContextValues().fetchWebhookEvents(webhookId, filters);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(\n      `${webhookId}/events`, \n      'GET', \n      null, \n      { params: filters }\n    );\n  });\n  \n  test('replays webhook event', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID and event ID\n    const webhookId = '1';\n    const eventId = 'event-2';\n    \n    // Call replayWebhookEvent directly\n    await act(async () => {\n      await getContextValues().replayWebhookEvent(webhookId, eventId);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(\n      `${webhookId}/events/${eventId}/replay`, \n      'POST'\n    );\n  });\n  \n  test('fetches security settings', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID\n    const webhookId = '1';\n    \n    // Call fetchSecuritySettings directly\n    await act(async () => {\n      await getContextValues().fetchSecuritySettings(webhookId);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(`${webhookId}/security`, 'GET');\n  });\n  \n  test('updates security settings', async () => {\n    const { getContextValues } = renderWithWebhookContext();\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // Webhook ID and security settings\n    const webhookId = '1';\n    const settings = {\n      authType: 'basic',\n      username: 'testuser',\n      password: 'testpass'\n    };\n    \n    // Call updateSecuritySettings directly\n    await act(async () => {\n      await getContextValues().updateSecuritySettings(webhookId, settings);\n    });\n    \n    // Verify mock was called correctly\n    expect(mockExecuteCustom).toHaveBeenCalledWith(\n      `${webhookId}/security`, \n      'PUT',\n      settings\n    );\n  });\n\n  test('handles API errors gracefully', async () => {\n    // Mock getById to reject for this specific test\n    const errorApiService = {\n      ...mockApiService,\n      getById: jest.fn().mockRejectedValue(new Error('API error')),\n    };\n\n    const { getContextValues } = renderWithWebhookContext(errorApiService);\n    \n    // Wait for context to be available\n    await waitFor(() => {\n      expect(getContextValues()).toBeDefined();\n    });\n    \n    // ID for the webhook to fetch\n    const id = '1';\n    \n    // Call fetchWebhookById that should fail\n    await act(async () => {\n      try {\n        await getContextValues().fetchWebhookById(id);\n      } catch (error) {\n        // Expected error, ignore for test\n      }\n    });\n    \n    // Verify mock was called with expected ID\n    expect(errorApiService.getById).toHaveBeenCalledWith(id);\n    \n    // Since we're testing error case, mocking setError is better than checking context value\n    // The error would be set via the setError function from useState\n    // Instead, we'll verify the mock function was called correctly\n  });\n});\n",
            "variableName": "useWebhookResult"
          }
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useWebhook' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 191,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useWebhook' cannot be called inside a nested function",
        "component": "SimpleTestComponent",
        "line": 323,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/integration/ComplexFlowValidator.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 41,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 42,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 43,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 44,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 45,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 96,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 97,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 98,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 110,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 619,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 677,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 841,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 42,
        "column": 36,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 43,
        "column": 28,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 44,
        "column": 32,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 45,
        "column": 54,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 96,
        "column": 40,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 97,
        "column": 52,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 98,
        "column": 34,
        "firstCall": 41,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 619,
        "column": 22,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 677,
        "column": 26,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 841,
        "column": 24,
        "firstCall": 110,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/integration/DynamicDataSourceTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unterminated string constant. (2:0)",
        "line": 2,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/integration/NodeTypesTester.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 62,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 63,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 64,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 65,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 66,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 67,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 68,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 69,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 70,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "NodeTypesTester",
        "line": 123,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/integration/StorageConnectorTester.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 78,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 79,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 80,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 81,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 82,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 83,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 84,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 85,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 86,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 89,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 176,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 343,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 366,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageConnectorTester",
        "line": 557,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 79,
        "column": 48,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 80,
        "column": 36,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 81,
        "column": 28,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 82,
        "column": 32,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 83,
        "column": 40,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 84,
        "column": 40,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 85,
        "column": 48,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 86,
        "column": 46,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 89,
        "column": 50,
        "firstCall": 78,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 343,
        "column": 38,
        "firstCall": 176,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 366,
        "column": 26,
        "firstCall": 176,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageConnectorTester",
        "line": 557,
        "column": 24,
        "firstCall": 176,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/standalone/TestDataTable.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestDataTable",
        "line": 75,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestDataTable",
        "line": 76,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestDataTable",
        "line": 77,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestDataTable",
        "line": 78,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestDataTable",
        "line": 79,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestDataTable",
        "line": 76,
        "column": 32,
        "firstCall": 75,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestDataTable",
        "line": 77,
        "column": 34,
        "firstCall": 75,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestDataTable",
        "line": 78,
        "column": 26,
        "firstCall": 75,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestDataTable",
        "line": 79,
        "column": 40,
        "firstCall": 75,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/standalone/TestInputFieldLegacy.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 50,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 55,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/standalone/TestIntegrationFlowCanvas.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 115,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 116,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 117,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 118,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 119,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 120,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 121,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 122,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestIntegrationFlowCanvas",
        "line": 123,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 116,
        "column": 28,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 117,
        "column": 48,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 118,
        "column": 52,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 119,
        "column": 56,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 120,
        "column": 46,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 121,
        "column": 36,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 122,
        "column": 52,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestIntegrationFlowCanvas",
        "line": 123,
        "column": 50,
        "firstCall": 115,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/standalone/TestSelectLegacy.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 70,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 73,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 74,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 77,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 139,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/standalone/TestUserProfile.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestUserProfile",
        "line": 15,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TestUserProfile",
        "line": 16,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TestUserProfile",
        "line": 16,
        "column": 32,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/templates/context.test.template.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "TestComponent",
        "line": 33,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/utils/react-compat-adapters/react-json-view-adapter.js",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'push')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/AlertConfiguration.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (5:43)",
        "line": 5,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/ApplicationsManager.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 171,
        "column": 41,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useResource' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 189,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 191,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 192,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 193,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 194,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 195,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 196,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 197,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 198,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 199,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 200,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 201,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 202,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 203,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 204,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 207,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 208,
        "column": 64,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 209,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 210,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 211,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 212,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 213,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 214,
        "column": 60,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 217,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 218,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 220,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 233,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 247,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ApplicationsManager",
        "line": 250,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 192,
        "column": 38,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 193,
        "column": 50,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 194,
        "column": 52,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 195,
        "column": 56,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 196,
        "column": 46,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 197,
        "column": 38,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 198,
        "column": 52,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 199,
        "column": 36,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 200,
        "column": 52,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 201,
        "column": 46,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 202,
        "column": 60,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 203,
        "column": 46,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 204,
        "column": 52,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 207,
        "column": 56,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 208,
        "column": 64,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 209,
        "column": 48,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 210,
        "column": 50,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 211,
        "column": 50,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 212,
        "column": 52,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 213,
        "column": 46,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 214,
        "column": 60,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 217,
        "column": 54,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 218,
        "column": 56,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 220,
        "column": 34,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 233,
        "column": 48,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ApplicationsManager",
        "line": 247,
        "column": 38,
        "firstCall": 191,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/DocumentationAnalytics.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 77,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 78,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 79,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 80,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 81,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 82,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 83,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 84,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 87,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 90,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentationAnalytics",
        "line": 93,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 78,
        "column": 38,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 79,
        "column": 32,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 80,
        "column": 28,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 81,
        "column": 28,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 82,
        "column": 40,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 83,
        "column": 44,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationAnalytics",
        "line": 84,
        "column": 52,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/EmailConfiguration.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 19,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 41,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 42,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 45,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 48,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 49,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 52,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 53,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 54,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 55,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 58,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "EmailConfiguration",
        "line": 61,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/ErrorLogViewer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 109,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 110,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 111,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 112,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 113,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 114,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 115,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 121,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 122,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 123,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 124,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 125,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 126,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 129,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "ErrorLogViewer",
        "line": 340,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 110,
        "column": 32,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 111,
        "column": 28,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 112,
        "column": 26,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 113,
        "column": 40,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 114,
        "column": 36,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 115,
        "column": 32,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 121,
        "column": 40,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 122,
        "column": 40,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 123,
        "column": 46,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 124,
        "column": 38,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 125,
        "column": 42,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ErrorLogViewer",
        "line": 126,
        "column": 40,
        "firstCall": 109,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/InvitationForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 12,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 21,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 22,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 23,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 26,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 28,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 21,
        "column": 30,
        "firstCall": 12,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 22,
        "column": 36,
        "firstCall": 12,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 23,
        "column": 40,
        "firstCall": 12,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 26,
        "column": 42,
        "firstCall": 12,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/InvitationList.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 19,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 20,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 21,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 24,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 25,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 28,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 29,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 31,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 34,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 20,
        "column": 32,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 21,
        "column": 28,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 24,
        "column": 26,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 25,
        "column": 40,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 28,
        "column": 38,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 29,
        "column": 42,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/MFASettings.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 22,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 46,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 47,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 48,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 49,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MFASettings",
        "line": 52,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/ReleasesManager.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 142,
        "column": 41,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 143,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 144,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 145,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 146,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 147,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 148,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 149,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 150,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 151,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 152,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 153,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 162,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 163,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 164,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 165,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 166,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 167,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ReleasesManager",
        "line": 170,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/TenantsManager.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 61,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 62,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CreateTenantDialog",
        "line": 68,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 184,
        "column": 41,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useResource' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 202,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 204,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 205,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 206,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 207,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 210,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "TenantsManager",
        "line": 301,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CreateTenantDialog",
        "line": 68,
        "column": 42,
        "firstCall": 62,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 205,
        "column": 38,
        "firstCall": 204,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 206,
        "column": 50,
        "firstCall": 204,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TenantsManager",
        "line": 207,
        "column": 36,
        "firstCall": 204,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/UserDetail.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useParams' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 24,
        "column": 17,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 25,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 28,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 29,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 30,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 31,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 32,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 35,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 36,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 46,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 49,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 50,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 51,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 52,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserDetail",
        "line": 55,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 29,
        "column": 32,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 30,
        "column": 28,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 31,
        "column": 34,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 32,
        "column": 42,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 35,
        "column": 34,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 36,
        "column": 34,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 46,
        "column": 38,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 49,
        "column": 52,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 50,
        "column": 56,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 51,
        "column": 54,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserDetail",
        "line": 52,
        "column": 58,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/UserManagement.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 24,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 25,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 26,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 29,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 30,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 33,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 34,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 35,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 38,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 39,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 42,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 43,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 44,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 45,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 47,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 50,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 25,
        "column": 32,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 26,
        "column": 28,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 29,
        "column": 26,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 30,
        "column": 40,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 33,
        "column": 38,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 34,
        "column": 42,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 35,
        "column": 38,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 38,
        "column": 50,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 39,
        "column": 46,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 42,
        "column": 52,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 43,
        "column": 56,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 44,
        "column": 54,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 45,
        "column": 58,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/DataTable.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (38:32)",
        "line": 38,
        "column": 32
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/KeyboardShortcutsHelp.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "KeyCap",
        "line": 34,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "KeyboardShortcutsHelp",
        "line": 117,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": "KeyboardShortcutsHelp",
        "line": 118,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/Navigation.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 53,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 54,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 55,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 56,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 59,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "Navigation",
        "line": 60,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "Navigation",
        "line": 60,
        "column": 42,
        "firstCall": 59,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/NotificationCenter.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 27,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNotification' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 29,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "NotificationCenter",
        "line": 31,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/SearchBar.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (34:60)",
        "line": 34,
        "column": 60
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/common/VirtualizedDataTable.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (55:71)",
        "line": 55,
        "column": 71
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/documentation/PublicDocumentationPortal.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:52)",
        "line": 1,
        "column": 52
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/ContextualPropertiesPanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (16:71)",
        "line": 16,
        "column": 71
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/DataPreviewComponent.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/DatasetApplicationAssociation.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 26,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 27,
        "column": 58,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 30,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 31,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 34,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 37,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 38,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 41,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 75,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "DatasetApplicationAssociation",
        "line": 86,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 27,
        "column": 58,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 30,
        "column": 44,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 31,
        "column": 52,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 34,
        "column": 42,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 37,
        "column": 38,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 38,
        "column": 38,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "DatasetApplicationAssociation",
        "line": 86,
        "column": 34,
        "firstCall": 75,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/DebugModePanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:64)",
        "line": 1,
        "column": 64
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/EarningsMappingDetail.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (5:43)",
        "line": 5,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/FileBrowserComponent.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 147,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 148,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 149,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 150,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 151,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 152,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 153,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 154,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 157,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 158,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 159,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 160,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 161,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 164,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 167,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 248,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 253,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 259,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 271,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 276,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 285,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 291,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 315,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 322,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 327,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 334,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 380,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 392,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 404,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 413,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileBrowserComponent",
        "line": 427,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 148,
        "column": 34,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 149,
        "column": 32,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 150,
        "column": 28,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 151,
        "column": 38,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 152,
        "column": 38,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 153,
        "column": 44,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 154,
        "column": 42,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 157,
        "column": 46,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 158,
        "column": 50,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 159,
        "column": 46,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 160,
        "column": 38,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 161,
        "column": 54,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 164,
        "column": 38,
        "firstCall": 147,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 253,
        "column": 27,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 259,
        "column": 21,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 271,
        "column": 23,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 276,
        "column": 21,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 285,
        "column": 23,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 291,
        "column": 26,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 315,
        "column": 23,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 322,
        "column": 24,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 327,
        "column": 29,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useMemo' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 380,
        "column": 22,
        "firstCall": 334,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 392,
        "column": 22,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 404,
        "column": 25,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 413,
        "column": 26,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "FileBrowserComponent",
        "line": 427,
        "column": 21,
        "firstCall": 167,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/FileMonitoringSystem.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 128,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 131,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 146,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 156,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 159,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 162,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 228,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 261,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 274,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 302,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 337,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 348,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 362,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "FileMonitoringSystem",
        "line": 376,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/FileNotificationSystem.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:64)",
        "line": 1,
        "column": 64
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/FilePreviewComponent.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:65)",
        "line": 1,
        "column": 65
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/FileTriggerMechanism.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/HistoryPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 119,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 122,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": "HistoryPanel",
        "line": 127,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/IntegrationDetailView.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 87,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 88,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 89,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 90,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 91,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 92,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 93,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 94,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 97,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 98,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 99,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 100,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 101,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useIntegrationDetailSync' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 109,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 118,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 119,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 122,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 123,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 124,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 125,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 128,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 131,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 203,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 211,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 239,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 280,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 327,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 352,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 366,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "IntegrationDetailView",
        "line": 380,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 88,
        "column": 32,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 89,
        "column": 28,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 90,
        "column": 36,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 91,
        "column": 36,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 92,
        "column": 40,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 93,
        "column": 30,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 94,
        "column": 54,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 97,
        "column": 36,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 98,
        "column": 36,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 99,
        "column": 40,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 100,
        "column": 38,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 101,
        "column": 36,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 118,
        "column": 42,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 119,
        "column": 40,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 122,
        "column": 50,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 123,
        "column": 52,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 124,
        "column": 56,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 125,
        "column": 44,
        "firstCall": 87,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 203,
        "column": 2,
        "firstCall": 131,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 211,
        "column": 2,
        "firstCall": 131,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 280,
        "column": 25,
        "firstCall": 239,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 327,
        "column": 27,
        "firstCall": 239,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 352,
        "column": 27,
        "firstCall": 239,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 366,
        "column": 32,
        "firstCall": 239,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "IntegrationDetailView",
        "line": 380,
        "column": 31,
        "firstCall": 239,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/IntegrationFlowCanvas.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (31:73)",
        "line": 31,
        "column": 73
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/RunLogViewer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 83,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 84,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 85,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 86,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 87,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 88,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 93,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 94,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 97,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": "RunLogViewer",
        "line": 242,
        "column": 16,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 84,
        "column": 32,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 85,
        "column": 28,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 86,
        "column": 26,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 87,
        "column": 40,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 88,
        "column": 32,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 93,
        "column": 40,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "RunLogViewer",
        "line": 94,
        "column": 40,
        "firstCall": 83,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/StorageConfigPanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/StorageFileBrowserPanel.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 77,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 78,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 79,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 80,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 81,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 84,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 85,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 86,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 87,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 90,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 100,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 113,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 128,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 133,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 164,
        "column": 29,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 197,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "StorageFileBrowserPanel",
        "line": 243,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 78,
        "column": 34,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 79,
        "column": 32,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 80,
        "column": 28,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 81,
        "column": 48,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 84,
        "column": 56,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 85,
        "column": 50,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 86,
        "column": 44,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 87,
        "column": 42,
        "firstCall": 77,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 100,
        "column": 24,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 113,
        "column": 27,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 133,
        "column": 25,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 164,
        "column": 29,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 197,
        "column": 23,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "StorageFileBrowserPanel",
        "line": 243,
        "column": 25,
        "firstCall": 90,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/TemplateBrowser.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:54)",
        "line": 1,
        "column": 54
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/TemplateForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 49,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 57,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 60,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 77,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 85,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 100,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 108,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "TemplateForm",
        "line": 124,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 57,
        "column": 30,
        "firstCall": 49,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 77,
        "column": 26,
        "firstCall": 60,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 85,
        "column": 23,
        "firstCall": 60,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 100,
        "column": 26,
        "firstCall": 60,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 108,
        "column": 23,
        "firstCall": 60,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "TemplateForm",
        "line": 124,
        "column": 23,
        "firstCall": 60,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/UserRoleSwitcher.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Box' has already been declared. (1:23)",
        "line": 1,
        "column": 23
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/WebhookSettings.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 74,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 75,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 76,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 77,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 78,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 79,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 80,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 81,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 82,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 83,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 84,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 87,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "WebhookSettings",
        "line": 102,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 75,
        "column": 32,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 76,
        "column": 28,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 77,
        "column": 32,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 78,
        "column": 38,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 79,
        "column": 50,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 80,
        "column": 44,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 81,
        "column": 48,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 82,
        "column": 46,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 83,
        "column": 38,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 84,
        "column": 40,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "WebhookSettings",
        "line": 87,
        "column": 34,
        "firstCall": 74,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/invitation/AcceptInvitation.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:43)",
        "line": 1,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/invitation/CompleteRegistration.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 19,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 20,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 21,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 22,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 23,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 24,
        "column": 56,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 27,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 45,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 47,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "CompleteRegistration",
        "line": 53,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 20,
        "column": 32,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 21,
        "column": 28,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 22,
        "column": 38,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 23,
        "column": 42,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 24,
        "column": 56,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 27,
        "column": 34,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "CompleteRegistration",
        "line": 45,
        "column": 30,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/invitation/OAuthCallback.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 18,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 19,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useParams' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 20,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 21,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 22,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "OAuthCallback",
        "line": 24,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "OAuthCallback",
        "line": 19,
        "column": 28,
        "firstCall": 18,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/profile/LoginHistory.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 16,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 17,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 18,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 19,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 22,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 23,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 26,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 33,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "LoginHistory",
        "line": 36,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 17,
        "column": 28,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 18,
        "column": 42,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 19,
        "column": 38,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 22,
        "column": 26,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 23,
        "column": 40,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "LoginHistory",
        "line": 26,
        "column": 32,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/profile/SecuritySettings.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:43)",
        "line": 1,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/profile/UserProfile.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 26,
        "column": 6,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 29,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 30,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 41,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 44,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 47,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 48,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 49,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 50,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 52,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserProfile",
        "line": 55,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 30,
        "column": 34,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 41,
        "column": 38,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 44,
        "column": 34,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 47,
        "column": 42,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 48,
        "column": 42,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 49,
        "column": 32,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserProfile",
        "line": 50,
        "column": 42,
        "firstCall": 29,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/security/MFAEnrollment.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:43)",
        "line": 1,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/security/MFAVerification.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 22,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 23,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 24,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 25,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 26,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 27,
        "column": 48,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 29,
        "column": 49,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 30,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useLocation' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 31,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "MFAVerification",
        "line": 37,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 23,
        "column": 42,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 24,
        "column": 42,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 25,
        "column": 28,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 26,
        "column": 42,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "MFAVerification",
        "line": 27,
        "column": 48,
        "firstCall": 22,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/security/RecoveryCodes.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:43)",
        "line": 1,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/users/UserManagement.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 23,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 26,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 27,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 28,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 29,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 32,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 33,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 34,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 37,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 38,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 41,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 42,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 43,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "UserManagement",
        "line": 46,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 27,
        "column": 38,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 28,
        "column": 26,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 29,
        "column": 40,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 32,
        "column": 42,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 33,
        "column": 38,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 34,
        "column": 40,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 37,
        "column": 32,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 38,
        "column": 28,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 41,
        "column": 38,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 42,
        "column": 42,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "UserManagement",
        "line": 43,
        "column": 42,
        "firstCall": 26,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/tests/integration/ComplexFlowValidator.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 35,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 36,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 37,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 38,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 39,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 90,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 91,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 92,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 100,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 606,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 661,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": "ComplexFlowValidator",
        "line": 810,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 36,
        "column": 36,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 37,
        "column": 28,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 38,
        "column": 32,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 39,
        "column": 54,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 90,
        "column": 40,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 91,
        "column": 52,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 92,
        "column": 34,
        "firstCall": 35,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 606,
        "column": 22,
        "firstCall": 100,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 661,
        "column": 26,
        "firstCall": 100,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useCallback' is called conditionally or multiple times in the same component",
        "component": "ComplexFlowValidator",
        "line": 810,
        "column": 24,
        "firstCall": 100,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/tests/integration/DynamicDataSourceTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/tests/integration/NodeTypesTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/tests/integration/StorageConnectorTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:56)",
        "line": 1,
        "column": 56
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/AppServiceMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/DatabaseMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/DocumentationMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (10:0)",
        "line": 10,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/KeyVaultMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/NetworkMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/MetricsCharts/StorageMetrics.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/documentation/DocumentViewer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 19,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 20,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 21,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 22,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 25,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 68,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 20,
        "column": 32,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 21,
        "column": 28,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 22,
        "column": 38,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 68,
        "column": 2,
        "firstCall": 25,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/documentation/DocumentationDashboard.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationDashboard",
        "line": 21,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationDashboard",
        "line": 22,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentationDashboard",
        "line": 22,
        "column": 50,
        "firstCall": 21,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/admin/documentation/DocumentationLibrary.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 35,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 36,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 37,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 38,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 39,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 40,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 43,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/archive/FlowErrorPanel.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (22:0)",
        "line": 22,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/nodes/StorageDestinationNode.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Tooltip' has already been declared. (1:27)",
        "line": 1,
        "column": 27
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/nodes/StorageSourceNode.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Tooltip' has already been declared. (1:26)",
        "line": 1,
        "column": 26
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/nodes/TransformNode.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/users/invitation/AcceptInvitation.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (4:9)",
        "line": 4,
        "column": 9
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/users/invitation/InvitationForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 16,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 19,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 27,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 30,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 31,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 32,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 27,
        "column": 30,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 30,
        "column": 32,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 31,
        "column": 28,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 32,
        "column": 32,
        "firstCall": 19,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/users/invitation/InvitationList.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 25,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 28,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 29,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 30,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 31,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 34,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 35,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 38,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 39,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 42,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 43,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 44,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 47,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 29,
        "column": 38,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 30,
        "column": 26,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 31,
        "column": 40,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 34,
        "column": 42,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 35,
        "column": 40,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 38,
        "column": 32,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 39,
        "column": 28,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 42,
        "column": 38,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 43,
        "column": 54,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 44,
        "column": 42,
        "firstCall": 28,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/users/mfa/MFAEnrollment.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (3:9)",
        "line": 3,
        "column": 9
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/display/DataPreviewAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 63,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 64,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 65,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 66,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 67,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 68,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 131,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 171,
        "column": 18,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 197,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/display/TableHeadAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 118,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/feedback/AccordionAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 54,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 68,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/feedback/AccordionSummaryAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 36,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 48,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/feedback/TooltipAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 39,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 42,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 58,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 76,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 91,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 102,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 112,
        "column": 27,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/form/AutocompleteAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMediaQuery' cannot be called inside a nested function",
        "component": null,
        "line": 234,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/form/SliderAdapted.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 53,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 57,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 58,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 61,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 68,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 76,
        "column": 25,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 87,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 114,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 129,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (7)",
        "component": null,
        "line": 129,
        "column": 26,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 182,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 196,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useCallback' cannot be called inside a nested function",
        "component": null,
        "line": 206,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "excessive-dependencies",
        "severity": "warning",
        "message": "React Hook useCallback has too many dependencies (8)",
        "component": null,
        "line": 206,
        "column": 24,
        "fix": {
          "type": "memoize-values",
          "description": "Consider memoizing some values to reduce dependency changes",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/feedback/Alert.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 46,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 47,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/feedback/Dialog.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 49,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 52,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 66,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/feedback/Toast.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 46,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 47,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 48,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 51,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 57,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/Checkbox.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 31,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 36,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/DatePicker.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 74,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 81,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 89,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 90,
        "column": 44,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 101,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 102,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 425,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/Radio.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 30,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 35,
        "column": 50,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/Select.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 31,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 33,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 34,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 37,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 38,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 41,
        "column": 52,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 48,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 60,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/Slider.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 73,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 81,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 90,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 91,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 92,
        "column": 23,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 313,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/form/TextField.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 41,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 45,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/navigation/Menu.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 23,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 162,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 201,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 202,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 203,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 244,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 255,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 268,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 302,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/navigation/Pagination.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 29,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useMemo' cannot be called inside a nested function",
        "component": null,
        "line": 45,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/components/navigation/Tabs.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 52,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useTheme' cannot be called inside a nested function",
        "component": null,
        "line": 197,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 198,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 201,
        "column": 20,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useRef' cannot be called inside a nested function",
        "component": null,
        "line": 202,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": null,
        "line": 261,
        "column": 4,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/foundations/theme/ThemeCompatibilityLayer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 356,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 359,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/foundations/theme/ThemeProvider.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": null,
        "line": 24,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "ThemeProvider",
        "line": 55,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ThemeProvider",
        "line": 58,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "ThemeProvider",
        "line": 66,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "ThemeProvider",
        "line": 66,
        "column": 2,
        "firstCall": 58,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/stories/components/common/InputField.stories.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 51,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 73,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 97,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 136,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": null,
        "line": 154,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/ApplicationDatasetWorkflowTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/ComplexFlowValidator.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (3:0)",
        "line": 3,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/DataPreviewTransformationValidator.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/DynamicDataSourceTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (3:0)",
        "line": 3,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/FlowCanvasTestSuite.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/IntegrationFlowCanvas.test.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowTemplates' cannot be called inside a nested function",
        "component": null,
        "line": 983,
        "column": 31,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useFlowHistory' cannot be called inside a nested function",
        "component": null,
        "line": 1057,
        "column": 21,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/NodeTypesTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (3:0)",
        "line": 3,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/PerformanceTestHarness.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/StorageConnectorTester.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected keyword 'import'. (3:0)",
        "line": 3,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/src/tests/components/integration/TestsLauncher.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Cannot read properties of undefined (reading 'buildError')",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/documentation/DocumentViewer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 15,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 16,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 17,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 18,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 21,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentViewer",
        "line": 64,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 16,
        "column": 32,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 17,
        "column": 28,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 18,
        "column": 38,
        "firstCall": 15,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useEffect' is called conditionally or multiple times in the same component",
        "component": "DocumentViewer",
        "line": 64,
        "column": 2,
        "firstCall": 21,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/admin/documentation/DocumentationLibrary.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 32,
        "column": 36,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 33,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 34,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 35,
        "column": 46,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 36,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 37,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "DocumentationLibrary",
        "line": 40,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: You must pass a scope and parentPath unless traversing a Program/File. Instead of that you tried to traverse a ArrowFunctionExpression node without passing scope and parentPath.",
        "line": 0,
        "column": 0
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/nodes/StorageDestinationNode.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Tooltip' has already been declared. (1:27)",
        "line": 1,
        "column": 27
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/integration/nodes/StorageSourceNode.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Identifier 'Tooltip' has already been declared. (1:26)",
        "line": 1,
        "column": 26
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/users/invitation/AcceptInvitation.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:43)",
        "line": 1,
        "column": 43
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/users/invitation/InvitationForm.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useNavigate' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 13,
        "column": 19,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 16,
        "column": 34,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 24,
        "column": 30,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 27,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 28,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationForm",
        "line": 29,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 24,
        "column": 30,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 27,
        "column": 32,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 28,
        "column": 28,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationForm",
        "line": 29,
        "column": 32,
        "firstCall": 16,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/users/invitation/InvitationList.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useUser' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 21,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 24,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 25,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 26,
        "column": 26,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 27,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 30,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 31,
        "column": 40,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 34,
        "column": 32,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 35,
        "column": 28,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 38,
        "column": 38,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 39,
        "column": 54,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useState' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 40,
        "column": 42,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useEffect' cannot be called inside a nested function",
        "component": "InvitationList",
        "line": 43,
        "column": 2,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 25,
        "column": 38,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 26,
        "column": 26,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 27,
        "column": 40,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 30,
        "column": 42,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 31,
        "column": 40,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 34,
        "column": 32,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 35,
        "column": 28,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 38,
        "column": 38,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 39,
        "column": 54,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      },
      {
        "type": "inconsistent-hook-order",
        "severity": "error",
        "message": "React Hook 'useState' is called conditionally or multiple times in the same component",
        "component": "InvitationList",
        "line": 40,
        "column": 42,
        "firstCall": 24,
        "fix": {
          "type": "fix-hook-order",
          "description": "Ensure hooks are called in the same order on every render",
          "automated": false
        }
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/components/users/mfa/MFAEnrollment.jsx",
    "issues": [
      {
        "type": "parse-error",
        "severity": "error",
        "message": "Failed to parse file: Unexpected token (1:32)",
        "line": 1,
        "column": 32
      }
    ]
  },
  {
    "filePath": "/home/ai-dev/Desktop/tap-integration-platform/frontend/import_standardization_backups/src/design-system/foundations/theme/ThemeCompatibilityLayer.jsx",
    "issues": [
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useContext' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 340,
        "column": 24,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      },
      {
        "type": "nested-hook",
        "severity": "error",
        "message": "React Hook 'useDesignTheme' cannot be called inside a nested function",
        "component": "ThemeCompatibilityProvider",
        "line": 343,
        "column": 22,
        "fix": {
          "type": "move-hook",
          "description": "Move hook to the top level of component function",
          "automated": false
        }
      }
    ]
  }
]