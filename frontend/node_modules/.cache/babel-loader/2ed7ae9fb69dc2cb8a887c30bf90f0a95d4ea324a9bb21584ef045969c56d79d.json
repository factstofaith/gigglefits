{"ast":null,"code":"/**\n * SharePoint Credential Manager Component\n *\n * A component for managing and storing SharePoint/Microsoft Graph API credentials\n * with support for various authentication methods.\n *\n * @component\n */import React,{useState,useEffect,useCallback}from'react';import{Box,Button,Card,CardActions,CardContent,CircularProgress,Collapse,Divider,FormControl,FormControlLabel,FormHelperText,Grid,IconButton,InputAdornment,InputLabel,MenuItem,OutlinedInput,Radio,RadioGroup,Select,Stack,Switch,Tab,Tabs,TextField,Tooltip,Typography,Alert,AlertTitle,Paper}from'@mui/material';import{CheckCircle as CheckCircleIcon,ErrorOutline as ErrorOutlineIcon,Help as HelpIcon,Key as KeyIcon,Refresh as RefreshIcon,Visibility as VisibilityIcon,VisibilityOff as VisibilityOffIcon,VerifiedUser as VerifiedUserIcon,Link as LinkIcon,AccountCircle as AccountCircleIcon,Apps as AppsIcon,Security as SecurityIcon,Terminal as TerminalIcon,AddCircleOutline as AddCircleOutlineIcon,Settings as SettingsIcon,InfoOutlined as InfoOutlinedIcon}from'@mui/icons-material';/**\n * SharePoint Credential Manager Component\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SharePointCredentialManager=_ref=>{let{credentials={},onChange=()=>{},onTest=()=>{},testResults=null,loading=false,disabled=false}=_ref;// Authentication method state\nconst[authMethod,setAuthMethod]=useState((credentials===null||credentials===void 0?void 0:credentials.authMethod)||'oauth');// OAuth credentials\nconst[tenantId,setTenantId]=useState((credentials===null||credentials===void 0?void 0:credentials.tenantId)||'');const[clientId,setClientId]=useState((credentials===null||credentials===void 0?void 0:credentials.clientId)||'');const[clientSecret,setClientSecret]=useState((credentials===null||credentials===void 0?void 0:credentials.clientSecret)||'');const[showClientSecret,setShowClientSecret]=useState(false);// App-only credentials\nconst[appId,setAppId]=useState((credentials===null||credentials===void 0?void 0:credentials.appId)||'');const[appSecret,setAppSecret]=useState((credentials===null||credentials===void 0?void 0:credentials.appSecret)||'');const[showAppSecret,setShowAppSecret]=useState(false);// Certificate credentials\nconst[certificateThumbprint,setCertificateThumbprint]=useState((credentials===null||credentials===void 0?void 0:credentials.certificateThumbprint)||'');const[certificatePrivateKey,setCertificatePrivateKey]=useState((credentials===null||credentials===void 0?void 0:credentials.certificatePrivateKey)||'');const[showPrivateKey,setShowPrivateKey]=useState(false);// General settings\nconst[resourceUrl,setResourceUrl]=useState((credentials===null||credentials===void 0?void 0:credentials.resourceUrl)||'https://graph.microsoft.com');const[advancedOpen,setAdvancedOpen]=useState(false);const[error,setError]=useState(null);/**\n   * Handle authentication method change\n   */const handleAuthMethodChange=event=>{setAuthMethod(event.target.value);};/**\n   * Update credentials when values change\n   */useEffect(()=>{// Common parameters for all auth methods\nconst baseCredentials={authMethod,resourceUrl};// Method-specific parameters\nlet methodCredentials={};if(authMethod==='oauth'){methodCredentials={tenantId,clientId,clientSecret};}else if(authMethod==='app'){methodCredentials={tenantId,appId,appSecret};}else if(authMethod==='certificate'){methodCredentials={tenantId,clientId,certificateThumbprint,certificatePrivateKey};}// Only update if at least the tenant ID is provided\nif(tenantId){onChange({...baseCredentials,...methodCredentials});}},[authMethod,tenantId,clientId,clientSecret,appId,appSecret,certificateThumbprint,certificatePrivateKey,resourceUrl,onChange]);/**\n   * Test the credentials\n   */const handleTest=useCallback(()=>{setError(null);onTest();},[onTest]);/**\n   * Generate test credentials for development\n   */const generateTestCredentials=useCallback(()=>{// Only allow in development environment\nif(process.env.NODE_ENV!=='development'&&process.env.NODE_ENV!=='test'){setError('Test credentials can only be generated in development environment');return;}// Generate appropriate test credentials based on auth method\nif(authMethod==='oauth'){setTenantId('contoso.onmicrosoft.com');setClientId('12345678-1234-1234-1234-123456789012');setClientSecret('abcdefghijklmnopqrstuvwxyz12345678');}else if(authMethod==='app'){setTenantId('contoso.onmicrosoft.com');setAppId('87654321-4321-4321-4321-210987654321');setAppSecret('zyxwvutsrqponmlkjihgfedcba87654321');}else if(authMethod==='certificate'){setTenantId('contoso.onmicrosoft.com');setClientId('12345678-1234-1234-1234-123456789012');setCertificateThumbprint('1234567890ABCDEF1234567890ABCDEF12345678');setCertificatePrivateKey('-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7VJTUt9Us8cKj\\nMzEfYyjiWA4R4/M2bS1GB4t7NXp98C3SC6dVMvDuictGeurT8jNbvJZHtCSuYEvu\\nNMoSfm76oqFvAp8Gy0iz5sxjZmSnXyCdPEovGhLa0VzMaQ8s+CLOyS56YyCFGeJZ\\n-----END PRIVATE KEY-----');}setResourceUrl('https://graph.microsoft.com');},[authMethod]);return/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"SharePoint Connection Credentials\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Configure Microsoft SharePoint credentials using the Microsoft Graph API for secure access to sites and document libraries.\"}),/*#__PURE__*/_jsxs(FormControl,{component:\"fieldset\",sx:{mb:3},disabled:disabled||loading,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Authentication Method\"}),/*#__PURE__*/_jsxs(RadioGroup,{name:\"auth-method\",value:authMethod,onChange:handleAuthMethodChange,row:true,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:\"oauth\",control:/*#__PURE__*/_jsx(Radio,{}),label:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(AccountCircleIcon,{fontSize:\"small\",sx:{mr:0.5}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"OAuth 2.0\"})]})}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"app\",control:/*#__PURE__*/_jsx(Radio,{}),label:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(AppsIcon,{fontSize:\"small\",sx:{mr:0.5}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"App-only authentication\"})]})}),/*#__PURE__*/_jsx(FormControlLabel,{value:\"certificate\",control:/*#__PURE__*/_jsx(Radio,{}),label:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(SecurityIcon,{fontSize:\"small\",sx:{mr:0.5}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Certificate-based\"})]})})]})]}),/*#__PURE__*/_jsx(Divider,{sx:{my:2}}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{id:\"tenant-id\",label:\"Tenant ID or Domain\",fullWidth:true,value:tenantId,onChange:e=>setTenantId(e.target.value),disabled:disabled||loading,required:true,variant:\"outlined\",placeholder:\"contoso.onmicrosoft.com\",helperText:\"Enter your Microsoft 365 tenant ID or domain name\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"small\"})})}})})}),authMethod==='oauth'&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{id:\"client-id\",label:\"Application (client) ID\",fullWidth:true,value:clientId,onChange:e=>setClientId(e.target.value),disabled:disabled||loading,required:true,variant:\"outlined\",placeholder:\"12345678-1234-1234-1234-123456789012\",helperText:\"Client ID from Azure App Registration\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(AppsIcon,{fontSize:\"small\"})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"client-secret\",children:\"Client Secret\"}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"client-secret\",type:showClientSecret?'text':'password',value:clientSecret,onChange:e=>setClientSecret(e.target.value),disabled:disabled||loading,placeholder:\"Enter client secret\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(KeyIcon,{fontSize:\"small\"})}),endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle secret visibility\",onClick:()=>setShowClientSecret(!showClientSecret),edge:\"end\",children:showClientSecret?/*#__PURE__*/_jsx(VisibilityOffIcon,{}):/*#__PURE__*/_jsx(VisibilityIcon,{})})}),label:\"Client Secret\"}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Secret value from Azure App Registration\"})]})})]}),authMethod==='app'&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{id:\"app-id\",label:\"App ID\",fullWidth:true,value:appId,onChange:e=>setAppId(e.target.value),disabled:disabled||loading,required:true,variant:\"outlined\",placeholder:\"87654321-4321-4321-4321-210987654321\",helperText:\"Application ID from Azure App Registration\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(AppsIcon,{fontSize:\"small\"})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"app-secret\",children:\"App Secret\"}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"app-secret\",type:showAppSecret?'text':'password',value:appSecret,onChange:e=>setAppSecret(e.target.value),disabled:disabled||loading,placeholder:\"Enter app secret\",startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(KeyIcon,{fontSize:\"small\"})}),endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle secret visibility\",onClick:()=>setShowAppSecret(!showAppSecret),edge:\"end\",children:showAppSecret?/*#__PURE__*/_jsx(VisibilityOffIcon,{}):/*#__PURE__*/_jsx(VisibilityIcon,{})})}),label:\"App Secret\"}),/*#__PURE__*/_jsx(FormHelperText,{children:\"App secret value from Azure App Registration\"})]})})]}),authMethod==='certificate'&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,sx:{mt:1},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{id:\"client-id-cert\",label:\"Application (client) ID\",fullWidth:true,value:clientId,onChange:e=>setClientId(e.target.value),disabled:disabled||loading,required:true,variant:\"outlined\",placeholder:\"12345678-1234-1234-1234-123456789012\",helperText:\"Client ID from Azure App Registration\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(AppsIcon,{fontSize:\"small\"})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{id:\"certificate-thumbprint\",label:\"Certificate Thumbprint\",fullWidth:true,value:certificateThumbprint,onChange:e=>setCertificateThumbprint(e.target.value),disabled:disabled||loading,required:true,variant:\"outlined\",placeholder:\"1234567890ABCDEF1234567890ABCDEF12345678\",helperText:\"Thumbprint of the certificate registered in Azure AD\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(VerifiedUserIcon,{fontSize:\"small\"})})}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsxs(FormControl,{variant:\"outlined\",fullWidth:true,required:true,children:[/*#__PURE__*/_jsx(InputLabel,{htmlFor:\"certificate-private-key\",children:\"Certificate Private Key\"}),/*#__PURE__*/_jsx(OutlinedInput,{id:\"certificate-private-key\",type:showPrivateKey?'text':'password',value:certificatePrivateKey,onChange:e=>setCertificatePrivateKey(e.target.value),disabled:disabled||loading,placeholder:\"-----BEGIN PRIVATE KEY-----...\",multiline:true,rows:3,startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(KeyIcon,{fontSize:\"small\"})}),endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle private key visibility\",onClick:()=>setShowPrivateKey(!showPrivateKey),edge:\"end\",children:showPrivateKey?/*#__PURE__*/_jsx(VisibilityOffIcon,{}):/*#__PURE__*/_jsx(VisibilityIcon,{})})}),label:\"Certificate Private Key\"}),/*#__PURE__*/_jsx(FormHelperText,{children:\"Private key in PEM format\"})]})})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(SettingsIcon,{}),onClick:()=>setAdvancedOpen(!advancedOpen),size:\"small\",color:\"primary\",disabled:disabled||loading,children:advancedOpen?'Hide Advanced Options':'Show Advanced Options'}),/*#__PURE__*/_jsx(Collapse,{in:advancedOpen,children:/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,mt:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(TextField,{id:\"resource-url\",label:\"Resource URL\",fullWidth:true,value:resourceUrl,onChange:e=>setResourceUrl(e.target.value),disabled:disabled||loading,variant:\"outlined\",placeholder:\"https://graph.microsoft.com\",helperText:\"The Microsoft Graph API endpoint (default: https://graph.microsoft.com)\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(LinkIcon,{fontSize:\"small\"})})}})}),process.env.NODE_ENV==='development'&&/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:generateTestCredentials,startIcon:/*#__PURE__*/_jsx(TerminalIcon,{}),size:\"small\",disabled:disabled||loading,children:\"Generate Test Credentials\"}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",display:\"block\",sx:{mt:1},children:\"For development environment only: Creates simulated credentials for testing\"})]})]})})})]}),error&&/*#__PURE__*/_jsxs(Alert,{severity:\"error\",sx:{mt:2},children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error\"}),error]}),testResults&&/*#__PURE__*/_jsxs(Alert,{severity:testResults.status==='success'?'success':'error',sx:{mt:2},children:[/*#__PURE__*/_jsx(AlertTitle,{children:testResults.status==='success'?'Connection Successful':'Connection Failed'}),testResults.message,testResults.details&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",fontWeight:\"bold\",children:\"Details:\"}),/*#__PURE__*/_jsx(Box,{component:\"pre\",sx:{mt:1,p:1,bgcolor:'background.paper',borderRadius:1,fontSize:'0.75rem',maxHeight:'150px',overflow:'auto'},children:typeof testResults.details==='string'?testResults.details:JSON.stringify(testResults.details,null,2)})]})]})]}),/*#__PURE__*/_jsxs(CardActions,{sx:{p:2,pt:0},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleTest,disabled:disabled||loading||!tenantId||authMethod==='oauth'&&(!clientId||!clientSecret)||authMethod==='app'&&(!appId||!appSecret)||authMethod==='certificate'&&(!clientId||!certificateThumbprint||!certificatePrivateKey),startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(VerifiedUserIcon,{}),children:loading?'Testing Connection...':'Test Connection'}),/*#__PURE__*/_jsx(Tooltip,{title:\"Information about required permissions\",children:/*#__PURE__*/_jsx(IconButton,{color:\"info\",\"aria-label\":\"help\",onClick:()=>{// Open help documentation in a new tab or show info dialog\nwindow.open('https://docs.microsoft.com/en-us/graph/permissions-reference','_blank');},children:/*#__PURE__*/_jsx(InfoOutlinedIcon,{})})})]})]});};export default SharePointCredentialManager;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Card","CardActions","CardContent","CircularProgress","Collapse","Divider","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","MenuItem","OutlinedInput","Radio","RadioGroup","Select","Stack","Switch","Tab","Tabs","TextField","Tooltip","Typography","Alert","AlertTitle","Paper","CheckCircle","CheckCircleIcon","ErrorOutline","ErrorOutlineIcon","Help","HelpIcon","Key","KeyIcon","Refresh","RefreshIcon","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","VerifiedUser","VerifiedUserIcon","Link","LinkIcon","AccountCircle","AccountCircleIcon","Apps","AppsIcon","Security","SecurityIcon","Terminal","TerminalIcon","AddCircleOutline","AddCircleOutlineIcon","Settings","SettingsIcon","InfoOutlined","InfoOutlinedIcon","jsx","_jsx","jsxs","_jsxs","SharePointCredentialManager","_ref","credentials","onChange","onTest","testResults","loading","disabled","authMethod","setAuthMethod","tenantId","setTenantId","clientId","setClientId","clientSecret","setClientSecret","showClientSecret","setShowClientSecret","appId","setAppId","appSecret","setAppSecret","showAppSecret","setShowAppSecret","certificateThumbprint","setCertificateThumbprint","certificatePrivateKey","setCertificatePrivateKey","showPrivateKey","setShowPrivateKey","resourceUrl","setResourceUrl","advancedOpen","setAdvancedOpen","error","setError","handleAuthMethodChange","event","target","value","baseCredentials","methodCredentials","handleTest","generateTestCredentials","process","env","NODE_ENV","variant","children","gutterBottom","color","paragraph","component","sx","mb","name","row","control","label","display","alignItems","fontSize","mr","my","container","spacing","item","xs","id","fullWidth","e","required","placeholder","helperText","InputProps","startAdornment","position","mt","md","htmlFor","type","endAdornment","onClick","edge","multiline","rows","startIcon","size","in","p","severity","status","message","details","fontWeight","bgcolor","borderRadius","maxHeight","overflow","JSON","stringify","pt","title","window","open"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/sharepoint/SharePointCredentialManager.jsx"],"sourcesContent":["/**\n * SharePoint Credential Manager Component\n *\n * A component for managing and storing SharePoint/Microsoft Graph API credentials\n * with support for various authentication methods.\n *\n * @component\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CircularProgress,\n  Collapse,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  Switch,\n  Tab,\n  Tabs,\n  TextField,\n  Tooltip,\n  Typography,\n  Alert,\n  AlertTitle,\n  Paper,\n} from '@mui/material';\nimport {\n  CheckCircle as CheckCircleIcon,\n  ErrorOutline as ErrorOutlineIcon,\n  Help as HelpIcon,\n  Key as KeyIcon,\n  Refresh as RefreshIcon,\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n  VerifiedUser as VerifiedUserIcon,\n  Link as LinkIcon,\n  AccountCircle as AccountCircleIcon,\n  Apps as AppsIcon,\n  Security as SecurityIcon,\n  Terminal as TerminalIcon,\n  AddCircleOutline as AddCircleOutlineIcon,\n  Settings as SettingsIcon,\n  InfoOutlined as InfoOutlinedIcon,\n} from '@mui/icons-material';\n\n/**\n * SharePoint Credential Manager Component\n */\nconst SharePointCredentialManager = ({\n  credentials = {},\n  onChange = () => {},\n  onTest = () => {},\n  testResults = null,\n  loading = false,\n  disabled = false,\n}) => {\n  // Authentication method state\n  const [authMethod, setAuthMethod] = useState(credentials?.authMethod || 'oauth');\n  \n  // OAuth credentials\n  const [tenantId, setTenantId] = useState(credentials?.tenantId || '');\n  const [clientId, setClientId] = useState(credentials?.clientId || '');\n  const [clientSecret, setClientSecret] = useState(credentials?.clientSecret || '');\n  const [showClientSecret, setShowClientSecret] = useState(false);\n  \n  // App-only credentials\n  const [appId, setAppId] = useState(credentials?.appId || '');\n  const [appSecret, setAppSecret] = useState(credentials?.appSecret || '');\n  const [showAppSecret, setShowAppSecret] = useState(false);\n  \n  // Certificate credentials\n  const [certificateThumbprint, setCertificateThumbprint] = useState(credentials?.certificateThumbprint || '');\n  const [certificatePrivateKey, setCertificatePrivateKey] = useState(credentials?.certificatePrivateKey || '');\n  const [showPrivateKey, setShowPrivateKey] = useState(false);\n  \n  // General settings\n  const [resourceUrl, setResourceUrl] = useState(credentials?.resourceUrl || 'https://graph.microsoft.com');\n  const [advancedOpen, setAdvancedOpen] = useState(false);\n  const [error, setError] = useState(null);\n  \n  /**\n   * Handle authentication method change\n   */\n  const handleAuthMethodChange = (event) => {\n    setAuthMethod(event.target.value);\n  };\n\n  /**\n   * Update credentials when values change\n   */\n  useEffect(() => {\n    // Common parameters for all auth methods\n    const baseCredentials = {\n      authMethod,\n      resourceUrl,\n    };\n    \n    // Method-specific parameters\n    let methodCredentials = {};\n    \n    if (authMethod === 'oauth') {\n      methodCredentials = {\n        tenantId,\n        clientId,\n        clientSecret,\n      };\n    } else if (authMethod === 'app') {\n      methodCredentials = {\n        tenantId,\n        appId,\n        appSecret,\n      };\n    } else if (authMethod === 'certificate') {\n      methodCredentials = {\n        tenantId,\n        clientId,\n        certificateThumbprint,\n        certificatePrivateKey,\n      };\n    }\n    \n    // Only update if at least the tenant ID is provided\n    if (tenantId) {\n      onChange({\n        ...baseCredentials,\n        ...methodCredentials,\n      });\n    }\n  }, [\n    authMethod, \n    tenantId, \n    clientId, \n    clientSecret, \n    appId, \n    appSecret, \n    certificateThumbprint, \n    certificatePrivateKey, \n    resourceUrl, \n    onChange\n  ]);\n\n  /**\n   * Test the credentials\n   */\n  const handleTest = useCallback(() => {\n    setError(null);\n    onTest();\n  }, [onTest]);\n\n  /**\n   * Generate test credentials for development\n   */\n  const generateTestCredentials = useCallback(() => {\n    // Only allow in development environment\n    if (process.env.NODE_ENV !== 'development' && process.env.NODE_ENV !== 'test') {\n      setError('Test credentials can only be generated in development environment');\n      return;\n    }\n    \n    // Generate appropriate test credentials based on auth method\n    if (authMethod === 'oauth') {\n      setTenantId('contoso.onmicrosoft.com');\n      setClientId('12345678-1234-1234-1234-123456789012');\n      setClientSecret('abcdefghijklmnopqrstuvwxyz12345678');\n    } else if (authMethod === 'app') {\n      setTenantId('contoso.onmicrosoft.com');\n      setAppId('87654321-4321-4321-4321-210987654321');\n      setAppSecret('zyxwvutsrqponmlkjihgfedcba87654321');\n    } else if (authMethod === 'certificate') {\n      setTenantId('contoso.onmicrosoft.com');\n      setClientId('12345678-1234-1234-1234-123456789012');\n      setCertificateThumbprint('1234567890ABCDEF1234567890ABCDEF12345678');\n      setCertificatePrivateKey('-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC7VJTUt9Us8cKj\\nMzEfYyjiWA4R4/M2bS1GB4t7NXp98C3SC6dVMvDuictGeurT8jNbvJZHtCSuYEvu\\nNMoSfm76oqFvAp8Gy0iz5sxjZmSnXyCdPEovGhLa0VzMaQ8s+CLOyS56YyCFGeJZ\\n-----END PRIVATE KEY-----');\n    }\n    \n    setResourceUrl('https://graph.microsoft.com');\n  }, [authMethod]);\n\n  return (\n    <Card variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          SharePoint Connection Credentials\n        </Typography>\n        \n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n          Configure Microsoft SharePoint credentials using the Microsoft Graph API for secure access to sites and document libraries.\n        </Typography>\n        \n        {/* Authentication Method Selection */}\n        <FormControl component=\"fieldset\" sx={{ mb: 3 }} disabled={disabled || loading}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Authentication Method\n          </Typography>\n          <RadioGroup\n            name=\"auth-method\"\n            value={authMethod}\n            onChange={handleAuthMethodChange}\n            row\n          >\n            <FormControlLabel \n              value=\"oauth\" \n              control={<Radio />} \n              label={\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <AccountCircleIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n                  <Typography variant=\"body2\">OAuth 2.0</Typography>\n                </Box>\n              }\n            />\n            <FormControlLabel \n              value=\"app\" \n              control={<Radio />} \n              label={\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <AppsIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n                  <Typography variant=\"body2\">App-only authentication</Typography>\n                </Box>\n              }\n            />\n            <FormControlLabel \n              value=\"certificate\" \n              control={<Radio />} \n              label={\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <SecurityIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n                  <Typography variant=\"body2\">Certificate-based</Typography>\n                </Box>\n              }\n            />\n          </RadioGroup>\n        </FormControl>\n        \n        <Divider sx={{ my: 2 }} />\n        \n        {/* Common Fields - Tenant ID */}\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              id=\"tenant-id\"\n              label=\"Tenant ID or Domain\"\n              fullWidth\n              value={tenantId}\n              onChange={(e) => setTenantId(e.target.value)}\n              disabled={disabled || loading}\n              required\n              variant=\"outlined\"\n              placeholder=\"contoso.onmicrosoft.com\"\n              helperText=\"Enter your Microsoft 365 tenant ID or domain name\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LinkIcon fontSize=\"small\" />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n        \n        {/* OAuth 2.0 Fields */}\n        {authMethod === 'oauth' && (\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                id=\"client-id\"\n                label=\"Application (client) ID\"\n                fullWidth\n                value={clientId}\n                onChange={(e) => setClientId(e.target.value)}\n                disabled={disabled || loading}\n                required\n                variant=\"outlined\"\n                placeholder=\"12345678-1234-1234-1234-123456789012\"\n                helperText=\"Client ID from Azure App Registration\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AppsIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl variant=\"outlined\" fullWidth required>\n                <InputLabel htmlFor=\"client-secret\">Client Secret</InputLabel>\n                <OutlinedInput\n                  id=\"client-secret\"\n                  type={showClientSecret ? 'text' : 'password'}\n                  value={clientSecret}\n                  onChange={(e) => setClientSecret(e.target.value)}\n                  disabled={disabled || loading}\n                  placeholder=\"Enter client secret\"\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <KeyIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  }\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle secret visibility\"\n                        onClick={() => setShowClientSecret(!showClientSecret)}\n                        edge=\"end\"\n                      >\n                        {showClientSecret ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Client Secret\"\n                />\n                <FormHelperText>\n                  Secret value from Azure App Registration\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n          </Grid>\n        )}\n        \n        {/* App-only Authentication Fields */}\n        {authMethod === 'app' && (\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                id=\"app-id\"\n                label=\"App ID\"\n                fullWidth\n                value={appId}\n                onChange={(e) => setAppId(e.target.value)}\n                disabled={disabled || loading}\n                required\n                variant=\"outlined\"\n                placeholder=\"87654321-4321-4321-4321-210987654321\"\n                helperText=\"Application ID from Azure App Registration\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AppsIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl variant=\"outlined\" fullWidth required>\n                <InputLabel htmlFor=\"app-secret\">App Secret</InputLabel>\n                <OutlinedInput\n                  id=\"app-secret\"\n                  type={showAppSecret ? 'text' : 'password'}\n                  value={appSecret}\n                  onChange={(e) => setAppSecret(e.target.value)}\n                  disabled={disabled || loading}\n                  placeholder=\"Enter app secret\"\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <KeyIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  }\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle secret visibility\"\n                        onClick={() => setShowAppSecret(!showAppSecret)}\n                        edge=\"end\"\n                      >\n                        {showAppSecret ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"App Secret\"\n                />\n                <FormHelperText>\n                  App secret value from Azure App Registration\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n          </Grid>\n        )}\n        \n        {/* Certificate-based Authentication Fields */}\n        {authMethod === 'certificate' && (\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                id=\"client-id-cert\"\n                label=\"Application (client) ID\"\n                fullWidth\n                value={clientId}\n                onChange={(e) => setClientId(e.target.value)}\n                disabled={disabled || loading}\n                required\n                variant=\"outlined\"\n                placeholder=\"12345678-1234-1234-1234-123456789012\"\n                helperText=\"Client ID from Azure App Registration\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <AppsIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                id=\"certificate-thumbprint\"\n                label=\"Certificate Thumbprint\"\n                fullWidth\n                value={certificateThumbprint}\n                onChange={(e) => setCertificateThumbprint(e.target.value)}\n                disabled={disabled || loading}\n                required\n                variant=\"outlined\"\n                placeholder=\"1234567890ABCDEF1234567890ABCDEF12345678\"\n                helperText=\"Thumbprint of the certificate registered in Azure AD\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <VerifiedUserIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl variant=\"outlined\" fullWidth required>\n                <InputLabel htmlFor=\"certificate-private-key\">Certificate Private Key</InputLabel>\n                <OutlinedInput\n                  id=\"certificate-private-key\"\n                  type={showPrivateKey ? 'text' : 'password'}\n                  value={certificatePrivateKey}\n                  onChange={(e) => setCertificatePrivateKey(e.target.value)}\n                  disabled={disabled || loading}\n                  placeholder=\"-----BEGIN PRIVATE KEY-----...\"\n                  multiline\n                  rows={3}\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <KeyIcon fontSize=\"small\" />\n                    </InputAdornment>\n                  }\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle private key visibility\"\n                        onClick={() => setShowPrivateKey(!showPrivateKey)}\n                        edge=\"end\"\n                      >\n                        {showPrivateKey ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Certificate Private Key\"\n                />\n                <FormHelperText>\n                  Private key in PEM format\n                </FormHelperText>\n              </FormControl>\n            </Grid>\n          </Grid>\n        )}\n        \n        {/* Advanced Options */}\n        <Box sx={{ mt: 3 }}>\n          <Button\n            startIcon={<SettingsIcon />}\n            onClick={() => setAdvancedOpen(!advancedOpen)}\n            size=\"small\"\n            color=\"primary\"\n            disabled={disabled || loading}\n          >\n            {advancedOpen ? 'Hide Advanced Options' : 'Show Advanced Options'}\n          </Button>\n          \n          <Collapse in={advancedOpen}>\n            <Paper variant=\"outlined\" sx={{ p: 2, mt: 2 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    id=\"resource-url\"\n                    label=\"Resource URL\"\n                    fullWidth\n                    value={resourceUrl}\n                    onChange={(e) => setResourceUrl(e.target.value)}\n                    disabled={disabled || loading}\n                    variant=\"outlined\"\n                    placeholder=\"https://graph.microsoft.com\"\n                    helperText=\"The Microsoft Graph API endpoint (default: https://graph.microsoft.com)\"\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <LinkIcon fontSize=\"small\" />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                \n                {process.env.NODE_ENV === 'development' && (\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      onClick={generateTestCredentials}\n                      startIcon={<TerminalIcon />}\n                      size=\"small\"\n                      disabled={disabled || loading}\n                    >\n                      Generate Test Credentials\n                    </Button>\n                    <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n                      For development environment only: Creates simulated credentials for testing\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Paper>\n          </Collapse>\n        </Box>\n        \n        {/* Error Display */}\n        {error && (\n          <Alert severity=\"error\" sx={{ mt: 2 }}>\n            <AlertTitle>Error</AlertTitle>\n            {error}\n          </Alert>\n        )}\n        \n        {/* Test Results */}\n        {testResults && (\n          <Alert \n            severity={testResults.status === 'success' ? 'success' : 'error'}\n            sx={{ mt: 2 }}\n          >\n            <AlertTitle>\n              {testResults.status === 'success' ? 'Connection Successful' : 'Connection Failed'}\n            </AlertTitle>\n            {testResults.message}\n            \n            {testResults.details && (\n              <Box sx={{ mt: 1 }}>\n                <Typography variant=\"body2\" fontWeight=\"bold\">Details:</Typography>\n                <Box component=\"pre\" sx={{ \n                  mt: 1, \n                  p: 1, \n                  bgcolor: 'background.paper', \n                  borderRadius: 1,\n                  fontSize: '0.75rem',\n                  maxHeight: '150px',\n                  overflow: 'auto'\n                }}>\n                  {typeof testResults.details === 'string' \n                    ? testResults.details \n                    : JSON.stringify(testResults.details, null, 2)}\n                </Box>\n              </Box>\n            )}\n          </Alert>\n        )}\n      </CardContent>\n      \n      <CardActions sx={{ p: 2, pt: 0 }}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleTest}\n          disabled={\n            disabled || \n            loading || \n            !tenantId || \n            (authMethod === 'oauth' && (!clientId || !clientSecret)) ||\n            (authMethod === 'app' && (!appId || !appSecret)) ||\n            (authMethod === 'certificate' && (!clientId || !certificateThumbprint || !certificatePrivateKey))\n          }\n          startIcon={loading ? <CircularProgress size={20} /> : <VerifiedUserIcon />}\n        >\n          {loading ? 'Testing Connection...' : 'Test Connection'}\n        </Button>\n        \n        <Tooltip title=\"Information about required permissions\">\n          <IconButton\n            color=\"info\"\n            aria-label=\"help\"\n            onClick={() => {\n              // Open help documentation in a new tab or show info dialog\n              window.open('https://docs.microsoft.com/en-us/graph/permissions-reference', '_blank');\n            }}\n          >\n            <InfoOutlinedIcon />\n          </IconButton>\n        </Tooltip>\n      </CardActions>\n    </Card>\n  );\n};\n\nSharePointCredentialManager.propTypes = {\n  /**\n   * The current credential configuration\n   */\n  credentials: PropTypes.shape({\n    authMethod: PropTypes.string,\n    tenantId: PropTypes.string,\n    clientId: PropTypes.string,\n    clientSecret: PropTypes.string,\n    appId: PropTypes.string,\n    appSecret: PropTypes.string,\n    certificateThumbprint: PropTypes.string,\n    certificatePrivateKey: PropTypes.string,\n    resourceUrl: PropTypes.string,\n  }),\n  \n  /**\n   * Callback when credentials change\n   */\n  onChange: PropTypes.func,\n  \n  /**\n   * Callback when test button is clicked\n   */\n  onTest: PropTypes.func,\n  \n  /**\n   * Results from testing the connection\n   */\n  testResults: PropTypes.shape({\n    status: PropTypes.string,\n    message: PropTypes.string,\n    details: PropTypes.any,\n  }),\n  \n  /**\n   * Whether the component is in a loading state\n   */\n  loading: PropTypes.bool,\n  \n  /**\n   * Whether the component is disabled\n   */\n  disabled: PropTypes.bool,\n};\n\nexport default SharePointCredentialManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}