{"ast":null,"code":"/**\n * React compatibility adapters\n * \n * This file provides compatibility adapters for different React versions\n */import React from'react';/**\n * Higher-order component for React version compatibility\n * @param {React.ComponentType} Component - The component to wrap\n * @returns {React.ComponentType} - The wrapped component with version compatibility\n */import{jsx as _jsx}from\"react/jsx-runtime\";export function withReact18Compatibility(Component){const WrappedComponent=props=>{return/*#__PURE__*/_jsx(Component,{...props});};WrappedComponent.displayName=`React18Compatible(${Component.displayName||Component.name||'Component'})`;return WrappedComponent;}/**\n * Creates a version-safe context for React\n * @param {*} defaultValue - The default context value\n * @returns {React.Context} - A React context with compatibility features\n */export function createCompatContext(defaultValue){return/*#__PURE__*/React.createContext(defaultValue);}/**\n * Version-safe useEffect with proper cleanup\n * @param {Function} effect - Effect callback\n * @param {Array} deps - Dependency array\n */export function useCompatEffect(effect,deps){return React.useEffect(effect,deps);}export default{withReact18Compatibility,createCompatContext,useCompatEffect};","map":{"version":3,"names":["React","jsx","_jsx","withReact18Compatibility","Component","WrappedComponent","props","displayName","name","createCompatContext","defaultValue","createContext","useCompatEffect","effect","deps","useEffect"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/utils/react-compat-adapters.js"],"sourcesContent":["/**\n * React compatibility adapters\n * \n * This file provides compatibility adapters for different React versions\n */\n\nimport React from 'react';\n\n/**\n * Higher-order component for React version compatibility\n * @param {React.ComponentType} Component - The component to wrap\n * @returns {React.ComponentType} - The wrapped component with version compatibility\n */\nexport function withReact18Compatibility(Component) {\n  const WrappedComponent = (props) => {\n    return <Component {...props} />;\n  };\n  \n  WrappedComponent.displayName = `React18Compatible(${Component.displayName || Component.name || 'Component'})`;\n  \n  return WrappedComponent;\n}\n\n/**\n * Creates a version-safe context for React\n * @param {*} defaultValue - The default context value\n * @returns {React.Context} - A React context with compatibility features\n */\nexport function createCompatContext(defaultValue) {\n  return React.createContext(defaultValue);\n}\n\n/**\n * Version-safe useEffect with proper cleanup\n * @param {Function} effect - Effect callback\n * @param {Array} deps - Dependency array\n */\nexport function useCompatEffect(effect, deps) {\n  return React.useEffect(effect, deps);\n}\n\nexport default {\n  withReact18Compatibility,\n  createCompatContext,\n  useCompatEffect\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,yBAKA,MAAO,SAAS,CAAAC,wBAAwBA,CAACC,SAAS,CAAE,CAClD,KAAM,CAAAC,gBAAgB,CAAIC,KAAK,EAAK,CAClC,mBAAOJ,IAAA,CAACE,SAAS,KAAKE,KAAK,CAAG,CAAC,CACjC,CAAC,CAEDD,gBAAgB,CAACE,WAAW,CAAG,qBAAqBH,SAAS,CAACG,WAAW,EAAIH,SAAS,CAACI,IAAI,EAAI,WAAW,GAAG,CAE7G,MAAO,CAAAH,gBAAgB,CACzB,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAI,mBAAmBA,CAACC,YAAY,CAAE,CAChD,mBAAOV,KAAK,CAACW,aAAa,CAACD,YAAY,CAAC,CAC1C,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAAS,CAAAE,eAAeA,CAACC,MAAM,CAAEC,IAAI,CAAE,CAC5C,MAAO,CAAAd,KAAK,CAACe,SAAS,CAACF,MAAM,CAAEC,IAAI,CAAC,CACtC,CAEA,cAAe,CACbX,wBAAwB,CACxBM,mBAAmB,CACnBG,eACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}