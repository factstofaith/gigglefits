{"ast":null,"code":"/**\n * Integration Flow Canvas\n *\n * A complete integration flow canvas that combines the flow canvas with\n * a node panel and properties panel.\n *\n * @component\n */import React,{useState,useCallback,useEffect}from'react';import{Box,Grid,Paper,Tabs,Tab,Divider,IconButton,Tooltip}from'@mui/material';import{Save as SaveIcon,PlayArrow as RunIcon,SettingsBackupRestore as ResetIcon,History as HistoryIcon,Code as CodeIcon,Fullscreen as FullscreenIcon}from'@mui/icons-material';// Import flow components\nimport FlowCanvas from\"./FlowCanvas\";import NodePanel from\"./NodePanel\";/**\n * Integration Flow Canvas component\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const IntegrationFlowCanvas=_ref=>{let{initialElements=[],readOnly=false,userPermissions=[],onSave,onRun,onChange}=_ref;// State for flow elements\nconst[elements,setElements]=useState(initialElements);// State for selected node/edge\nconst[selectedElement,setSelectedElement]=useState(null);// State for validation errors\nconst[validationErrors,setValidationErrors]=useState({});// State for sidebar tabs\nconst[sidebarTab,setSidebarTab]=useState(0);// Handle flow elements change\nconst handleElementsChange=useCallback(newElements=>{setElements(newElements);if(onChange){onChange(newElements);}},[onChange]);// Handle node selection\nconst handleNodeSelect=useCallback(node=>{setSelectedElement({...node,type:'node'});setSidebarTab(1);// Switch to properties tab\n},[]);// Handle edge selection\nconst handleEdgeSelect=useCallback(edge=>{setSelectedElement({...edge,type:'edge'});setSidebarTab(1);// Switch to properties tab\n},[]);// Handle flow validation\nconst handleValidate=useCallback(flowElements=>{// Simple validation: ensure there's at least one source and one destination\nconst sourceNodes=flowElements.filter(el=>el.type==='sourceNode');const destinationNodes=flowElements.filter(el=>el.type==='destinationNode');const edges=flowElements.filter(el=>el.source&&el.target);const errors={};const isValid=sourceNodes.length>0&&destinationNodes.length>0&&edges.length>0;if(!isValid){if(sourceNodes.length===0){errors.general='Flow must include at least one source node';}else if(destinationNodes.length===0){errors.general='Flow must include at least one destination node';}else if(edges.length===0){errors.general='Nodes must be connected';}}setValidationErrors(errors);return isValid;},[]);// Handle flow save\nconst handleSave=useCallback(()=>{if(onSave){onSave(elements);}},[elements,onSave]);// Handle flow run\nconst handleRun=useCallback(()=>{const isValid=handleValidate(elements);if(isValid&&onRun){onRun(elements);}},[elements,handleValidate,onRun]);// Handle reset flow\nconst handleReset=useCallback(()=>{setElements(initialElements);setSelectedElement(null);},[initialElements]);// Render node properties panel\nconst renderNodeProperties=()=>{if(!selectedElement||selectedElement.type!=='node'){return/*#__PURE__*/_jsx(Box,{sx:{p:2,textAlign:'center',color:'text.secondary'},children:\"Select a node to view properties\"});}// In a real implementation, this would show a form for editing the node\nreturn/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Node Properties\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"ID: \",selectedElement.id]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Type: \",selectedElement.type]})]});};return/*#__PURE__*/_jsxs(Box,{sx:{height:'100%',display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Paper,{elevation:1,sx:{mb:1},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',p:1,alignItems:'center'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Save Flow\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleSave,disabled:readOnly,children:/*#__PURE__*/_jsx(SaveIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Run Flow\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleRun,color:\"primary\",children:/*#__PURE__*/_jsx(RunIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Reset Flow\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleReset,disabled:readOnly,children:/*#__PURE__*/_jsx(ResetIcon,{})})}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",flexItem:true,sx:{mx:1}}),/*#__PURE__*/_jsx(Tooltip,{title:\"View History\",children:/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(HistoryIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"View JSON\",children:/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(CodeIcon,{})})}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1}}),/*#__PURE__*/_jsx(Tooltip,{title:\"Fullscreen\",children:/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(FullscreenIcon,{})})})]})}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,display:'flex'},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,sx:{height:'100%'},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sx:{height:'100%'},children:/*#__PURE__*/_jsx(NodePanel,{userPermissions:userPermissions,onRefresh:()=>{}// Placeholder for refresh functionality\n})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,sx:{height:'100%'},children:/*#__PURE__*/_jsx(Paper,{elevation:2,sx:{height:'100%',overflow:'hidden'},children:/*#__PURE__*/_jsx(FlowCanvas,{initialElements:elements,readOnly:readOnly,onChange:handleElementsChange,onSave:handleSave,onNodeSelect:handleNodeSelect,onEdgeSelect:handleEdgeSelect,onValidate:handleValidate,validationErrors:validationErrors})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,sx:{height:'100%'},children:/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{height:'100%',display:'flex',flexDirection:'column',overflow:'hidden'},children:[/*#__PURE__*/_jsxs(Tabs,{value:sidebarTab,onChange:(_,newValue)=>setSidebarTab(newValue),variant:\"fullWidth\",children:[/*#__PURE__*/_jsx(Tab,{label:\"Info\"}),/*#__PURE__*/_jsx(Tab,{label:\"Properties\"})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1,overflow:'auto'},children:sidebarTab===0?/*#__PURE__*/_jsxs(Box,{sx:{p:2},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Flow Information\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Nodes: \",elements.filter(el=>!el.source).length]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Connections: \",elements.filter(el=>el.source).length]}),Object.keys(validationErrors).length>0&&/*#__PURE__*/_jsxs(Box,{sx:{color:'error.main',mt:2},children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Validation Errors\"}),Object.entries(validationErrors).map(_ref2=>{let[key,error]=_ref2;return/*#__PURE__*/_jsx(\"p\",{children:error},key);})]})]}):renderNodeProperties()})]})})]})})]});};export default IntegrationFlowCanvas;","map":{"version":3,"names":["React","useState","useCallback","useEffect","Box","Grid","Paper","Tabs","Tab","Divider","IconButton","Tooltip","Save","SaveIcon","PlayArrow","RunIcon","SettingsBackupRestore","ResetIcon","History","HistoryIcon","Code","CodeIcon","Fullscreen","FullscreenIcon","FlowCanvas","NodePanel","jsx","_jsx","jsxs","_jsxs","IntegrationFlowCanvas","_ref","initialElements","readOnly","userPermissions","onSave","onRun","onChange","elements","setElements","selectedElement","setSelectedElement","validationErrors","setValidationErrors","sidebarTab","setSidebarTab","handleElementsChange","newElements","handleNodeSelect","node","type","handleEdgeSelect","edge","handleValidate","flowElements","sourceNodes","filter","el","destinationNodes","edges","source","target","errors","isValid","length","general","handleSave","handleRun","handleReset","renderNodeProperties","sx","p","textAlign","color","children","id","height","display","flexDirection","elevation","mb","alignItems","title","onClick","disabled","orientation","flexItem","mx","flexGrow","container","spacing","item","xs","onRefresh","overflow","onNodeSelect","onEdgeSelect","onValidate","value","_","newValue","variant","label","Object","keys","mt","entries","map","_ref2","key","error"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/flow/IntegrationFlowCanvas.jsx"],"sourcesContent":["/**\n * Integration Flow Canvas\n *\n * A complete integration flow canvas that combines the flow canvas with\n * a node panel and properties panel.\n *\n * @component\n */\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Grid, Paper, Tabs, Tab, Divider, IconButton, Tooltip } from '@mui/material';\nimport {\n  Save as SaveIcon,\n  PlayArrow as RunIcon,\n  SettingsBackupRestore as ResetIcon,\n  History as HistoryIcon,\n  Code as CodeIcon,\n  Fullscreen as FullscreenIcon,\n} from '@mui/icons-material';\n\n// Import flow components\nimport FlowCanvas from './FlowCanvas';\nimport NodePanel from './NodePanel';\n\n/**\n * Integration Flow Canvas component\n */\nconst IntegrationFlowCanvas = ({\n  initialElements = [],\n  readOnly = false,\n  userPermissions = [],\n  onSave,\n  onRun,\n  onChange,\n}) => {\n  // State for flow elements\n  const [elements, setElements] = useState(initialElements);\n  \n  // State for selected node/edge\n  const [selectedElement, setSelectedElement] = useState(null);\n  \n  // State for validation errors\n  const [validationErrors, setValidationErrors] = useState({});\n  \n  // State for sidebar tabs\n  const [sidebarTab, setSidebarTab] = useState(0);\n  \n  // Handle flow elements change\n  const handleElementsChange = useCallback((newElements) => {\n    setElements(newElements);\n    if (onChange) {\n      onChange(newElements);\n    }\n  }, [onChange]);\n  \n  // Handle node selection\n  const handleNodeSelect = useCallback((node) => {\n    setSelectedElement({ ...node, type: 'node' });\n    setSidebarTab(1); // Switch to properties tab\n  }, []);\n  \n  // Handle edge selection\n  const handleEdgeSelect = useCallback((edge) => {\n    setSelectedElement({ ...edge, type: 'edge' });\n    setSidebarTab(1); // Switch to properties tab\n  }, []);\n  \n  // Handle flow validation\n  const handleValidate = useCallback((flowElements) => {\n    // Simple validation: ensure there's at least one source and one destination\n    const sourceNodes = flowElements.filter(\n      el => el.type === 'sourceNode'\n    );\n    \n    const destinationNodes = flowElements.filter(\n      el => el.type === 'destinationNode'\n    );\n    \n    const edges = flowElements.filter(el => el.source && el.target);\n    \n    const errors = {};\n    const isValid = sourceNodes.length > 0 && \n                   destinationNodes.length > 0 && \n                   edges.length > 0;\n    \n    if (!isValid) {\n      if (sourceNodes.length === 0) {\n        errors.general = 'Flow must include at least one source node';\n      } else if (destinationNodes.length === 0) {\n        errors.general = 'Flow must include at least one destination node';\n      } else if (edges.length === 0) {\n        errors.general = 'Nodes must be connected';\n      }\n    }\n    \n    setValidationErrors(errors);\n    return isValid;\n  }, []);\n  \n  // Handle flow save\n  const handleSave = useCallback(() => {\n    if (onSave) {\n      onSave(elements);\n    }\n  }, [elements, onSave]);\n  \n  // Handle flow run\n  const handleRun = useCallback(() => {\n    const isValid = handleValidate(elements);\n    if (isValid && onRun) {\n      onRun(elements);\n    }\n  }, [elements, handleValidate, onRun]);\n  \n  // Handle reset flow\n  const handleReset = useCallback(() => {\n    setElements(initialElements);\n    setSelectedElement(null);\n  }, [initialElements]);\n  \n  // Render node properties panel\n  const renderNodeProperties = () => {\n    if (!selectedElement || selectedElement.type !== 'node') {\n      return (\n        <Box sx={{ p: 2, textAlign: 'center', color: 'text.secondary' }}>\n          Select a node to view properties\n        </Box>\n      );\n    }\n    \n    // In a real implementation, this would show a form for editing the node\n    return (\n      <Box sx={{ p: 2 }}>\n        <h3>Node Properties</h3>\n        <p>ID: {selectedElement.id}</p>\n        <p>Type: {selectedElement.type}</p>\n        {/* More properties would go here */}\n      </Box>\n    );\n  };\n  \n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      {/* Toolbar */}\n      <Paper elevation={1} sx={{ mb: 1 }}>\n        <Box sx={{ display: 'flex', p: 1, alignItems: 'center' }}>\n          <Tooltip title=\"Save Flow\">\n            <IconButton onClick={handleSave} disabled={readOnly}>\n              <SaveIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Run Flow\">\n            <IconButton onClick={handleRun} color=\"primary\">\n              <RunIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Reset Flow\">\n            <IconButton onClick={handleReset} disabled={readOnly}>\n              <ResetIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Divider orientation=\"vertical\" flexItem sx={{ mx: 1 }} />\n          \n          <Tooltip title=\"View History\">\n            <IconButton>\n              <HistoryIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"View JSON\">\n            <IconButton>\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Box sx={{ flexGrow: 1 }} />\n          \n          <Tooltip title=\"Fullscreen\">\n            <IconButton>\n              <FullscreenIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Paper>\n      \n      {/* Main content */}\n      <Box sx={{ flexGrow: 1, display: 'flex' }}>\n        <Grid container spacing={1} sx={{ height: '100%' }}>\n          {/* Node panel (left sidebar) */}\n          <Grid item xs={2} sx={{ height: '100%' }}>\n            <NodePanel \n              userPermissions={userPermissions} \n              onRefresh={() => {}} // Placeholder for refresh functionality\n            />\n          </Grid>\n          \n          {/* Flow canvas (center) */}\n          <Grid item xs={8} sx={{ height: '100%' }}>\n            <Paper \n              elevation={2} \n              sx={{ height: '100%', overflow: 'hidden' }}\n            >\n              <FlowCanvas\n                initialElements={elements}\n                readOnly={readOnly}\n                onChange={handleElementsChange}\n                onSave={handleSave}\n                onNodeSelect={handleNodeSelect}\n                onEdgeSelect={handleEdgeSelect}\n                onValidate={handleValidate}\n                validationErrors={validationErrors}\n              />\n            </Paper>\n          </Grid>\n          \n          {/* Properties panel (right sidebar) */}\n          <Grid item xs={2} sx={{ height: '100%' }}>\n            <Paper \n              elevation={2} \n              sx={{ \n                height: '100%', \n                display: 'flex', \n                flexDirection: 'column',\n                overflow: 'hidden',\n              }}\n            >\n              <Tabs\n                value={sidebarTab}\n                onChange={(_, newValue) => setSidebarTab(newValue)}\n                variant=\"fullWidth\"\n              >\n                <Tab label=\"Info\" />\n                <Tab label=\"Properties\" />\n              </Tabs>\n              \n              <Divider />\n              \n              <Box sx={{ flexGrow: 1, overflow: 'auto' }}>\n                {sidebarTab === 0 ? (\n                  <Box sx={{ p: 2 }}>\n                    <h3>Flow Information</h3>\n                    <p>Nodes: {elements.filter(el => !el.source).length}</p>\n                    <p>Connections: {elements.filter(el => el.source).length}</p>\n                    {Object.keys(validationErrors).length > 0 && (\n                      <Box sx={{ color: 'error.main', mt: 2 }}>\n                        <h4>Validation Errors</h4>\n                        {Object.entries(validationErrors).map(([key, error]) => (\n                          <p key={key}>{error}</p>\n                        ))}\n                      </Box>\n                    )}\n                  </Box>\n                ) : renderNodeProperties()}\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n};\n\nIntegrationFlowCanvas.propTypes = {\n  initialElements: PropTypes.array,\n  readOnly: PropTypes.bool,\n  userPermissions: PropTypes.arrayOf(PropTypes.string),\n  onSave: PropTypes.func,\n  onRun: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nexport default IntegrationFlowCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}