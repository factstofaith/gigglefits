{"ast":null,"code":"import React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, Button, Grid, Card, CardContent, CardActions, IconButton, Tooltip } from \"../design-system/optimized\";\nimport { Add as AddIcon, PlayArrow as PlayIcon, Edit as EditIcon, Delete as DeleteIcon, Info as InfoIcon } from '@mui/icons-material';\n\n// Import components\nimport IntegrationCreationDialog from \"../components/integration/IntegrationCreationDialog\";\n\n// Mock data for integrations\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst MOCK_INTEGRATIONS = [{\n  id: '1',\n  name: 'Sales Data Sync',\n  description: 'Sync sales data from CRM to data warehouse',\n  type: 'data_sync',\n  status: 'active',\n  lastRun: '2025-03-29T14:32:00Z'\n}, {\n  id: '2',\n  name: 'Customer Data Transformation',\n  description: 'Transform customer data for analytics',\n  type: 'data_transformation',\n  status: 'inactive',\n  lastRun: null\n}];\n\n/**\n * Integrations Page - Lists all available integrations\n */\nconst IntegrationsPage = () => {\n  const navigate = useNavigate();\n  const [integrations, setIntegrations] = useState(MOCK_INTEGRATIONS);\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n\n  // Handle creating a new integration\n  const handleCreateIntegration = useCallback(integrationData => {\n    // In a real app, you would send this to your backend\n    console.log('Creating integration:', integrationData);\n\n    // Add to our local state for now (mock)\n    const newIntegration = {\n      ...integrationData,\n      id: `${Date.now()}`,\n      status: 'inactive',\n      lastRun: null\n    };\n    setIntegrations(prevIntegrations => [...prevIntegrations, newIntegration]);\n\n    // Navigate to the detail page for the new integration\n    navigate(`/integrations/${newIntegration.id}`);\n  }, [navigate]);\n\n  // Handle navigating to integration details\n  const handleViewIntegration = useCallback(id => {\n    navigate(`/integrations/${id}`);\n  }, [navigate]);\n\n  // Handle editing an integration\n  const handleEditIntegration = useCallback(id => {\n    navigate(`/integrations/${id}?edit=true`);\n  }, [navigate]);\n\n  // Handle running an integration\n  const handleRunIntegration = useCallback(id => {\n    console.log('Running integration:', id);\n    // In a real app, you would trigger the integration execution\n  }, []);\n\n  // Handle deleting an integration\n  const handleDeleteIntegration = useCallback(id => {\n    console.log('Deleting integration:', id);\n\n    // Remove from our local state (mock)\n    setIntegrations(prevIntegrations => prevIntegrations.filter(integration => integration.id !== id));\n  }, []);\n\n  // Get type label\n  const getTypeLabel = typeValue => {\n    const types = {\n      'data_sync': 'Data Synchronization',\n      'data_transformation': 'Data Transformation',\n      'data_validation': 'Data Validation',\n      'data_migration': 'Data Migration'\n    };\n    return types[typeValue] || typeValue;\n  };\n  return /*#__PURE__*/_jsxs(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxs(Box, {\n      my: 4,\n      children: [/*#__PURE__*/_jsx(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Integrations\"\n      }), /*#__PURE__*/_jsx(Box, {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        mb: 2,\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsx(AddIcon, {}),\n          onClick: () => setIsCreateDialogOpen(true),\n          children: \"Create New Integration\"\n        })\n      }), integrations.length === 0 ? /*#__PURE__*/_jsxs(Paper, {\n        sx: {\n          p: 3,\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"You don't have any integrations yet\"\n        }), /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Create your first integration to get started\"\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsx(AddIcon, {}),\n          onClick: () => setIsCreateDialogOpen(true),\n          sx: {\n            mt: 2\n          },\n          children: \"Create Integration\"\n        })]\n      }) : /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        spacing: 3,\n        children: integrations.map(integration => /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsxs(CardContent, {\n              children: [/*#__PURE__*/_jsxs(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                mb: 1,\n                children: [/*#__PURE__*/_jsx(Typography, {\n                  variant: \"h6\",\n                  component: \"h2\",\n                  sx: {\n                    flexGrow: 1\n                  },\n                  children: integration.name\n                }), /*#__PURE__*/_jsx(Box, {\n                  sx: {\n                    width: 10,\n                    height: 10,\n                    borderRadius: '50%',\n                    backgroundColor: integration.status === 'active' ? 'success.main' : 'text.disabled',\n                    mr: 1\n                  }\n                })]\n              }), /*#__PURE__*/_jsx(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: integration.description\n              }), /*#__PURE__*/_jsxs(Box, {\n                mt: 2,\n                children: [/*#__PURE__*/_jsxs(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  color: \"textSecondary\",\n                  children: [\"Type: \", getTypeLabel(integration.type)]\n                }), integration.lastRun && /*#__PURE__*/_jsxs(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  color: \"textSecondary\",\n                  children: [\"Last Run: \", new Date(integration.lastRun).toLocaleString()]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(CardActions, {\n              children: [/*#__PURE__*/_jsx(Tooltip, {\n                title: \"View Details\",\n                children: /*#__PURE__*/_jsx(Button, {\n                  size: \"small\",\n                  onClick: () => handleViewIntegration(integration.id),\n                  children: \"Details\"\n                })\n              }), /*#__PURE__*/_jsx(Box, {\n                sx: {\n                  flexGrow: 1\n                }\n              }), /*#__PURE__*/_jsx(Tooltip, {\n                title: \"Run Integration\",\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleRunIntegration(integration.id),\n                  children: /*#__PURE__*/_jsx(PlayIcon, {\n                    fontSize: \"small\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Tooltip, {\n                title: \"Edit Integration\",\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleEditIntegration(integration.id),\n                  children: /*#__PURE__*/_jsx(EditIcon, {\n                    fontSize: \"small\"\n                  })\n                })\n              }), /*#__PURE__*/_jsx(Tooltip, {\n                title: \"Delete Integration\",\n                children: /*#__PURE__*/_jsx(IconButton, {\n                  size: \"small\",\n                  onClick: () => handleDeleteIntegration(integration.id),\n                  children: /*#__PURE__*/_jsx(DeleteIcon, {\n                    fontSize: \"small\"\n                  })\n                })\n              })]\n            })]\n          })\n        }, integration.id))\n      })]\n    }), /*#__PURE__*/_jsx(IntegrationCreationDialog, {\n      open: isCreateDialogOpen,\n      onClose: () => setIsCreateDialogOpen(false),\n      onSubmit: handleCreateIntegration\n    })]\n  });\n};\nexport default IntegrationsPage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}