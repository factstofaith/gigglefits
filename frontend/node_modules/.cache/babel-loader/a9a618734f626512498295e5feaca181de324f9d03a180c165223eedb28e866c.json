{"ast":null,"code":"import React from'react';import{Routes,Route,Navigate}from'react-router-dom';// Import page components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=/*#__PURE__*/React.lazy(()=>import(\"./pages/HomePage\"));const LoginPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/LoginPage\"));const IntegrationsPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/IntegrationsPage\"));const IntegrationDetailPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/IntegrationDetailPage\"));const EarningsPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/EarningsPage\"));const AdminDashboardPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/AdminDashboardPage\"));const UserSettingsPage=/*#__PURE__*/React.lazy(()=>import(\"./pages/UserSettingsPage\"));// Test components (for development purposes only)\nconst TestS3Configuration=/*#__PURE__*/React.lazy(()=>import(\"./components/integration/test/TestS3Configuration\"));const TestSharePointConfiguration=/*#__PURE__*/React.lazy(()=>import(\"./components/integration/test/TestSharePointConfiguration\"));const TestAPIWebhookConfiguration=/*#__PURE__*/React.lazy(()=>import(\"./components/integration/test/TestAPIWebhookConfiguration\"));// Auth components\nconst RequireAuth=/*#__PURE__*/React.lazy(()=>import(\"./components/auth/RequireAuth\"));const RequireAdmin=/*#__PURE__*/React.lazy(()=>import(\"./components/auth/RequireAdmin\"));const AppRoutes=()=>{return/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(RequireAuth,{children:/*#__PURE__*/_jsx(HomePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/integrations\",element:/*#__PURE__*/_jsx(RequireAuth,{children:/*#__PURE__*/_jsx(IntegrationsPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/integrations/:id\",element:/*#__PURE__*/_jsx(RequireAuth,{children:/*#__PURE__*/_jsx(IntegrationDetailPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/earnings\",element:/*#__PURE__*/_jsx(RequireAuth,{children:/*#__PURE__*/_jsx(EarningsPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:/*#__PURE__*/_jsx(RequireAdmin,{children:/*#__PURE__*/_jsx(AdminDashboardPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/settings\",element:/*#__PURE__*/_jsx(RequireAuth,{children:/*#__PURE__*/_jsx(UserSettingsPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/dev/test-s3\",element:/*#__PURE__*/_jsx(TestS3Configuration,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dev/test-sharepoint\",element:/*#__PURE__*/_jsx(TestSharePointConfiguration,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dev/test-api-webhook\",element:/*#__PURE__*/_jsx(TestAPIWebhookConfiguration,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]});};export default AppRoutes;","map":{"version":3,"names":["React","Routes","Route","Navigate","jsx","_jsx","jsxs","_jsxs","HomePage","lazy","LoginPage","IntegrationsPage","IntegrationDetailPage","EarningsPage","AdminDashboardPage","UserSettingsPage","TestS3Configuration","TestSharePointConfiguration","TestAPIWebhookConfiguration","RequireAuth","RequireAdmin","AppRoutes","children","path","element","to"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/AppRoutes.jsx"],"sourcesContent":["import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\n// Import page components\nconst HomePage = React.lazy(() => import('./pages/HomePage'));\nconst LoginPage = React.lazy(() => import('./pages/LoginPage'));\nconst IntegrationsPage = React.lazy(() => import('./pages/IntegrationsPage'));\nconst IntegrationDetailPage = React.lazy(() => import('./pages/IntegrationDetailPage'));\nconst EarningsPage = React.lazy(() => import('./pages/EarningsPage'));\nconst AdminDashboardPage = React.lazy(() => import('./pages/AdminDashboardPage'));\nconst UserSettingsPage = React.lazy(() => import('./pages/UserSettingsPage'));\n\n// Test components (for development purposes only)\nconst TestS3Configuration = React.lazy(() => import('./components/integration/test/TestS3Configuration'));\nconst TestSharePointConfiguration = React.lazy(() => import('./components/integration/test/TestSharePointConfiguration'));\nconst TestAPIWebhookConfiguration = React.lazy(() => import('./components/integration/test/TestAPIWebhookConfiguration'));\n\n// Auth components\nconst RequireAuth = React.lazy(() => import('./components/auth/RequireAuth'));\nconst RequireAdmin = React.lazy(() => import('./components/auth/RequireAdmin'));\n\nconst AppRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />} />\n      \n      <Route path=\"/\" element={<RequireAuth><HomePage /></RequireAuth>} />\n      \n      <Route path=\"/integrations\" element={<RequireAuth><IntegrationsPage /></RequireAuth>} />\n      <Route path=\"/integrations/:id\" element={<RequireAuth><IntegrationDetailPage /></RequireAuth>} />\n      \n      <Route path=\"/earnings\" element={<RequireAuth><EarningsPage /></RequireAuth>} />\n      \n      <Route path=\"/admin\" element={<RequireAdmin><AdminDashboardPage /></RequireAdmin>} />\n      \n      <Route path=\"/settings\" element={<RequireAuth><UserSettingsPage /></RequireAuth>} />\n      \n      {/* Development testing routes */}\n      <Route path=\"/dev/test-s3\" element={<TestS3Configuration />} />\n      <Route path=\"/dev/test-sharepoint\" element={<TestSharePointConfiguration />} />\n      <Route path=\"/dev/test-api-webhook\" element={<TestAPIWebhookConfiguration />} />\n      \n      <Route path=\"*\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}