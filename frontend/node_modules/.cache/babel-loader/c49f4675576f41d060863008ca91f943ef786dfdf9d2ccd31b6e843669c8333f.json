{"ast":null,"code":"/**\n * S3 Configuration Component\n *\n * A comprehensive component for configuring Amazon S3 as a data source.\n * Includes credential management, bucket browsing, and S3 object selection.\n * \n * @component\n */import React,{useState,useEffect,useCallback}from'react';import{Box,Button,Card,CardContent,CardHeader,CircularProgress,Divider,Grid,IconButton,Paper,TextField,Tooltip,Typography,Alert,Stack,Chip,Accordion,AccordionSummary,AccordionDetails}from'@mui/material';// Icons\nimport{ExpandMore as ExpandMoreIcon,Refresh as RefreshIcon,CloudDone as CloudDoneIcon,Info as InfoIcon,Error as ErrorIcon,CheckCircle as CheckCircleIcon,Storage as StorageIcon,InsertDriveFile as FileIcon}from'@mui/icons-material';// Components\nimport S3CredentialManager from\"./s3/S3CredentialManager\";import S3BucketBrowser from\"./s3/S3BucketBrowser\";// Utils\nimport{generateFileMetadata}from\"../../utils/fileTypeUtils\";/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */const formatDate=dateString=>{if(!dateString)return'Unknown';const date=new Date(dateString);return date.toLocaleString();};/**\n * S3Configuration component for configuring S3 as a data source\n * \n * @param {Object} props - Component props\n * @returns {JSX.Element} The S3Configuration component\n */const S3Configuration=_ref=>{let{onChange,value,readOnly=false}=_ref;// State for configuration\nconst[config,setConfig]=useState({credentials:null,region:'us-east-1',bucket:'',path:'',selectedObject:null});// Browser visibility state\nconst[showBrowser,setShowBrowser]=useState(false);// Loading state\nconst[loading,setLoading]=useState(false);const[connectionStatus,setConnectionStatus]=useState(null);// Error state\nconst[error,setError]=useState(null);// Initialize config from props\nuseEffect(()=>{if(value){setConfig(prevConfig=>({...prevConfig,...value}));}},[value]);/**\n   * Handle credentials change from the credential manager\n   */const handleCredentialsChange=useCallback(credentials=>{setConfig(prev=>{const updated={...prev,credentials,region:(credentials===null||credentials===void 0?void 0:credentials.region)||prev.region};if(onChange){onChange(updated);}return updated;});// Show the browser when credentials are saved\nif(credentials){setShowBrowser(true);}},[onChange]);/**\n   * Handle bucket selection from the browser\n   */const handleBucketSelect=useCallback(bucketName=>{setConfig(prev=>{const updated={...prev,bucket:bucketName,path:'',selectedObject:null};if(onChange){onChange(updated);}return updated;});},[onChange]);/**\n   * Handle object selection from the browser\n   */const handleObjectSelect=useCallback(objectInfo=>{setConfig(prev=>{const updated={...prev,bucket:objectInfo.bucketName,path:objectInfo.key,selectedObject:objectInfo};if(onChange){onChange(updated);}return updated;});},[onChange]);/**\n   * Test the S3 connection\n   */const testConnection=useCallback(async()=>{if(!config.credentials||!config.bucket){setError('Credentials and bucket are required to test connection');return;}setLoading(true);setError(null);setConnectionStatus(null);try{// Simulate API call for development environment\nawait new Promise(resolve=>setTimeout(resolve,1500));// Simulated successful response\nconst success=Math.random()>0.2;// 80% chance of success\nif(success){setConnectionStatus({success:true,message:'Successfully connected to S3 bucket',details:{bucket:config.bucket,region:config.region,objectsCount:Math.floor(Math.random()*100)+1,lastAccessed:new Date().toISOString()}});}else{// Simulated error\nconst errorTypes=['Access Denied','Bucket Not Found','Network Error','Configuration Error'];const errorType=errorTypes[Math.floor(Math.random()*errorTypes.length)];setConnectionStatus({success:false,message:`Failed to connect to S3 bucket: ${errorType}`,details:{error:errorType,code:`S3Error${errorType.replace(/\\s/g,'')}`}});setError(`Failed to connect to S3 bucket: ${errorType}`);}}catch(err){console.error('Error testing S3 connection:',err);setError(err.message||'An unexpected error occurred during connection test');setConnectionStatus({success:false,message:'Connection test failed',details:{error:err.message}});}finally{setLoading(false);}},[config.bucket,config.credentials,config.region]);// Prepare the browser config from the credentials\nconst browserConfig={region:config.region,credentials:config.credentials};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Amazon S3 Configuration\"}),/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mb:3},children:\"Configure connection to Amazon S3 for accessing and using S3 objects as data sources. First, set up your AWS credentials, then browse and select a bucket or specific object.\"}),/*#__PURE__*/_jsxs(Accordion,{defaultExpanded:true,children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"credentials-content\",id:\"credentials-header\",children:/*#__PURE__*/_jsxs(Typography,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(StorageIcon,{sx:{mr:1}}),\"Step 1: Configure AWS Credentials\"]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(S3CredentialManager,{onCredentialsSaved:handleCredentialsChange,onCredentialsLoaded:handleCredentialsChange,readOnly:readOnly,showSaveControls:true,initialVisible:true})})]}),/*#__PURE__*/_jsxs(Accordion,{expanded:showBrowser,onChange:()=>setShowBrowser(!showBrowser),disabled:!config.credentials,children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),\"aria-controls\":\"browser-content\",id:\"browser-header\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between',width:'100%',mr:2},children:[/*#__PURE__*/_jsxs(Typography,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(FileIcon,{sx:{mr:1}}),\"Step 2: Select S3 Bucket or Object\"]}),config.bucket&&/*#__PURE__*/_jsx(Chip,{label:config.bucket,color:\"primary\",size:\"small\",variant:\"outlined\",onClick:e=>{e.stopPropagation();setShowBrowser(true);}})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:config.credentials?/*#__PURE__*/_jsx(S3BucketBrowser,{config:browserConfig,onSelectBucket:handleBucketSelect,onSelectObject:handleObjectSelect,readOnly:readOnly,selectedBucket:config.bucket,selectedPrefix:config.path?config.path.substring(0,config.path.lastIndexOf('/')+1):''}):/*#__PURE__*/_jsx(Alert,{severity:\"warning\",children:\"You need to configure and save AWS credentials first.\"})})]}),/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{mt:3},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Configuration Summary\",action:/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",disabled:!config.credentials||!config.bucket||loading||readOnly,onClick:testConnection,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(RefreshIcon,{}),size:\"small\",children:\"Test Connection\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"AWS Region\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:config.region||'Not configured'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"S3 Bucket\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:config.bucket||'No bucket selected'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Object Path\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:config.path||'No specific object selected'})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Credentials Status\"}),/*#__PURE__*/_jsx(Chip,{label:config.credentials?\"Configured\":\"Not Configured\",color:config.credentials?\"success\":\"default\",size:\"small\",icon:config.credentials?/*#__PURE__*/_jsx(CheckCircleIcon,{}):/*#__PURE__*/_jsx(InfoIcon,{})})]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[config.selectedObject&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Selected Object\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2},children:(()=>{const FileCard=require(\"../common/FileCard\").default;// Create a file-like object from the S3 object info\nconst fileObj={name:config.selectedObject.key.split('/').pop(),type:config.selectedObject.contentType||'',size:config.selectedObject.size||0,lastModified:config.selectedObject.lastModified||new Date().toISOString()};// Generate metadata\nconst metadata=generateFileMetadata(fileObj);return/*#__PURE__*/_jsx(FileCard,{file:fileObj,metadata:metadata,showPreview:false,variant:\"outlined\"});})()})]}),connectionStatus&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Connection Test Result\"}),/*#__PURE__*/_jsxs(Alert,{severity:connectionStatus.success?\"success\":\"error\",icon:connectionStatus.success?/*#__PURE__*/_jsx(CloudDoneIcon,{}):/*#__PURE__*/_jsx(ErrorIcon,{}),children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:connectionStatus.message}),connectionStatus.details&&connectionStatus.success&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1,fontSize:'0.875rem'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",component:\"div\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Bucket:\"}),\" \",connectionStatus.details.bucket]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",component:\"div\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Region:\"}),\" \",connectionStatus.details.region]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",component:\"div\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Objects:\"}),\" \",connectionStatus.details.objectsCount]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",component:\"div\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Accessed:\"}),\" \",formatDate(connectionStatus.details.lastAccessed)]})]})]})]})]})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error})]})]})]});};export default S3Configuration;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Card","CardContent","CardHeader","CircularProgress","Divider","Grid","IconButton","Paper","TextField","Tooltip","Typography","Alert","Stack","Chip","Accordion","AccordionSummary","AccordionDetails","ExpandMore","ExpandMoreIcon","Refresh","RefreshIcon","CloudDone","CloudDoneIcon","Info","InfoIcon","Error","ErrorIcon","CheckCircle","CheckCircleIcon","Storage","StorageIcon","InsertDriveFile","FileIcon","S3CredentialManager","S3BucketBrowser","generateFileMetadata","jsx","_jsx","jsxs","_jsxs","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","toLocaleString","S3Configuration","_ref","onChange","value","readOnly","config","setConfig","credentials","region","bucket","path","selectedObject","showBrowser","setShowBrowser","loading","setLoading","connectionStatus","setConnectionStatus","error","setError","prevConfig","handleCredentialsChange","prev","updated","handleBucketSelect","bucketName","handleObjectSelect","objectInfo","key","testConnection","Promise","resolve","setTimeout","success","random","message","details","objectsCount","lastAccessed","toISOString","errorTypes","errorType","length","code","replace","err","console","browserConfig","children","variant","gutterBottom","severity","sx","mb","defaultExpanded","expandIcon","id","display","alignItems","mr","onCredentialsSaved","onCredentialsLoaded","showSaveControls","initialVisible","expanded","disabled","justifyContent","width","label","color","size","onClick","e","stopPropagation","onSelectBucket","onSelectObject","selectedBucket","selectedPrefix","substring","lastIndexOf","mt","title","action","startIcon","container","spacing","item","xs","md","icon","p","FileCard","require","default","fileObj","name","split","pop","type","contentType","lastModified","metadata","file","showPreview","fontSize","component"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/S3Configuration.jsx"],"sourcesContent":["/**\n * S3 Configuration Component\n *\n * A comprehensive component for configuring Amazon S3 as a data source.\n * Includes credential management, bucket browsing, and S3 object selection.\n * \n * @component\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Divider,\n  Grid,\n  IconButton,\n  Paper,\n  TextField,\n  Tooltip,\n  Typography,\n  Alert,\n  Stack,\n  Chip,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from '@mui/material';\n\n// Icons\nimport {\n  ExpandMore as ExpandMoreIcon,\n  Refresh as RefreshIcon,\n  CloudDone as CloudDoneIcon,\n  Info as InfoIcon,\n  Error as ErrorIcon,\n  CheckCircle as CheckCircleIcon,\n  Storage as StorageIcon,\n  InsertDriveFile as FileIcon,\n} from '@mui/icons-material';\n\n// Components\nimport S3CredentialManager from './s3/S3CredentialManager';\nimport S3BucketBrowser from './s3/S3BucketBrowser';\n\n// Utils\nimport { generateFileMetadata } from '../../utils/fileTypeUtils';\n\n/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Unknown';\n  \n  const date = new Date(dateString);\n  return date.toLocaleString();\n};\n\n/**\n * S3Configuration component for configuring S3 as a data source\n * \n * @param {Object} props - Component props\n * @returns {JSX.Element} The S3Configuration component\n */\nconst S3Configuration = ({ \n  onChange,\n  value,\n  readOnly = false,\n}) => {\n  // State for configuration\n  const [config, setConfig] = useState({\n    credentials: null,\n    region: 'us-east-1',\n    bucket: '',\n    path: '',\n    selectedObject: null,\n  });\n\n  // Browser visibility state\n  const [showBrowser, setShowBrowser] = useState(false);\n  \n  // Loading state\n  const [loading, setLoading] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  \n  // Error state\n  const [error, setError] = useState(null);\n  \n  // Initialize config from props\n  useEffect(() => {\n    if (value) {\n      setConfig(prevConfig => ({\n        ...prevConfig,\n        ...value,\n      }));\n    }\n  }, [value]);\n  \n  /**\n   * Handle credentials change from the credential manager\n   */\n  const handleCredentialsChange = useCallback((credentials) => {\n    setConfig(prev => {\n      const updated = {\n        ...prev,\n        credentials,\n        region: credentials?.region || prev.region,\n      };\n      \n      if (onChange) {\n        onChange(updated);\n      }\n      \n      return updated;\n    });\n    \n    // Show the browser when credentials are saved\n    if (credentials) {\n      setShowBrowser(true);\n    }\n  }, [onChange]);\n  \n  /**\n   * Handle bucket selection from the browser\n   */\n  const handleBucketSelect = useCallback((bucketName) => {\n    setConfig(prev => {\n      const updated = {\n        ...prev,\n        bucket: bucketName,\n        path: '',\n        selectedObject: null,\n      };\n      \n      if (onChange) {\n        onChange(updated);\n      }\n      \n      return updated;\n    });\n  }, [onChange]);\n  \n  /**\n   * Handle object selection from the browser\n   */\n  const handleObjectSelect = useCallback((objectInfo) => {\n    setConfig(prev => {\n      const updated = {\n        ...prev,\n        bucket: objectInfo.bucketName,\n        path: objectInfo.key,\n        selectedObject: objectInfo,\n      };\n      \n      if (onChange) {\n        onChange(updated);\n      }\n      \n      return updated;\n    });\n  }, [onChange]);\n  \n  /**\n   * Test the S3 connection\n   */\n  const testConnection = useCallback(async () => {\n    if (!config.credentials || !config.bucket) {\n      setError('Credentials and bucket are required to test connection');\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    setConnectionStatus(null);\n    \n    try {\n      // Simulate API call for development environment\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Simulated successful response\n      const success = Math.random() > 0.2; // 80% chance of success\n      \n      if (success) {\n        setConnectionStatus({\n          success: true,\n          message: 'Successfully connected to S3 bucket',\n          details: {\n            bucket: config.bucket,\n            region: config.region,\n            objectsCount: Math.floor(Math.random() * 100) + 1,\n            lastAccessed: new Date().toISOString()\n          }\n        });\n      } else {\n        // Simulated error\n        const errorTypes = [\n          'Access Denied',\n          'Bucket Not Found',\n          'Network Error',\n          'Configuration Error'\n        ];\n        const errorType = errorTypes[Math.floor(Math.random() * errorTypes.length)];\n        \n        setConnectionStatus({\n          success: false,\n          message: `Failed to connect to S3 bucket: ${errorType}`,\n          details: {\n            error: errorType,\n            code: `S3Error${errorType.replace(/\\s/g, '')}`\n          }\n        });\n        \n        setError(`Failed to connect to S3 bucket: ${errorType}`);\n      }\n    } catch (err) {\n      console.error('Error testing S3 connection:', err);\n      setError(err.message || 'An unexpected error occurred during connection test');\n      setConnectionStatus({\n        success: false,\n        message: 'Connection test failed',\n        details: {\n          error: err.message\n        }\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [config.bucket, config.credentials, config.region]);\n  \n  // Prepare the browser config from the credentials\n  const browserConfig = {\n    region: config.region,\n    credentials: config.credentials,\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom>\n        Amazon S3 Configuration\n      </Typography>\n      \n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        Configure connection to Amazon S3 for accessing and using S3 objects as data sources.\n        First, set up your AWS credentials, then browse and select a bucket or specific object.\n      </Alert>\n      \n      {/* Credentials Section */}\n      <Accordion defaultExpanded>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"credentials-content\"\n          id=\"credentials-header\"\n        >\n          <Typography sx={{ display: 'flex', alignItems: 'center' }}>\n            <StorageIcon sx={{ mr: 1 }} />\n            Step 1: Configure AWS Credentials\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <S3CredentialManager\n            onCredentialsSaved={handleCredentialsChange}\n            onCredentialsLoaded={handleCredentialsChange}\n            readOnly={readOnly}\n            showSaveControls={true}\n            initialVisible={true}\n          />\n        </AccordionDetails>\n      </Accordion>\n\n      {/* Bucket and Object Selection */}\n      <Accordion \n        expanded={showBrowser} \n        onChange={() => setShowBrowser(!showBrowser)}\n        disabled={!config.credentials}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"browser-content\"\n          id=\"browser-header\"\n        >\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%', mr: 2 }}>\n            <Typography sx={{ display: 'flex', alignItems: 'center' }}>\n              <FileIcon sx={{ mr: 1 }} />\n              Step 2: Select S3 Bucket or Object\n            </Typography>\n            \n            {config.bucket && (\n              <Chip \n                label={config.bucket}\n                color=\"primary\"\n                size=\"small\"\n                variant=\"outlined\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setShowBrowser(true);\n                }}\n              />\n            )}\n          </Box>\n        </AccordionSummary>\n        <AccordionDetails>\n          {config.credentials ? (\n            <S3BucketBrowser\n              config={browserConfig}\n              onSelectBucket={handleBucketSelect}\n              onSelectObject={handleObjectSelect}\n              readOnly={readOnly}\n              selectedBucket={config.bucket}\n              selectedPrefix={config.path ? config.path.substring(0, config.path.lastIndexOf('/') + 1) : ''}\n            />\n          ) : (\n            <Alert severity=\"warning\">\n              You need to configure and save AWS credentials first.\n            </Alert>\n          )}\n        </AccordionDetails>\n      </Accordion>\n      \n      {/* Summary Section */}\n      <Card variant=\"outlined\" sx={{ mt: 3 }}>\n        <CardHeader \n          title=\"Configuration Summary\"\n          action={\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              disabled={!config.credentials || !config.bucket || loading || readOnly}\n              onClick={testConnection}\n              startIcon={loading ? <CircularProgress size={20} /> : <RefreshIcon />}\n              size=\"small\"\n            >\n              Test Connection\n            </Button>\n          }\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={6}>\n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  AWS Region\n                </Typography>\n                <Typography variant=\"body2\">\n                  {config.region || 'Not configured'}\n                </Typography>\n              </Box>\n              \n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  S3 Bucket\n                </Typography>\n                <Typography variant=\"body2\">\n                  {config.bucket || 'No bucket selected'}\n                </Typography>\n              </Box>\n              \n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Object Path\n                </Typography>\n                <Typography variant=\"body2\">\n                  {config.path || 'No specific object selected'}\n                </Typography>\n              </Box>\n              \n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Credentials Status\n                </Typography>\n                <Chip \n                  label={config.credentials ? \"Configured\" : \"Not Configured\"}\n                  color={config.credentials ? \"success\" : \"default\"}\n                  size=\"small\"\n                  icon={config.credentials ? <CheckCircleIcon /> : <InfoIcon />}\n                />\n              </Box>\n            </Grid>\n            \n            <Grid item xs={12} md={6}>\n              {/* Selected Object Preview */}\n              {config.selectedObject && (\n                <Box>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Selected Object\n                  </Typography>\n                  <Paper variant=\"outlined\" sx={{ p: 2 }}>\n                    {/* Import the FileCard component for file preview */}\n                    {(() => {\n                      const FileCard = require('../common/FileCard').default;\n                      \n                      // Create a file-like object from the S3 object info\n                      const fileObj = {\n                        name: config.selectedObject.key.split('/').pop(),\n                        type: config.selectedObject.contentType || '',\n                        size: config.selectedObject.size || 0,\n                        lastModified: config.selectedObject.lastModified || new Date().toISOString(),\n                      };\n                      \n                      // Generate metadata\n                      const metadata = generateFileMetadata(fileObj);\n                      \n                      return (\n                        <FileCard\n                          file={fileObj}\n                          metadata={metadata}\n                          showPreview={false}\n                          variant=\"outlined\"\n                        />\n                      );\n                    })()}\n                  </Paper>\n                </Box>\n              )}\n              \n              {/* Connection Status */}\n              {connectionStatus && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Connection Test Result\n                  </Typography>\n                  <Alert \n                    severity={connectionStatus.success ? \"success\" : \"error\"}\n                    icon={connectionStatus.success ? <CloudDoneIcon /> : <ErrorIcon />}\n                  >\n                    <Typography variant=\"body2\">\n                      {connectionStatus.message}\n                    </Typography>\n                    \n                    {connectionStatus.details && connectionStatus.success && (\n                      <Box sx={{ mt: 1, fontSize: '0.875rem' }}>\n                        <Typography variant=\"body2\" component=\"div\">\n                          <strong>Bucket:</strong> {connectionStatus.details.bucket}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\">\n                          <strong>Region:</strong> {connectionStatus.details.region}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\">\n                          <strong>Objects:</strong> {connectionStatus.details.objectsCount}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"div\">\n                          <strong>Last Accessed:</strong> {formatDate(connectionStatus.details.lastAccessed)}\n                        </Typography>\n                      </Box>\n                    )}\n                  </Alert>\n                </Box>\n              )}\n            </Grid>\n          </Grid>\n          \n          {/* Error message */}\n          {error && (\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\n              {error}\n            </Alert>\n          )}\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nS3Configuration.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.object,\n  readOnly: PropTypes.bool,\n};\n\nexport default S3Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}