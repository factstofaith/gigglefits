{"ast":null,"code":"/**\n * useFeatureFlag Hook\n * \n * React hook for checking if a feature flag is enabled\n */\n\nimport { useState, useEffect } from 'react';\nimport featureFlagsService from \"../services/featureFlagsService\";\n\n/**\n * Hook to check if a feature flag is enabled\n * @param {string} featureName - Name of the feature flag to check\n * @returns {boolean} Whether the feature is enabled\n */\nfunction useFeatureFlag(featureName) {\n  const [isEnabled, setIsEnabled] = useState(featureFlagsService.isEnabled(featureName));\n  useEffect(() => {\n    // Re-check on mount to ensure we have the latest value\n    setIsEnabled(featureFlagsService.isEnabled(featureName));\n\n    // Setup event listener for flag changes\n    const handleFlagChange = e => {\n      if (e.detail && e.detail.flag === featureName) {\n        setIsEnabled(e.detail.value);\n      }\n    };\n    window.addEventListener('featureFlagChanged', handleFlagChange);\n    return () => {\n      window.removeEventListener('featureFlagChanged', handleFlagChange);\n    };\n  }, [featureName]);\n  return isEnabled;\n}\nexport default useFeatureFlag;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}