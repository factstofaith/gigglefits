{"ast":null,"code":"/**\n * S3 Bucket Browser Component\n *\n * A component for browsing and selecting AWS S3 buckets and objects.\n * Supports bucket listing, object browsing, searching, and file operations.\n *\n * @component\n */import React,{useState,useEffect,useCallback}from'react';import{Box,Button,Card,CardContent,CardHeader,Chip,CircularProgress,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Divider,FormControl,FormGroup,FormHelperText,FormLabel,Grid,IconButton,InputAdornment,InputLabel,List,ListItem,ListItemIcon,ListItemSecondaryAction,ListItemText,Menu,MenuItem,Paper,Radio,RadioGroup,Select,Slider,Stack,Switch,Tab,Tabs,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField,Tooltip,Typography,Alert,AlertTitle,FormControlLabel,Checkbox,LinearProgress}from'@mui/material';import{DatePicker}from'@mui/x-date-pickers/DatePicker';import{LocalizationProvider}from'@mui/x-date-pickers/LocalizationProvider';import{AdapterDateFns}from'@mui/x-date-pickers/AdapterDateFns';import{AddCircleOutline as AddIcon,ArrowUpward as UpIcon,CloudUpload as UploadIcon,Delete as DeleteIcon,Download as DownloadIcon,Folder as FolderIcon,FolderOpen as FolderOpenIcon,InsertDriveFile as FileIcon,MoreVert as MoreVertIcon,Refresh as RefreshIcon,Search as SearchIcon,Visibility as ViewIcon,CreateNewFolder as CreateFolderIcon,Storage as BucketIcon,CheckCircle as CheckCircleIcon,Close as CloseIcon,Info as InfoIcon,Warning as WarningIcon,ErrorOutline as ErrorOutlineIcon,FilterList as FilterListIcon,FilterAlt as FilterAltIcon,SelectAll as SelectAllIcon,LibraryAddCheck as BatchActionIcon,Public as PublicIcon,Lock as LockIcon,Archive as ArchiveIcon,Check as CheckIcon,Clear as ClearIcon,ContentCopy as CopyIcon,ZoomIn as ZoomInIcon,MoveToInbox as MoveIcon,Label as TagIcon,Settings as AdvancedIcon}from'@mui/icons-material';// Utilities for handling file types\nimport{generateFileMetadata,MimeTypeCategories}from\"../../../utils/fileTypeUtils\";// File type options for filtering\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const FILE_TYPE_OPTIONS=[{value:'TEXT',label:'Text Files',description:'CSV, TXT, JSON, XML, etc.'},{value:'DOCUMENT',label:'Documents',description:'PDF, DOCX, XLSX, PPTX, etc.'},{value:'IMAGE',label:'Images',description:'JPG, PNG, GIF, SVG, etc.'},{value:'AUDIO',label:'Audio',description:'MP3, WAV, OGG, etc.'},{value:'VIDEO',label:'Video',description:'MP4, WEBM, AVI, etc.'},{value:'ARCHIVE',label:'Archives',description:'ZIP, RAR, TAR, etc.'},{value:'DATA',label:'Data Files',description:'CSV, JSON, Parquet, etc.'},{value:'CODE',label:'Source Code',description:'JS, PY, JAVA, etc.'}];// Size options presets for filtering\nconst SIZE_PRESETS=[{value:[0,1024*10],label:'Tiny (< 10KB)'},{value:[0,1024*100],label:'Small (< 100KB)'},{value:[1024*100,1024*1024],label:'Medium (100KB - 1MB)'},{value:[1024*1024,1024*1024*10],label:'Large (1MB - 10MB)'},{value:[1024*1024*10,1024*1024*100],label:'X-Large (10MB - 100MB)'},{value:[1024*1024*100,Number.MAX_SAFE_INTEGER],label:'XX-Large (> 100MB)'}];// Date presets for filtering\nconst DATE_PRESETS=[{value:{days:1},label:'Last 24 hours'},{value:{days:7},label:'Last 7 days'},{value:{days:30},label:'Last 30 days'},{value:{days:90},label:'Last 3 months'},{value:{days:365},label:'Last year'},{value:'custom',label:'Custom range'}];/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */const formatDate=dateString=>{if(!dateString)return'Unknown';const date=new Date(dateString);return date.toLocaleString();};/**\n * Gets the date from a specified number of days ago\n * @param {number} days - Number of days to subtract from current date\n * @returns {Date} Date object representing the date X days ago\n */const getDateDaysAgo=days=>{const date=new Date();date.setDate(date.getDate()-days);return date;};/**\n * Applies filters to an array of objects\n * @param {Array} objects - Array of S3 objects to filter\n * @param {Object} filters - Filter criteria\n * @returns {Array} Filtered array of objects\n */const applyFilters=(objects,filters)=>{if(!objects||!filters)return objects;return objects.filter(item=>{// Skip directories if we're filtering by file type or size\nif(item.type==='folder'||item.type==='directory'){// Only filter directories by date or custom prefix\nlet matchesPrefix=true;let matchesDate=true;// Filter by prefix if specified\nif(filters.customPrefix){matchesPrefix=item.key.toLowerCase().includes(filters.customPrefix.toLowerCase());}// Filter by date if specified\nif(filters.dateRange.start&&filters.dateRange.end){const itemDate=new Date(item.lastModified);matchesDate=itemDate>=filters.dateRange.start&&itemDate<=filters.dateRange.end;}return matchesPrefix&&matchesDate;}// Filter by file type\nlet matchesFileType=true;if(filters.fileTypes&&filters.fileTypes.length>0){matchesFileType=filters.fileTypes.some(type=>{var _MimeTypeCategories$t;// Check if this file's content type belongs to the selected category\nconst contentType=item.contentType||'';return(_MimeTypeCategories$t=MimeTypeCategories[type])===null||_MimeTypeCategories$t===void 0?void 0:_MimeTypeCategories$t.some(mimeType=>contentType.toLowerCase().includes(mimeType.toLowerCase()));});}// Filter by size range\nlet matchesSize=true;if(filters.sizeRange&&filters.sizeRange.length===2){const size=item.size||0;matchesSize=size>=filters.sizeRange[0]&&size<=filters.sizeRange[1];}// Filter by date range\nlet matchesDate=true;if(filters.dateRange.start&&filters.dateRange.end){const itemDate=new Date(item.lastModified);matchesDate=itemDate>=filters.dateRange.start&&itemDate<=filters.dateRange.end;}// Filter by custom prefix\nlet matchesPrefix=true;if(filters.customPrefix){matchesPrefix=item.key.toLowerCase().includes(filters.customPrefix.toLowerCase());}return matchesFileType&&matchesSize&&matchesDate&&matchesPrefix;});};/**\n * Performs batch operation on selected items with comprehensive progress tracking\n * @param {string} action - The action to perform (delete, download, copy, etc.)\n * @param {Array} items - Array of selected items\n * @param {string} target - Target location for copy/move operations\n * @returns {Promise<Object>} Result of the batch operation\n */const performBatchOperation=async function(action,items){let target=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';if(!items||items.length===0){return{success:false,message:'No items selected'};}// Reset status\nsetBatchOperationStatus({inProgress:true,completed:false,failed:false,message:`Processing ${items.length} items...`,details:null,progress:0});// Track total items for progress calculation\nconst totalItems=items.length;const updateProgress=processedItems=>{const progress=Math.round(processedItems/totalItems*100);setBatchOperationStatus(prev=>({...prev,progress,message:`Processed ${processedItems} of ${totalItems} items (${progress}%)`}));};try{// Different operations based on action type\nswitch(action){case'delete':// Simulated batch delete with progress\nconsole.log(`Batch deleting ${items.length} items`);// Simulate progress updates\nfor(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,75));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully deleted ${items.length} items`,details:{itemCount:items.length,itemTypes:countItemTypes(items),totalSize:calculateTotalSize(items)},progress:100});return{success:true,message:`Successfully deleted ${items.length} items`,details:{itemCount:items.length}};case'download':// Simulated batch download with progress\nconsole.log(`Batch downloading ${items.length} items`);// Faster progress simulation for download\nfor(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,50));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Prepared ${items.length} items for download`,details:{itemCount:items.length,itemTypes:countItemTypes(items),totalSize:calculateTotalSize(items)},progress:100});return{success:true,message:`Prepared ${items.length} items for download`,details:{itemCount:items.length}};case'copy':// Simulated batch copy with progress and target\nconsole.log(`Batch copying ${items.length} items to ${target}`);// Slower progress simulation for copy\nfor(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,100));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully copied ${items.length} items to ${target||'destination'}`,details:{itemCount:items.length,target:target||'destination',itemTypes:countItemTypes(items),totalSize:calculateTotalSize(items)},progress:100});return{success:true,message:`Successfully copied ${items.length} items`,details:{itemCount:items.length,target}};case'move':// Simulated batch move with progress and target\nconsole.log(`Batch moving ${items.length} items to ${target}`);// Slower progress simulation for move\nfor(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,125));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully moved ${items.length} items to ${target||'destination'}`,details:{itemCount:items.length,target:target||'destination',itemTypes:countItemTypes(items),totalSize:calculateTotalSize(items)},progress:100});return{success:true,message:`Successfully moved ${items.length} items`,details:{itemCount:items.length,target}};case'makePublic':// Simulated making items public with progress\nconsole.log(`Making ${items.length} items public`);for(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,40));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully made ${items.length} items public`,details:{itemCount:items.length,itemTypes:countItemTypes(items)},progress:100});return{success:true,message:`Successfully made ${items.length} items public`,details:{itemCount:items.length}};case'makePrivate':// Simulated making items private with progress\nconsole.log(`Making ${items.length} items private`);for(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,40));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully made ${items.length} items private`,details:{itemCount:items.length,itemTypes:countItemTypes(items)},progress:100});return{success:true,message:`Successfully made ${items.length} items private`,details:{itemCount:items.length}};case'addTags':// Simulated tagging items with progress\nconsole.log(`Adding tags to ${items.length} items`);for(let i=0;i<totalItems;i++){await new Promise(resolve=>setTimeout(resolve,60));updateProgress(i+1);}setBatchOperationStatus({inProgress:false,completed:true,failed:false,message:`Successfully tagged ${items.length} items`,details:{itemCount:items.length,itemTypes:countItemTypes(items)},progress:100});return{success:true,message:`Successfully tagged ${items.length} items`,details:{itemCount:items.length}};default:setBatchOperationStatus({inProgress:false,completed:false,failed:true,message:`Unknown action: ${action}`,details:null,progress:0});return{success:false,message:`Unknown action: ${action}`};}}catch(error){// Handle errors\nsetBatchOperationStatus({inProgress:false,completed:false,failed:true,message:`Operation failed: ${error.message}`,details:{error:error.message},progress:0});return{success:false,message:`Operation failed: ${error.message}`,details:{error:error.message}};}};/**\n * Counts items by type (file, folder) in a selection\n * @param {Array} items - The items to count\n * @returns {Object} Counts by type\n */const countItemTypes=items=>{if(!items)return{files:0,folders:0};const counts={files:0,folders:0};items.forEach(item=>{if(item.type==='folder'||item.type==='directory'){counts.folders++;}else{counts.files++;}});return counts;};/**\n * Calculates the total size of selected items\n * @param {Array} items - The items to calculate size for\n * @returns {number} Total size in bytes\n */const calculateTotalSize=items=>{if(!items)return 0;return items.reduce((total,item)=>{// Only add size for files\nif(item.type!=='folder'&&item.type!=='directory'){return total+(item.size||0);}return total;},0);};/**\n * S3 Bucket Browser Component\n */const S3BucketBrowser=_ref=>{let{config,onSelectBucket,onSelectObject,readOnly=false,selectedBucket='',selectedPrefix=''}=_ref;// Ref to track if component is mounted (prevents memory leaks from state updates after unmount)\nconst isMounted=useRef(true);// Clean up on unmount\nuseEffect(()=>{return()=>{isMounted.current=false;};},[]);// Refs to track active timers and intervals for cleanup\nconst timeoutIdsRef=useRef([]);const intervalIdsRef=useRef([]);// Helper to safely set timeout with tracking for cleanup\nconst setSafeTimeout=useCallback((callback,delay)=>{const id=setTimeout(()=>{// Remove from tracking array when executed\ntimeoutIdsRef.current=timeoutIdsRef.current.filter(timeoutId=>timeoutId!==id);// Only execute callback if component is still mounted\nif(isMounted.current){callback();}},delay);// Add to tracking array\ntimeoutIdsRef.current.push(id);return id;},[]);// Helper to safely set interval with tracking for cleanup\nconst setSafeInterval=useCallback((callback,delay)=>{const id=setInterval(()=>{// Only execute callback if component is still mounted\nif(isMounted.current){callback();}},delay);// Add to tracking array\nintervalIdsRef.current.push(id);return id;},[]);// Clean up all active timers and intervals on unmount\nuseEffect(()=>{return()=>{// Clear all tracked timeouts\ntimeoutIdsRef.current.forEach(id=>clearTimeout(id));timeoutIdsRef.current=[];// Clear all tracked intervals\nintervalIdsRef.current.forEach(id=>clearInterval(id));intervalIdsRef.current=[];};},[]);// Load buckets on mount and when config changes with proper cleanup\nuseEffect(()=>{// Create abort controller for cleanup\nconst abortController=new AbortController();if(config){loadBuckets(abortController.signal);}// Cleanup: abort any in-progress fetches when component unmounts or config changes\nreturn()=>{abortController.abort();};},[config,loadBuckets]);// State for buckets and objects\nconst[buckets,setBuckets]=useState([]);const[objects,setObjects]=useState([]);const[currentPrefix,setCurrentPrefix]=useState(selectedPrefix||'');const[prefixHistory,setPrefixHistory]=useState([]);// State for loading indicators\nconst[loading,setLoading]=useState(false);const[bucketLoading,setBucketLoading]=useState(false);// Search state\nconst[searchTerm,setSearchTerm]=useState('');const[searchResults,setSearchResults]=useState([]);const[isSearching,setIsSearching]=useState(false);// Enhanced filtering state\nconst[filterDialogOpen,setFilterDialogOpen]=useState(false);const[filterTabValue,setFilterTabValue]=useState(0);const[activeFilters,setActiveFilters]=useState({fileTypes:[],sizeRange:[0,Number.MAX_SAFE_INTEGER],dateRange:{start:null,end:null},modifiedBy:'',customPrefix:''});// Active filter tracking for visual feedback\nconst[activeFilterCount,setActiveFilterCount]=useState(0);const[filterSummary,setFilterSummary]=useState({hasFileTypeFilters:false,hasSizeFilter:false,hasDateFilter:false,hasCustomPrefix:false});// Batch operations state\nconst[selectedItems,setSelectedItems]=useState([]);const[selectionMode,setSelectionMode]=useState(false);const[batchActionDialogOpen,setBatchActionDialogOpen]=useState(false);const[batchAction,setBatchAction]=useState('');const[batchActionTarget,setBatchActionTarget]=useState('');const[batchOperationStatus,setBatchOperationStatus]=useState({inProgress:false,completed:false,failed:false,message:'',details:null,progress:0});// Dialog states\nconst[newBucketDialogOpen,setNewBucketDialogOpen]=useState(false);const[newBucketName,setNewBucketName]=useState('');const[newFolderDialogOpen,setNewFolderDialogOpen]=useState(false);const[newFolderName,setNewFolderName]=useState('');const[confirmDeleteDialogOpen,setConfirmDeleteDialogOpen]=useState(false);const[itemToDelete,setItemToDelete]=useState(null);const[fileUploadDialogOpen,setFileUploadDialogOpen]=useState(false);const[selectedFile,setSelectedFile]=useState(null);const[filesToUpload,setFilesToUpload]=useState([]);const[currentUploadIndex,setCurrentUploadIndex]=useState(0);const[uploadProgress,setUploadProgress]=useState(0);const[uploadOptions,setUploadOptions]=useState({overwriteExisting:true,makePublic:false});// Context menu state\nconst[contextMenuPos,setContextMenuPos]=useState(null);const[selectedItem,setSelectedItem]=useState(null);// File viewer state\nconst[fileViewerOpen,setFileViewerOpen]=useState(false);const[fileViewUrl,setFileViewUrl]=useState('');const[fileViewType,setFileViewType]=useState('');// Error state\nconst[error,setError]=useState(null);/**\n   * Load buckets from S3 with support for cancellation\n   * @param {AbortSignal} [signal] - Optional AbortSignal for cancellation\n   */const loadBuckets=useCallback(async signal=>{if(!config)return;setBucketLoading(true);setError(null);try{// Simulated API call for development environment\nconsole.log('Loading S3 buckets with config:',config);// Create a promise that can be aborted\nconst abortablePromise=new Promise((resolve,reject)=>{// Track the timeout ID so we can clear it if aborted\nconst timeoutId=setTimeout(()=>{resolve({status:'success',buckets:[{name:'data-bucket-1',creationDate:new Date(Date.now()-15552000000).toISOString()},{name:'data-bucket-2',creationDate:new Date(Date.now()-7776000000).toISOString()},{name:'logs-bucket',creationDate:new Date(Date.now()-31104000000).toISOString()},{name:'backup-bucket',creationDate:new Date(Date.now()-62208000000).toISOString()},{name:'test-integration-bucket',creationDate:new Date().toISOString()}]});},1000);// Handle abort signal if provided\nif(signal){signal.addEventListener('abort',()=>{clearTimeout(timeoutId);reject(new Error('Operation cancelled'));});}// Track the timeout for cleanup\ntimeoutIdsRef.current.push(timeoutId);});const response=await abortablePromise;// Check if component is still mounted before updating state\nif(!isMounted.current)return;if(response.status==='success'){setBuckets(response.buckets);// If a bucket is already selected, keep it selected\nif(selectedBucket&&response.buckets.some(b=>b.name===selectedBucket)){loadObjects(selectedBucket,selectedPrefix||'',signal);}}else{setError(response.message||'Failed to load S3 buckets');}}catch(err){// Only log and update error state if not cancelled and component is mounted\nif(err.message!=='Operation cancelled'&&isMounted.current){console.error('Error loading buckets:',err);setError(err.message||'An error occurred while loading S3 buckets');}}finally{// Only update loading state if component is still mounted\nif(isMounted.current){setBucketLoading(false);}}},[config,selectedBucket,selectedPrefix,isMounted]);/**\n   * Load objects from a bucket with specified prefix\n   */const loadObjects=useCallback(async function(bucketName){let prefix=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';if(!config||!bucketName)return;setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Loading objects from bucket: ${bucketName}, prefix: ${prefix}`);// Simulate API response with mock data based on prefix\nconst response=await new Promise(resolve=>setTimeout(()=>{// Generate different mock responses based on the prefix\nlet mockObjects=[];if(prefix===''){// Root directory\nmockObjects=[{key:'folder1/',size:0,lastModified:new Date(Date.now()-86400000).toISOString(),type:'folder'},{key:'folder2/',size:0,lastModified:new Date(Date.now()-172800000).toISOString(),type:'folder'},{key:'data/',size:0,lastModified:new Date(Date.now()-259200000).toISOString(),type:'folder'},{key:'sample.csv',size:1024,lastModified:new Date(Date.now()-345600000).toISOString(),contentType:'text/csv',type:'file'},{key:'readme.txt',size:512,lastModified:new Date(Date.now()-432000000).toISOString(),contentType:'text/plain',type:'file'}];}else if(prefix==='folder1/'){// Folder 1 contents\nmockObjects=[{key:'folder1/subfolder/',size:0,lastModified:new Date(Date.now()-518400000).toISOString(),type:'folder'},{key:'folder1/data1.json',size:2048,lastModified:new Date(Date.now()-604800000).toISOString(),contentType:'application/json',type:'file'}];}else if(prefix==='folder1/subfolder/'){// Subfolder contents\nmockObjects=[{key:'folder1/subfolder/deep.xml',size:4096,lastModified:new Date(Date.now()-691200000).toISOString(),contentType:'application/xml',type:'file'}];}else if(prefix==='folder2/'){// Folder 2 contents\nmockObjects=[{key:'folder2/image.png',size:102400,lastModified:new Date(Date.now()-777600000).toISOString(),contentType:'image/png',type:'file'},{key:'folder2/document.pdf',size:204800,lastModified:new Date(Date.now()-864000000).toISOString(),contentType:'application/pdf',type:'file'}];}else if(prefix==='data/'){// Data folder contents\nmockObjects=[{key:'data/dataset1.csv',size:5120,lastModified:new Date(Date.now()-950400000).toISOString(),contentType:'text/csv',type:'file'},{key:'data/dataset2.csv',size:6144,lastModified:new Date(Date.now()-1036800000).toISOString(),contentType:'text/csv',type:'file'},{key:'data/dataset3.xlsx',size:8192,lastModified:new Date(Date.now()-1123200000).toISOString(),contentType:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',type:'file'}];}resolve({status:'success',objects:mockObjects,bucketName:bucketName,prefix:prefix});},1000));if(response.status==='success'){// Update current bucket and prefix\nif(bucketName!==selectedBucket){onSelectBucket(bucketName);setPrefixHistory([]);}setObjects(response.objects);setCurrentPrefix(prefix);// If this is a new prefix, add it to history\nif(prefix!==currentPrefix){setPrefixHistory(prevHistory=>{// Add the previous prefix to history only if it's not empty\nif(currentPrefix){return[...prevHistory,currentPrefix];}return prevHistory;});}}else{setError(response.message||'Failed to load objects');}}catch(err){console.error('Error loading objects:',err);setError(err.message||'An error occurred while loading objects');}finally{setLoading(false);setIsSearching(false);}},[config,currentPrefix,onSelectBucket,selectedBucket]);/**\n   * Navigate to a folder or object\n   */const navigateTo=useCallback(item=>{if(item.type==='folder'){// Extract the folder prefix from the key\nconst fullPrefix=item.key;// Load objects from the folder\nloadObjects(selectedBucket,fullPrefix);}else if(item.type==='file'){// Select the object\nonSelectObject({bucketName:selectedBucket,prefix:currentPrefix,key:item.key,size:item.size,lastModified:item.lastModified,contentType:item.contentType});}},[currentPrefix,loadObjects,onSelectObject,selectedBucket]);/**\n   * Go up one level in the prefix\n   */const navigateUp=useCallback(()=>{if(prefixHistory.length>0){// Get the previous prefix\nconst previousPrefix=prefixHistory[prefixHistory.length-1];// Update the prefix history\nsetPrefixHistory(prevHistory=>prevHistory.slice(0,-1));// Load objects from the previous prefix\nloadObjects(selectedBucket,previousPrefix);}else{// If we're at the root of a bucket, go back to bucket list\nsetObjects([]);setCurrentPrefix('');onSelectBucket('');}},[loadObjects,onSelectBucket,prefixHistory,selectedBucket]);/**\n   * Search for objects\n   */const searchObjects=useCallback(async()=>{if(!searchTerm||!selectedBucket)return;setIsSearching(true);setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Searching for \"${searchTerm}\" in bucket: ${selectedBucket}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{// Generate mock search results\nconst allPossibleObjects=[{key:'folder1/data1.json',size:2048,lastModified:new Date(Date.now()-604800000).toISOString(),contentType:'application/json',type:'file'},{key:'folder1/subfolder/deep.xml',size:4096,lastModified:new Date(Date.now()-691200000).toISOString(),contentType:'application/xml',type:'file'},{key:'folder2/image.png',size:102400,lastModified:new Date(Date.now()-777600000).toISOString(),contentType:'image/png',type:'file'},{key:'folder2/document.pdf',size:204800,lastModified:new Date(Date.now()-864000000).toISOString(),contentType:'application/pdf',type:'file'},{key:'data/dataset1.csv',size:5120,lastModified:new Date(Date.now()-950400000).toISOString(),contentType:'text/csv',type:'file'},{key:'data/dataset2.csv',size:6144,lastModified:new Date(Date.now()-1036800000).toISOString(),contentType:'text/csv',type:'file'},{key:'data/dataset3.xlsx',size:8192,lastModified:new Date(Date.now()-1123200000).toISOString(),contentType:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',type:'file'},{key:'sample.csv',size:1024,lastModified:new Date(Date.now()-345600000).toISOString(),contentType:'text/csv',type:'file'},{key:'readme.txt',size:512,lastModified:new Date(Date.now()-432000000).toISOString(),contentType:'text/plain',type:'file'}];// Filter by search term\nconst searchLower=searchTerm.toLowerCase();const results=allPossibleObjects.filter(obj=>obj.key.toLowerCase().includes(searchLower));resolve({status:'success',objects:results});},1000));if(response.status==='success'){setSearchResults(response.objects);}else{setError(response.message||'Failed to search objects');}}catch(err){console.error('Error searching objects:',err);setError(err.message||'An error occurred while searching objects');}finally{setLoading(false);}},[searchTerm,selectedBucket]);/**\n   * Clear search and return to regular browsing\n   */const clearSearch=useCallback(()=>{setSearchTerm('');setSearchResults([]);setIsSearching(false);// Reload current prefix\nif(selectedBucket){loadObjects(selectedBucket,currentPrefix);}},[currentPrefix,loadObjects,selectedBucket]);/**\n   * Apply advanced filters and update UI\n   */const applyAdvancedFilters=useCallback(()=>{if(!selectedBucket)return;setLoading(true);try{// If we're searching, apply filters to search results\n// Otherwise apply to the current objects list\nconst itemsToFilter=isSearching?searchResults:objects;const filteredResults=applyFilters(itemsToFilter,activeFilters);// If searching, update search results\n// Otherwise, update the objects list directly\nif(isSearching){setSearchResults(filteredResults);}else{// Set a flag to indicate we're filtering\nsetIsSearching(true);setSearchResults(filteredResults);}}catch(err){console.error('Error applying filters:',err);setError('An error occurred while applying filters');}finally{setLoading(false);setFilterDialogOpen(false);}},[activeFilters,isSearching,objects,searchResults,selectedBucket]);/**\n   * Clear all active filters\n   */const clearFilters=useCallback(()=>{setActiveFilters({fileTypes:[],sizeRange:[0,Number.MAX_SAFE_INTEGER],dateRange:{start:null,end:null},modifiedBy:'',customPrefix:''});// If we were filtering but not searching, reload objects\nif(isSearching&&!searchTerm){setIsSearching(false);if(selectedBucket){loadObjects(selectedBucket,currentPrefix);}}// If we were both searching and filtering, apply just the search\nelse if(isSearching&&searchTerm){searchObjects();}},[currentPrefix,isSearching,loadObjects,searchObjects,searchTerm,selectedBucket]);/**\n   * Toggle selection mode for batch operations\n   */const toggleSelectionMode=useCallback(()=>{setSelectionMode(prev=>!prev);// Clear selections when toggling off\nif(selectionMode){setSelectedItems([]);}},[selectionMode]);/**\n   * Toggle selection of an item\n   */const toggleItemSelection=useCallback((e,item)=>{e.stopPropagation();// Prevent navigating when clicking the checkbox\nsetSelectedItems(prev=>{// Check if item is already selected\nconst isSelected=prev.some(selected=>selected.key===item.key&&selected.type===item.type);if(isSelected){// Remove item from selection\nreturn prev.filter(selected=>!(selected.key===item.key&&selected.type===item.type));}else{// Add item to selection\nreturn[...prev,item];}});},[]);/**\n   * Check if an item is selected\n   */const isItemSelected=useCallback(item=>{return selectedItems.some(selected=>selected.key===item.key&&selected.type===item.type);},[selectedItems]);/**\n   * Select or deselect all items\n   */const selectAllItems=useCallback(()=>{if(selectedItems.length===(isSearching?searchResults.length:objects.length)){// If all are selected, deselect all\nsetSelectedItems([]);}else{// Otherwise, select all\nsetSelectedItems(isSearching?searchResults:objects);}},[isSearching,objects,searchResults,selectedItems]);/**\n   * Execute batch action on selected items\n   */const executeBatchAction=useCallback(async()=>{if(!selectedItems.length||!batchAction)return;setLoading(true);setError(null);try{const result=await performBatchOperation(batchAction,selectedItems);if(result.success){// Set success message\n// For delete, remove items from the list\nif(batchAction==='delete'){const itemKeys=selectedItems.map(item=>item.key);// Update objects or search results accordingly\nif(isSearching){setSearchResults(prev=>prev.filter(item=>!itemKeys.includes(item.key)));}else{setObjects(prev=>prev.filter(item=>!itemKeys.includes(item.key)));}}// Reset selection\nsetSelectedItems([]);setSelectionMode(false);}else{setError(result.message||'Batch operation failed');}}catch(err){console.error('Error executing batch action:',err);setError('An error occurred during batch operation');}finally{setLoading(false);setBatchActionDialogOpen(false);}},[batchAction,isSearching,selectedItems]);/**\n   * Create a new bucket\n   */const createBucket=useCallback(async()=>{if(!newBucketName)return;setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Creating bucket: ${newBucketName}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{if(newBucketName.includes(' ')){resolve({status:'error',message:'Bucket name cannot contain spaces'});}else if(buckets.some(b=>b.name===newBucketName)){resolve({status:'error',message:'Bucket already exists'});}else{resolve({status:'success',bucket:{name:newBucketName,creationDate:new Date().toISOString()}});}},1000));if(response.status==='success'){// Add new bucket to list\nsetBuckets(prevBuckets=>[...prevBuckets,response.bucket]);// Close dialog\nsetNewBucketDialogOpen(false);setNewBucketName('');// Select the new bucket\nonSelectBucket(response.bucket.name);loadObjects(response.bucket.name,'');}else{setError(response.message||'Failed to create bucket');}}catch(err){console.error('Error creating bucket:',err);setError(err.message||'An error occurred while creating bucket');}finally{setLoading(false);}},[buckets,loadObjects,newBucketName,onSelectBucket]);/**\n   * Create a new folder\n   */const createFolder=useCallback(async()=>{if(!newFolderName||!selectedBucket)return;setLoading(true);setError(null);try{// Construct the full key\nconst fullKey=currentPrefix?`${currentPrefix}${newFolderName}/`:`${newFolderName}/`;// Simulate API call\nconsole.log(`Creating folder: ${fullKey} in bucket: ${selectedBucket}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{resolve({status:'success',folder:{key:fullKey,size:0,lastModified:new Date().toISOString(),type:'folder'}});},1000));if(response.status==='success'){// Add new folder to list\nsetObjects(prevObjects=>[...prevObjects,response.folder]);// Close dialog\nsetNewFolderDialogOpen(false);setNewFolderName('');}else{setError(response.message||'Failed to create folder');}}catch(err){console.error('Error creating folder:',err);setError(err.message||'An error occurred while creating folder');}finally{setLoading(false);}},[currentPrefix,newFolderName,selectedBucket]);/**\n   * Delete a bucket, folder, or object\n   */const deleteItem=useCallback(async()=>{if(!itemToDelete)return;setLoading(true);setError(null);try{console.log(`Deleting ${itemToDelete.type}: ${itemToDelete.name||itemToDelete.key}`);// Simulate API call\nconst response=await new Promise(resolve=>setTimeout(()=>{resolve({status:'success'});},1000));if(response.status==='success'){if(itemToDelete.type==='bucket'){// Remove bucket from list\nsetBuckets(prevBuckets=>prevBuckets.filter(b=>b.name!==itemToDelete.name));// If this was the selected bucket, clear selection\nif(selectedBucket===itemToDelete.name){onSelectBucket('');setObjects([]);setCurrentPrefix('');}}else{// Remove object or folder from list\nsetObjects(prevObjects=>prevObjects.filter(o=>o.key!==itemToDelete.key));}// Close dialog\nsetConfirmDeleteDialogOpen(false);setItemToDelete(null);}else{setError(response.message||'Failed to delete item');}}catch(err){console.error('Error deleting item:',err);setError(err.message||'An error occurred while deleting item');}finally{setLoading(false);}},[itemToDelete,onSelectBucket,selectedBucket]);/**\n   * Process file selection for upload\n   */const processFileSelection=useCallback(files=>{if(!files||files.length===0)return;// If it's a FileList (from input), convert to array\nconst fileArray=Array.from(files);if(fileArray.length===1){// Single file selection - use the existing workflow\nsetSelectedFile(fileArray[0]);setFilesToUpload([]);}else{// Multiple file selection\nsetFilesToUpload(fileArray);setSelectedFile(fileArray[0]);// Show the first file in preview\nsetCurrentUploadIndex(0);}},[]);/**\n   * Upload a single file\n   */const uploadSingleFile=useCallback(async file=>{if(!file||!selectedBucket)return false;try{// Construct the full key\nconst fullKey=currentPrefix?`${currentPrefix}${file.name}`:file.name;console.log(`Uploading file: ${fullKey} to bucket: ${selectedBucket}`);// Simulate upload progress with more realistic behavior using safe interval helper\nlet progress=0;const uploadProgressInterval=setSafeInterval(()=>{// Realistic upload progress simulation\n// First 80% is linear, last 20% is slower to simulate server processing\nif(progress<80){progress+=Math.random()*5;// Random increment for realism\n}else if(progress<95){progress+=Math.random()*0.5;// Slower near the end\n}else if(progress<99){progress+=0.1;// Very slow for the last bit\n}if(progress>=100){// Find and remove from tracked intervals\nconst index=intervalIdsRef.current.indexOf(uploadProgressInterval);if(index!==-1){intervalIdsRef.current.splice(index,1);}clearInterval(uploadProgressInterval);progress=100;}setUploadProgress(Math.min(Math.floor(progress),100));},200);// Simulate API response with file validation and upload behavior\nconst response=await new Promise(resolve=>{// Calculate simulated upload time based on file size for realism\n// Larger files take longer to upload\nconst baseUploadTime=1000;// Minimum 1 second\nconst sizeBasedTime=Math.min(file.size/10000,5000);// Up to 5 seconds more for large files\n// Use safe timeout helper to prevent memory leaks\nsetSafeTimeout(()=>{// Find and remove from tracked intervals\nconst index=intervalIdsRef.current.indexOf(uploadProgressInterval);if(index!==-1){intervalIdsRef.current.splice(index,1);}clearInterval(uploadProgressInterval);setUploadProgress(100);// In a real implementation, we would check for errors\n// like size limits, permission issues, etc.\nresolve({status:'success',object:{key:fullKey,size:file.size,lastModified:new Date().toISOString(),contentType:file.type||'application/octet-stream',type:'file'}});},baseUploadTime+sizeBasedTime);});if(response.status==='success'){// Add new file to list if we're in the current prefix\nsetObjects(prevObjects=>[...prevObjects,response.object]);return true;}else{setError(response.message||`Failed to upload file: ${file.name}`);return false;}}catch(err){console.error(`Error uploading file ${file.name}:`,err);setError(err.message||`An error occurred while uploading file: ${file.name}`);return false;}},[currentPrefix,selectedBucket]);/**\n   * Upload files (single file or batch upload)\n   */const uploadFile=useCallback(async()=>{if(!selectedBucket)return;setLoading(true);setError(null);try{if(filesToUpload.length>0){// Batch upload workflow\nlet successCount=0;// Process each file in sequence\nfor(let i=0;i<filesToUpload.length;i++){setCurrentUploadIndex(i);setSelectedFile(filesToUpload[i]);// Update preview to current file\nsetUploadProgress(0);const success=await uploadSingleFile(filesToUpload[i]);if(success){successCount++;}// Short pause between files\nif(i<filesToUpload.length-1){await new Promise(resolve=>setTimeout(resolve,500));}}// Show completion message\nconsole.log(`Uploaded ${successCount} of ${filesToUpload.length} files successfully`);// Close dialog after batch upload\nif(successCount>0){setTimeout(()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setFilesToUpload([]);setUploadProgress(0);},1500);}}else if(selectedFile){// Single file upload workflow\nconst success=await uploadSingleFile(selectedFile);// Close dialog after successful upload\nif(success){setTimeout(()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);},1500);}}}catch(err){console.error('Error in upload process:',err);setError(err.message||'An unexpected error occurred during upload');}finally{setLoading(false);}},[selectedBucket,selectedFile,filesToUpload,uploadSingleFile]);/**\n   * Download an object\n   */const downloadObject=useCallback(item=>{if(!item||!selectedBucket)return;console.log(`Downloading object: ${item.key} from bucket: ${selectedBucket}`);// In a real implementation, this would create a download link\n// For now, we'll just simulate it\nalert(`Simulated download of file: ${item.key}`);},[selectedBucket]);/**\n   * View/preview an object\n   */const viewObject=useCallback(item=>{if(!item||!selectedBucket)return;console.log(`Viewing object: ${item.key} from bucket: ${selectedBucket}`);// In a real implementation, this would create a URL for the object content\n// For now, we'll use a placeholder\nsetFileViewUrl(`https://example.com/preview/${selectedBucket}/${item.key}`);// Set the file type based on contentType\nconst contentType=item.contentType||'';setFileViewType(contentType);// Set selected item for additional metadata in preview\nsetSelectedItem(item);// Open the viewer\nsetFileViewerOpen(true);},[selectedBucket]);/**\n   * Handle context menu opening\n   */const handleContextMenu=useCallback((event,item)=>{event.preventDefault();// Skip if in read-only mode\nif(readOnly)return;setContextMenuPos({x:event.clientX,y:event.clientY});setSelectedItem(item);},[readOnly]);/**\n   * Handle context menu closing\n   */const handleContextMenuClose=useCallback(()=>{setContextMenuPos(null);setSelectedItem(null);},[]);// Load buckets on mount\nuseEffect(()=>{if(config){loadBuckets();}},[config,loadBuckets]);// File content render functions with enhanced preview\nconst renderFilePreview=(url,contentType)=>{// Import FilePreview component for advanced file previewing\nconst FilePreview=require(\"../../common/FilePreview\").default;// Generate a mock file object with the selected item's data\nconst fileObj=selectedItem?{name:getDisplayName(selectedItem.key,selectedItem.type),type:contentType,size:selectedItem.size||0,lastModified:selectedItem.lastModified}:null;// Generate simulated content for text files\nconst generateSimulatedContent=()=>{if(contentType==='text/plain'){return`This is a simulated preview of a plain text file.\\n\\nFilename: ${selectedItem.key}\\nSize: ${formatFileSize(selectedItem.size||0)}\\nLast Modified: ${formatDate(selectedItem.lastModified)}\\n\\nIn a production environment, this would fetch the actual file content from the S3 bucket.`;}if(contentType==='text/csv'){return`id,name,email,department\\n1,\"John Smith\",john.smith@example.com,Marketing\\n2,\"Jane Doe\",jane.doe@example.com,Engineering\\n3,\"Robert Johnson\",robert.johnson@example.com,Finance\\n4,\"Sarah Williams\",sarah.williams@example.com,Human Resources\\n5,\"Michael Brown\",michael.brown@example.com,Sales`;}if(contentType==='application/json'){return JSON.stringify({\"id\":12345,\"name\":\"Sample JSON Data\",\"items\":[{\"id\":1,\"value\":\"First item\"},{\"id\":2,\"value\":\"Second item\"},{\"id\":3,\"value\":\"Third item\"}],\"metadata\":{\"created\":new Date().toISOString(),\"version\":\"1.0.0\",\"source\":\"S3 Object\"}},null,2);}if(contentType==='application/xml'||contentType==='text/xml'){return`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n  <item id=\"1\">\\n    <n>First Item</n>\\n    <value>100</value>\\n  </item>\\n  <item id=\"2\">\\n    <n>Second Item</n>\\n    <value>200</value>\\n  </item>\\n  <metadata>\\n    <created>${new Date().toISOString()}</created>\\n    <source>S3 Object</source>\\n  </metadata>\\n</root>`;}// Default text content\nreturn`This is a simulated preview of content type: ${contentType}\\n\\nIn a production environment, this would display the actual file content.`;};// Generate content for text-based files\nconst content=contentType==='text/plain'||contentType==='text/csv'||contentType==='application/json'||contentType==='application/xml'||contentType==='text/xml'?generateSimulatedContent():null;return/*#__PURE__*/_jsx(FilePreview,{file:fileObj,url:url,content:content,mimeType:contentType,filename:fileObj===null||fileObj===void 0?void 0:fileObj.name,onDownload:()=>downloadObject(selectedItem),maxHeight:\"600px\",fullWidth:true});};// Get color for file icon based on content type\nconst getIconColorForFileType=contentType=>{if(contentType.startsWith('image/')){return'success.main';// Green for images\n}else if(contentType.startsWith('text/')){return'info.main';// Blue for text files\n}else if(contentType.includes('spreadsheet')||contentType.includes('excel')){return'success.dark';// Dark green for spreadsheets\n}else if(contentType.includes('pdf')){return'error.main';// Red for PDFs\n}else if(contentType.includes('zip')||contentType.includes('compressed')){return'warning.dark';// Dark yellow for archives\n}else if(contentType.includes('json')||contentType.includes('xml')){return'secondary.main';// Purple for data files\n}else{return'info.main';// Default blue\n}};// Item name display function (truncates long paths)\nconst getDisplayName=(key,type)=>{if(type==='bucket'){return key;}else if(type==='folder'){// For folders, extract the last folder name\nconst parts=key.split('/');return parts[parts.length-2]||key;// Account for trailing slash\n}else{// For files, extract filename from potentially nested path\nconst parts=key.split('/');return parts[parts.length-1]||key;}};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',flexGrow:1,overflow:'hidden'},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',flexWrap:'nowrap',overflow:'hidden'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexShrink:0,whiteSpace:'nowrap'},children:selectedBucket?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Back to buckets\",children:/*#__PURE__*/_jsx(Box,{component:\"span\",onClick:()=>onSelectBucket(''),sx:{cursor:'pointer',color:'primary.main','&:hover':{textDecoration:'underline'}},children:\"Buckets\"})}),' / ',/*#__PURE__*/_jsx(Tooltip,{title:`Bucket: ${selectedBucket}`,children:/*#__PURE__*/_jsx(\"strong\",{children:selectedBucket})})]}):'AWS S3 Buckets'}),selectedBucket&&currentPrefix&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',ml:1,overflow:'hidden',flexWrap:'nowrap'},children:/*#__PURE__*/_jsxs(Typography,{component:\"span\",variant:\"body2\",sx:{display:'flex',alignItems:'center',color:'text.secondary',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap'},children:[' / ',currentPrefix.split('/').filter(Boolean).map((segment,index,array)=>{// Create a path up to this segment\nconst pathUpToSegment=array.slice(0,index+1).join('/')+'/';return/*#__PURE__*/_jsxs(React.Fragment,{children:[index>0&&' / ',/*#__PURE__*/_jsx(Tooltip,{title:`Navigate to ${segment}`,children:/*#__PURE__*/_jsx(Box,{component:\"span\",onClick:()=>loadObjects(selectedBucket,pathUpToSegment),sx:{cursor:'pointer',color:'primary.main',flexShrink:0,'&:hover':{textDecoration:'underline'}},children:segment})})]},index);})]})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',ml:2},children:[selectedBucket&&/*#__PURE__*/_jsx(Tooltip,{title:\"Go up\",children:/*#__PURE__*/_jsx(IconButton,{onClick:navigateUp,disabled:loading,size:\"small\",children:/*#__PURE__*/_jsx(UpIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>selectedBucket?loadObjects(selectedBucket,currentPrefix):loadBuckets(),disabled:loading,size:\"small\",children:/*#__PURE__*/_jsx(RefreshIcon,{})})}),!readOnly&&/*#__PURE__*/_jsxs(_Fragment,{children:[selectedBucket?/*#__PURE__*/_jsx(Tooltip,{title:\"Upload File\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setFileUploadDialogOpen(true),disabled:loading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(UploadIcon,{})})}):/*#__PURE__*/_jsx(Tooltip,{title:\"New Bucket\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setNewBucketDialogOpen(true),disabled:loading||bucketLoading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(AddIcon,{})})}),selectedBucket&&/*#__PURE__*/_jsx(Tooltip,{title:\"New Folder\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setNewFolderDialogOpen(true),disabled:loading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(CreateFolderIcon,{})})})]})]})]}),selectedBucket&&/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Search objects...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),disabled:loading,size:\"small\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})}),endAdornment:isSearching&&!activeFilters.fileTypes.length&&/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:clearSearch,disabled:loading,children:\"Clear\"})})},onKeyPress:e=>{if(e.key==='Enter'&&searchTerm){searchObjects();}}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:searchObjects,disabled:loading||!searchTerm,sx:{ml:1},children:\"Search\"}),/*#__PURE__*/_jsx(Tooltip,{title:\"Advanced Filters\",children:/*#__PURE__*/_jsx(IconButton,{color:activeFilters.fileTypes.length>0?\"primary\":\"default\",onClick:()=>{setFilterTabValue(0);setFilterDialogOpen(true);},sx:{ml:1},children:/*#__PURE__*/_jsx(FilterAltIcon,{})})}),!readOnly&&/*#__PURE__*/_jsx(Tooltip,{title:selectionMode?\"Exit Selection Mode\":\"Selection Mode\",children:/*#__PURE__*/_jsx(IconButton,{color:selectionMode?\"primary\":\"default\",onClick:toggleSelectionMode,sx:{ml:1},children:/*#__PURE__*/_jsx(SelectAllIcon,{})})})]}),(activeFilters.fileTypes.length>0||activeFilters.dateRange.start||activeFilters.sizeRange[0]>0||activeFilters.sizeRange[1]<Number.MAX_SAFE_INTEGER||activeFilters.customPrefix)&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',flexWrap:'wrap',gap:1,mb:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Filters:\"}),activeFilters.fileTypes.map(fileType=>{var _FILE_TYPE_OPTIONS$fi;return/*#__PURE__*/_jsx(Chip,{label:`Type: ${((_FILE_TYPE_OPTIONS$fi=FILE_TYPE_OPTIONS.find(opt=>opt.value===fileType))===null||_FILE_TYPE_OPTIONS$fi===void 0?void 0:_FILE_TYPE_OPTIONS$fi.label)||fileType}`,size:\"small\",onDelete:()=>{setActiveFilters(prev=>({...prev,fileTypes:prev.fileTypes.filter(t=>t!==fileType)}));// Re-apply filters\nsetTimeout(applyAdvancedFilters,0);}},fileType);}),activeFilters.sizeRange[0]>0&&/*#__PURE__*/_jsx(Chip,{label:`Min size: ${formatFileSize(activeFilters.sizeRange[0])}`,size:\"small\",onDelete:()=>{setActiveFilters(prev=>({...prev,sizeRange:[0,prev.sizeRange[1]]}));// Re-apply filters\nsetTimeout(applyAdvancedFilters,0);}}),activeFilters.sizeRange[1]<Number.MAX_SAFE_INTEGER&&/*#__PURE__*/_jsx(Chip,{label:`Max size: ${formatFileSize(activeFilters.sizeRange[1])}`,size:\"small\",onDelete:()=>{setActiveFilters(prev=>({...prev,sizeRange:[prev.sizeRange[0],Number.MAX_SAFE_INTEGER]}));// Re-apply filters\nsetTimeout(applyAdvancedFilters,0);}}),activeFilters.dateRange.start&&activeFilters.dateRange.end&&/*#__PURE__*/_jsx(Chip,{label:`Date: ${formatDate(activeFilters.dateRange.start)} - ${formatDate(activeFilters.dateRange.end)}`,size:\"small\",onDelete:()=>{setActiveFilters(prev=>({...prev,dateRange:{start:null,end:null}}));// Re-apply filters\nsetTimeout(applyAdvancedFilters,0);}}),activeFilters.customPrefix&&/*#__PURE__*/_jsx(Chip,{label:`Prefix: ${activeFilters.customPrefix}`,size:\"small\",onDelete:()=>{setActiveFilters(prev=>({...prev,customPrefix:''}));// Re-apply filters\nsetTimeout(applyAdvancedFilters,0);}}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(ClearIcon,{fontSize:\"small\"}),onClick:clearFilters,children:\"Clear All\"})]}),selectionMode&&selectedItems.length>0&&/*#__PURE__*/_jsxs(Paper,{variant:\"outlined\",sx:{display:'flex',justifyContent:'space-between',alignItems:'center',p:1,mt:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",fontWeight:\"bold\",color:\"primary.main\",children:[selectedItems.length,\" item\",selectedItems.length!==1?'s':'',\" selected\"]}),/*#__PURE__*/_jsx(Tooltip,{title:\"Clear selection\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>setSelectedItems([]),sx:{ml:1},children:/*#__PURE__*/_jsx(ClearIcon,{fontSize:\"small\"})})})]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Download Selected\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setBatchAction('download');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(DownloadIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete Selected\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"error\",onClick:()=>{setBatchAction('delete');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Copy Selected\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setBatchAction('copy');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(CopyIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Move Selected\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setBatchAction('move');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(MoveIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Make Public\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setBatchAction('makePublic');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(PublicIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Make Private\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>{setBatchAction('makePrivate');setBatchActionDialogOpen(true);},children:/*#__PURE__*/_jsx(LockIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"outlined\",color:\"primary\",onClick:selectAllItems,sx:{ml:1},children:selectedItems.length===(isSearching?searchResults.length:objects.length)?'Deselect All':'Select All'})]})]})]}),error&&/*#__PURE__*/_jsxs(Typography,{color:\"error\",sx:{mb:2},children:[\"Error: \",error]}),bucketLoading||loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',py:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):selectedBucket?/*#__PURE__*/// Object list\n_jsx(TableContainer,{component:Paper,sx:{flexGrow:1,overflow:'auto'},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[selectionMode&&/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",width:\"50px\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Size\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Last Modified\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:(isSearching?searchResults:objects).length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:selectionMode?5:4,align:\"center\",children:isSearching?'No search results':'No objects in this location'})}):(isSearching?searchResults:objects).map(item=>/*#__PURE__*/_jsxs(TableRow,{hover:true,onClick:e=>selectionMode?toggleItemSelection(e,item):navigateTo(item),sx:{cursor:'pointer','&:hover':{backgroundColor:'action.hover'},...(selectionMode&&isItemSelected(item)?{backgroundColor:'action.selected','&:hover':{backgroundColor:'action.selectedHover'}}:{})},onContextMenu:e=>handleContextMenu(e,item),children:[selectionMode&&/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{checked:isItemSelected(item),onChange:e=>toggleItemSelection(e,item),onClick:e=>e.stopPropagation(),color:\"primary\",size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:36},children:item.type==='folder'?/*#__PURE__*/_jsx(FolderIcon,{color:\"primary\"}):/*#__PURE__*/_jsx(FileIcon,{sx:{color:getIconColorForFileType(item.contentType||'')}})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:getDisplayName(item.key,item.type)}),item.type==='file'&&item.contentType&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:item.contentType})]})]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:item.type==='folder'?'-':/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontFamily:'monospace',fontWeight:500,color:'text.secondary'},children:formatFileSize(item.size||0)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:formatDate(item.lastModified)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end',alignItems:'center'},children:[item.type==='file'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();viewObject(item);},children:/*#__PURE__*/_jsx(ViewIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Download\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();downloadObject(item);},children:/*#__PURE__*/_jsx(DownloadIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Select this file\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();onSelectObject({bucketName:selectedBucket,prefix:currentPrefix,key:item.key,size:item.size,lastModified:item.lastModified,contentType:item.contentType});},children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\"})})})]}),!readOnly&&/*#__PURE__*/_jsx(Tooltip,{title:\"More actions\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();handleContextMenu(e,item);},children:/*#__PURE__*/_jsx(MoreVertIcon,{fontSize:\"small\"})})})]})})]},item.key))})]})}):/*#__PURE__*/// Bucket list\n_jsx(TableContainer,{component:Paper,sx:{flexGrow:1,overflow:'auto'},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[selectionMode&&/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",width:\"50px\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Bucket Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Creation Date\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:buckets.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:selectionMode?4:3,align:\"center\",children:\"No buckets found\"})}):buckets.map(bucket=>/*#__PURE__*/_jsxs(TableRow,{hover:true,onClick:e=>selectionMode?toggleItemSelection(e,{...bucket,type:'bucket'}):loadObjects(bucket.name,''),sx:{cursor:'pointer','&:hover':{backgroundColor:'action.hover'},...(selectionMode&&isItemSelected({...bucket,type:'bucket'})?{backgroundColor:'action.selected','&:hover':{backgroundColor:'action.selectedHover'}}:{})},onContextMenu:e=>handleContextMenu(e,{...bucket,type:'bucket'}),children:[selectionMode&&/*#__PURE__*/_jsx(TableCell,{padding:\"checkbox\",children:/*#__PURE__*/_jsx(Checkbox,{checked:isItemSelected({...bucket,type:'bucket'}),onChange:e=>toggleItemSelection(e,{...bucket,type:'bucket'}),onClick:e=>e.stopPropagation(),color:\"primary\",size:\"small\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:36},children:/*#__PURE__*/_jsx(BucketIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:bucket.name})]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:formatDate(bucket.creationDate)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end',alignItems:'center'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Browse bucket\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();loadObjects(bucket.name,'');},children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Select bucket\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();onSelectBucket(bucket.name);},children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\"})})}),!readOnly&&/*#__PURE__*/_jsx(Tooltip,{title:\"More actions\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();handleContextMenu(e,{...bucket,type:'bucket'});},children:/*#__PURE__*/_jsx(MoreVertIcon,{fontSize:\"small\"})})})]})})]},bucket.name))})]})}),/*#__PURE__*/_jsxs(Menu,{open:Boolean(contextMenuPos),onClose:handleContextMenuClose,anchorReference:\"anchorPosition\",anchorPosition:contextMenuPos?{top:contextMenuPos.y,left:contextMenuPos.x}:undefined,children:[selectedItem&&selectedItem.type==='bucket'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{loadObjects(selectedItem.name,'');handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\",color:\"primary\"})}),\"Browse bucket\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{onSelectBucket(selectedItem.name);handleContextMenuClose();},divider:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\",color:\"primary\"})}),\"Select bucket\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete bucket\"]})]}),selectedItem&&selectedItem.type==='folder'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{navigateTo(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\",color:\"primary\"})}),\"Open folder\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete folder\"]})]}),selectedItem&&selectedItem.type==='file'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{viewObject(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(ViewIcon,{fontSize:\"small\"})}),\"View\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{downloadObject(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DownloadIcon,{fontSize:\"small\"})}),\"Download\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{onSelectObject({bucketName:selectedBucket,prefix:currentPrefix,key:selectedItem.key,size:selectedItem.size,lastModified:selectedItem.lastModified,contentType:selectedItem.contentType});handleContextMenuClose();},divider:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\",color:\"primary\"})}),\"Select this file\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete\"]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:filterDialogOpen,onClose:()=>setFilterDialogOpen(false),maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(FilterAltIcon,{sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Advanced Filtering\"})]})}),/*#__PURE__*/_jsxs(DialogContent,{dividers:true,children:[/*#__PURE__*/_jsxs(Tabs,{value:filterTabValue,onChange:(e,newValue)=>setFilterTabValue(newValue),sx:{borderBottom:1,borderColor:'divider',mb:2},children:[/*#__PURE__*/_jsx(Tab,{label:\"File Types\"}),/*#__PURE__*/_jsx(Tab,{label:\"Size\"}),/*#__PURE__*/_jsx(Tab,{label:\"Date\"}),/*#__PURE__*/_jsx(Tab,{label:\"Prefix\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:1,display:filterTabValue===0?'block':'none'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Filter by File Type\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Select file types to include in the results\"}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:FILE_TYPE_OPTIONS.map(option=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:activeFilters.fileTypes.includes(option.value),onChange:e=>{const newFileTypes=e.target.checked?[...activeFilters.fileTypes,option.value]:activeFilters.fileTypes.filter(t=>t!==option.value);setActiveFilters({...activeFilters,fileTypes:newFileTypes});}}),label:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:option.label}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:option.description})]})})},option.value))})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4,display:filterTabValue===1?'block':'none'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Filter by Size\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Select a size range or use the slider\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Size Presets\"}),/*#__PURE__*/_jsxs(Select,{value:\"\",onChange:e=>{const preset=SIZE_PRESETS.find(p=>p.label===e.target.value);if(preset){setActiveFilters({...activeFilters,sizeRange:preset.value});}},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Custom\"}),SIZE_PRESETS.map(preset=>/*#__PURE__*/_jsx(MenuItem,{value:preset.label,children:preset.label},preset.label))]})]}),/*#__PURE__*/_jsxs(Box,{sx:{px:2},children:[/*#__PURE__*/_jsxs(Typography,{id:\"size-slider\",gutterBottom:true,children:[\"Size Range: \",formatFileSize(activeFilters.sizeRange[0]),\" - \",formatFileSize(activeFilters.sizeRange[1])]}),/*#__PURE__*/_jsx(Slider,{value:activeFilters.sizeRange,onChange:(e,newValue)=>{setActiveFilters({...activeFilters,sizeRange:newValue});},valueLabelDisplay:\"auto\",valueLabelFormat:value=>formatFileSize(value),min:0,max:1024*1024*1024// 1 GB\n,step:1024,marks:[{value:0,label:'0'},{value:1024*1024,label:'1 MB'},{value:1024*1024*100,label:'100 MB'},{value:1024*1024*1024,label:'1 GB'}]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4,display:filterTabValue===2?'block':'none'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Filter by Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Select a date range or choose a preset\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mb:2},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Date Presets\"}),/*#__PURE__*/_jsxs(Select,{value:\"\",onChange:e=>{const preset=DATE_PRESETS.find(p=>p.label===e.target.value);if(preset&&preset.value!=='custom'){const end=new Date();const start=getDateDaysAgo(preset.value.days);setActiveFilters({...activeFilters,dateRange:{start,end}});}},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Custom Range\"}),DATE_PRESETS.map(preset=>/*#__PURE__*/_jsx(MenuItem,{value:preset.label,children:preset.label},preset.label))]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,children:/*#__PURE__*/_jsx(DatePicker,{label:\"Start Date\",value:activeFilters.dateRange.start,onChange:newValue=>{setActiveFilters({...activeFilters,dateRange:{...activeFilters.dateRange,start:newValue}});},renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,fullWidth:true})})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,children:/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,children:/*#__PURE__*/_jsx(DatePicker,{label:\"End Date\",value:activeFilters.dateRange.end,onChange:newValue=>{setActiveFilters({...activeFilters,dateRange:{...activeFilters.dateRange,end:newValue}});},renderInput:params=>/*#__PURE__*/_jsx(TextField,{...params,fullWidth:true})})})})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:4,display:filterTabValue===3?'block':'none'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Filter by Prefix\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Enter a custom prefix to filter items\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Custom Prefix\",value:activeFilters.customPrefix,onChange:e=>{setActiveFilters({...activeFilters,customPrefix:e.target.value});},placeholder:\"e.g. data/ or report-\",helperText:\"Filter items by key prefix or substring\"})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{startIcon:/*#__PURE__*/_jsx(ClearIcon,{}),onClick:()=>{setActiveFilters({fileTypes:[],sizeRange:[0,Number.MAX_SAFE_INTEGER],dateRange:{start:null,end:null},modifiedBy:'',customPrefix:''});},children:\"Clear All\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setFilterDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>{setFilterDialogOpen(false);// Apply filters function will be called when dialog is closed\n// since we're already watching activeFilters in an effect\n},startIcon:/*#__PURE__*/_jsx(FilterAltIcon,{}),children:\"Apply Filters\"})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:newBucketDialogOpen,onClose:()=>setNewBucketDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create New Bucket\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Enter a name for the new bucket. Bucket names must be globally unique, lowercase letters, numbers, or hyphens.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"bucket-name\",label:\"Bucket Name\",type:\"text\",fullWidth:true,value:newBucketName,onChange:e=>setNewBucketName(e.target.value),error:Boolean(error),helperText:error,disabled:loading})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNewBucketDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:createBucket,color:\"primary\",disabled:loading||!newBucketName,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Create'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:batchActionDialogOpen,onClose:()=>setBatchActionDialogOpen(false),children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[batchAction==='delete'&&'Confirm Delete',batchAction==='download'&&'Confirm Download',batchAction==='copy'&&'Confirm Copy',batchAction==='move'&&'Confirm Move',batchAction==='makePublic'&&'Confirm Make Public',batchAction==='makePrivate'&&'Confirm Make Private']}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[batchAction==='delete'&&/*#__PURE__*/_jsx(DeleteIcon,{color:\"error\",sx:{mr:1}}),batchAction==='download'&&/*#__PURE__*/_jsx(DownloadIcon,{color:\"primary\",sx:{mr:1}}),batchAction==='copy'&&/*#__PURE__*/_jsx(CopyIcon,{color:\"primary\",sx:{mr:1}}),batchAction==='move'&&/*#__PURE__*/_jsx(MoveIcon,{color:\"primary\",sx:{mr:1}}),batchAction==='makePublic'&&/*#__PURE__*/_jsx(PublicIcon,{color:\"primary\",sx:{mr:1}}),batchAction==='makePrivate'&&/*#__PURE__*/_jsx(LockIcon,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsxs(Typography,{children:[batchAction==='delete'&&`Are you sure you want to delete ${selectedItems.length} item${selectedItems.length!==1?'s':''}?`,batchAction==='download'&&`Download ${selectedItems.length} item${selectedItems.length!==1?'s':''}?`,batchAction==='copy'&&`Copy ${selectedItems.length} item${selectedItems.length!==1?'s':''}?`,batchAction==='move'&&`Move ${selectedItems.length} item${selectedItems.length!==1?'s':''}?`,batchAction==='makePublic'&&`Make ${selectedItems.length} item${selectedItems.length!==1?'s':''} public?`,batchAction==='makePrivate'&&`Make ${selectedItems.length} item${selectedItems.length!==1?'s':''} private?`]})]}),selectedItems.length<=5?/*#__PURE__*/_jsx(List,{dense:true,children:selectedItems.map((item,index)=>/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemIcon,{children:item.type==='folder'||item.type==='directory'?/*#__PURE__*/_jsx(FolderIcon,{fontSize:\"small\",color:\"primary\"}):/*#__PURE__*/_jsx(FileIcon,{fontSize:\"small\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:item.key.split('/').pop()||item.key,secondary:item.type==='file'?formatFileSize(item.size):''})]},index))}):/*#__PURE__*/_jsxs(Alert,{severity:\"info\",children:[selectedItems.length,\" items selected. Proceeding will affect all selected items.\"]}),(batchAction==='copy'||batchAction==='move')&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Destination:\"}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,sx:{mt:1},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Destination Folder\"}),/*#__PURE__*/_jsxs(Select,{value:\"\",onChange:()=>{},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",children:\"Root Directory\"}),objects.filter(item=>item.type==='folder'||item.type==='directory').map((folder,idx)=>/*#__PURE__*/_jsx(MenuItem,{value:folder.key,children:folder.key},idx))]})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setBatchActionDialogOpen(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:batchAction==='delete'?'error':'primary',onClick:executeBatchAction,startIcon:batchAction==='delete'?/*#__PURE__*/_jsx(DeleteIcon,{}):batchAction==='download'?/*#__PURE__*/_jsx(DownloadIcon,{}):batchAction==='copy'?/*#__PURE__*/_jsx(CopyIcon,{}):batchAction==='move'?/*#__PURE__*/_jsx(MoveIcon,{}):batchAction==='makePublic'?/*#__PURE__*/_jsx(PublicIcon,{}):batchAction==='makePrivate'?/*#__PURE__*/_jsx(LockIcon,{}):null,children:batchAction==='delete'?'Delete':batchAction==='download'?'Download':batchAction==='copy'?'Copy':batchAction==='move'?'Move':batchAction==='makePublic'?'Make Public':batchAction==='makePrivate'?'Make Private':'Confirm'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:newFolderDialogOpen,onClose:()=>setNewFolderDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create New Folder\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Enter a name for the new folder.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"folder-name\",label:\"Folder Name\",type:\"text\",fullWidth:true,value:newFolderName,onChange:e=>setNewFolderName(e.target.value),error:Boolean(error),helperText:error,disabled:loading})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNewFolderDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:createFolder,color:\"primary\",disabled:loading||!newFolderName,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Create'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:confirmDeleteDialogOpen,onClose:()=>setConfirmDeleteDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Delete\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Are you sure you want to delete the \",(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='bucket'?'bucket':(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='folder'?'folder':'file',\":\",/*#__PURE__*/_jsx(Box,{component:\"span\",sx:{fontWeight:'bold',display:'block',mt:1},children:(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.name)||(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.key)}),(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='bucket'&&/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:{mt:2},children:\"This will delete all objects in the bucket!\"}),(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='folder'&&/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:{mt:2},children:\"This will delete all contents of the folder!\"})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setConfirmDeleteDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:deleteItem,color:\"error\",disabled:loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Delete'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:fileUploadDialogOpen,onClose:()=>{if(!loading){setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);}},fullWidth:true,maxWidth:\"md\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[\"Upload Files to S3\",/*#__PURE__*/_jsx(IconButton,{onClick:()=>{if(!loading){setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);}},children:/*#__PURE__*/_jsx(CloseIcon,{})})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Upload Location:\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:1.5,mb:2,bgcolor:'background.default'},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(BucketIcon,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsxs(Typography,{sx:{fontWeight:'medium'},children:[selectedBucket,currentPrefix?`/${currentPrefix}`:'']})]})}),/*#__PURE__*/_jsxs(Box,{sx:{border:'2px dashed',borderColor:'divider',borderRadius:1,p:3,mb:3,textAlign:'center',transition:'all 0.2s ease','&:hover':{borderColor:'primary.main',bgcolor:'action.hover'},position:'relative'},onDragOver:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor=theme=>theme.palette.primary.main;e.currentTarget.style.backgroundColor=theme=>theme.palette.action.hover;},onDragLeave:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor='';e.currentTarget.style.backgroundColor='';},onDrop:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor='';e.currentTarget.style.backgroundColor='';if(e.dataTransfer.files&&e.dataTransfer.files.length>0){// Process all dropped files\nprocessFileSelection(e.dataTransfer.files);}},children:[/*#__PURE__*/_jsx(UploadIcon,{color:\"primary\",sx:{fontSize:40,mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Drag & Drop Files Here\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",paragraph:true,children:\"or\"}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",startIcon:/*#__PURE__*/_jsx(UploadIcon,{}),children:[\"Browse Files\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,multiple:true,onChange:e=>{if(e.target.files&&e.target.files.length>0){processFileSelection(e.target.files);}}})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",sx:{display:'block',mt:2},children:\"Supported file types: CSV, JSON, XML, PDF, Images, Text files\"})]}),selectedFile&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"File Preview\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,mb:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:(()=>{const FileCard=require(\"../../common/FileCard\").default;// Generate metadata for the file\nconst fileMetadata=generateFileMetadata(selectedFile);return/*#__PURE__*/_jsx(FileCard,{file:selectedFile,showActions:false,showPreview:false,variant:\"outlined\"});})()}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"File Details\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"File name:\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'medium'},children:selectedFile.name})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Size:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatFileSize(selectedFile.size)})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Type:\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedFile.type||'Unknown'})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Last modified:\"}),/*#__PURE__*/_jsx(\"span\",{children:new Date(selectedFile.lastModified).toLocaleString()})]})]}),(()=>{const{isPreviewSupported,getFileTypeDescription}=require(\"../../../utils/fileTypeUtils\");const mimeType=selectedFile.type;const isSupported=isPreviewSupported(mimeType);return/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:isSupported?/*#__PURE__*/_jsxs(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),children:[\"This file type (\",getFileTypeDescription(mimeType),\") is fully supported.\"]}):/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Limited Support\"}),\"This file type may have limited preview capabilities in the system.\"]})});})(),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"outlined\",color:\"error\",startIcon:/*#__PURE__*/_jsx(CloseIcon,{}),onClick:()=>setSelectedFile(null),sx:{mt:1},children:\"Remove File\"})]})]})}),uploadProgress>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2,mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Upload Progress\"}),/*#__PURE__*/_jsxs(\"span\",{children:[uploadProgress,\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:uploadProgress,sx:{height:10,borderRadius:5,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:uploadProgress<100?`Uploading ${selectedFile.name}...`:`Successfully uploaded ${selectedFile.name}`}),filesToUpload.length>1&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1,display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[\"File \",currentUploadIndex+1,\" of \",filesToUpload.length]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[Array.from({length:Math.min(filesToUpload.length,5)}).map((_,index)=>{// Calculate status for this dot\nlet color='grey.300';// default - not started\nif(index<currentUploadIndex){color='success.main';// completed\n}else if(index===currentUploadIndex){color=uploadProgress===100?'success.main':'primary.main';// in progress\n}return/*#__PURE__*/_jsx(Box,{sx:{width:8,height:8,borderRadius:'50%',bgcolor:color,mx:0.5}},index);}),filesToUpload.length>5&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",sx:{ml:1},children:[\"+\",filesToUpload.length-5,\" more\"]})]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Upload Options\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:uploadOptions.overwriteExisting,onChange:()=>setUploadOptions(prev=>({...prev,overwriteExisting:!prev.overwriteExisting})),name:\"overwriteExisting\"}),label:\"Overwrite if file already exists\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:uploadOptions.makePublic,onChange:()=>setUploadOptions(prev=>({...prev,makePublic:!prev.makePublic})),name:\"makePublic\"}),label:\"Make file publicly accessible\"}),filesToUpload.length>1&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2,p:1,bgcolor:'info.lightest',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,sx:{fontWeight:'medium',color:'info.main',display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(InfoIcon,{fontSize:\"small\",sx:{mr:0.5}}),\"Batch Upload Information\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[filesToUpload.length,\" files selected for upload (\",formatFileSize(filesToUpload.reduce((total,file)=>total+file.size,0)),\")\"]}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"text\",color:\"primary\",onClick:()=>{setFilesToUpload([]);setSelectedFile(null);},sx:{mt:1},startIcon:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"}),children:\"Clear Batch Selection\"})]})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{px:3,py:2},children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);},disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:uploadFile,variant:\"contained\",color:\"primary\",disabled:loading||!selectedFile||uploadProgress>0,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(UploadIcon,{}),children:loading?'Uploading...':filesToUpload.length>1?`Upload ${filesToUpload.length} Files`:'Upload File'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:fileViewerOpen,onClose:()=>setFileViewerOpen(false),fullWidth:true,maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(DialogContent,{dividers:true,sx:{p:0},children:renderFilePreview(fileViewUrl,fileViewType)}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setFileViewerOpen(false),children:\"Close\"}),selectedItem&&selectedItem.type==='file'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{downloadObject(selectedItem);},startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),children:\"Download\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{onSelectObject({bucketName:selectedBucket,prefix:currentPrefix,key:selectedItem.key,size:selectedItem.size,lastModified:selectedItem.lastModified,contentType:selectedItem.contentType});setFileViewerOpen(false);},variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),children:\"Select This File\"})]})]})]})]});};export default S3BucketBrowser;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Card","CardContent","CardHeader","Chip","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","FormControl","FormGroup","FormHelperText","FormLabel","Grid","IconButton","InputAdornment","InputLabel","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Menu","MenuItem","Paper","Radio","RadioGroup","Select","Slider","Stack","Switch","Tab","Tabs","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","Alert","AlertTitle","FormControlLabel","Checkbox","LinearProgress","DatePicker","LocalizationProvider","AdapterDateFns","AddCircleOutline","AddIcon","ArrowUpward","UpIcon","CloudUpload","UploadIcon","Delete","DeleteIcon","Download","DownloadIcon","Folder","FolderIcon","FolderOpen","FolderOpenIcon","InsertDriveFile","FileIcon","MoreVert","MoreVertIcon","Refresh","RefreshIcon","Search","SearchIcon","Visibility","ViewIcon","CreateNewFolder","CreateFolderIcon","Storage","BucketIcon","CheckCircle","CheckCircleIcon","Close","CloseIcon","Info","InfoIcon","Warning","WarningIcon","ErrorOutline","ErrorOutlineIcon","FilterList","FilterListIcon","FilterAlt","FilterAltIcon","SelectAll","SelectAllIcon","LibraryAddCheck","BatchActionIcon","Public","PublicIcon","Lock","LockIcon","Archive","ArchiveIcon","Check","CheckIcon","Clear","ClearIcon","ContentCopy","CopyIcon","ZoomIn","ZoomInIcon","MoveToInbox","MoveIcon","Label","TagIcon","Settings","AdvancedIcon","generateFileMetadata","MimeTypeCategories","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","FILE_TYPE_OPTIONS","value","label","description","SIZE_PRESETS","Number","MAX_SAFE_INTEGER","DATE_PRESETS","days","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","toLocaleString","getDateDaysAgo","setDate","getDate","applyFilters","objects","filters","filter","item","type","matchesPrefix","matchesDate","customPrefix","key","toLowerCase","includes","dateRange","start","end","itemDate","lastModified","matchesFileType","fileTypes","length","some","_MimeTypeCategories$t","contentType","mimeType","matchesSize","sizeRange","size","performBatchOperation","action","items","target","arguments","undefined","success","message","setBatchOperationStatus","inProgress","completed","failed","details","progress","totalItems","updateProgress","processedItems","round","prev","console","Promise","resolve","setTimeout","itemCount","itemTypes","countItemTypes","totalSize","calculateTotalSize","error","files","folders","counts","forEach","reduce","total","S3BucketBrowser","_ref","config","onSelectBucket","onSelectObject","readOnly","selectedBucket","selectedPrefix","isMounted","useRef","current","timeoutIdsRef","intervalIdsRef","setSafeTimeout","callback","delay","id","timeoutId","push","setSafeInterval","setInterval","clearTimeout","clearInterval","abortController","AbortController","loadBuckets","signal","abort","buckets","setBuckets","setObjects","currentPrefix","setCurrentPrefix","prefixHistory","setPrefixHistory","loading","setLoading","bucketLoading","setBucketLoading","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearching","setIsSearching","filterDialogOpen","setFilterDialogOpen","filterTabValue","setFilterTabValue","activeFilters","setActiveFilters","modifiedBy","activeFilterCount","setActiveFilterCount","filterSummary","setFilterSummary","hasFileTypeFilters","hasSizeFilter","hasDateFilter","hasCustomPrefix","selectedItems","setSelectedItems","selectionMode","setSelectionMode","batchActionDialogOpen","setBatchActionDialogOpen","batchAction","setBatchAction","batchActionTarget","setBatchActionTarget","batchOperationStatus","newBucketDialogOpen","setNewBucketDialogOpen","newBucketName","setNewBucketName","newFolderDialogOpen","setNewFolderDialogOpen","newFolderName","setNewFolderName","confirmDeleteDialogOpen","setConfirmDeleteDialogOpen","itemToDelete","setItemToDelete","fileUploadDialogOpen","setFileUploadDialogOpen","selectedFile","setSelectedFile","filesToUpload","setFilesToUpload","currentUploadIndex","setCurrentUploadIndex","uploadProgress","setUploadProgress","uploadOptions","setUploadOptions","overwriteExisting","makePublic","contextMenuPos","setContextMenuPos","selectedItem","setSelectedItem","fileViewerOpen","setFileViewerOpen","fileViewUrl","setFileViewUrl","fileViewType","setFileViewType","setError","abortablePromise","reject","status","name","creationDate","now","toISOString","addEventListener","Error","response","b","loadObjects","err","bucketName","prefix","mockObjects","prevHistory","navigateTo","fullPrefix","navigateUp","previousPrefix","slice","searchObjects","allPossibleObjects","searchLower","results","obj","clearSearch","applyAdvancedFilters","itemsToFilter","filteredResults","clearFilters","toggleSelectionMode","toggleItemSelection","e","stopPropagation","isSelected","selected","isItemSelected","selectAllItems","executeBatchAction","result","itemKeys","map","createBucket","bucket","prevBuckets","createFolder","fullKey","folder","prevObjects","deleteItem","o","processFileSelection","fileArray","Array","from","uploadSingleFile","file","uploadProgressInterval","random","index","indexOf","splice","min","baseUploadTime","sizeBasedTime","object","uploadFile","successCount","downloadObject","alert","viewObject","handleContextMenu","event","preventDefault","x","clientX","y","clientY","handleContextMenuClose","renderFilePreview","url","FilePreview","require","default","fileObj","getDisplayName","generateSimulatedContent","JSON","stringify","content","filename","onDownload","maxHeight","fullWidth","getIconColorForFileType","startsWith","parts","split","sx","display","flexDirection","height","children","alignItems","mb","flexGrow","overflow","flexWrap","variant","flexShrink","whiteSpace","title","component","onClick","cursor","color","textDecoration","ml","textOverflow","Boolean","segment","array","pathUpToSegment","join","disabled","placeholder","onChange","InputProps","startAdornment","position","endAdornment","onKeyPress","gap","fileType","_FILE_TYPE_OPTIONS$fi","find","opt","onDelete","t","startIcon","fontSize","justifyContent","p","mt","fontWeight","py","padding","width","align","colSpan","hover","backgroundColor","onContextMenu","checked","minWidth","fontFamily","open","onClose","anchorReference","anchorPosition","top","left","divider","maxWidth","mr","dividers","newValue","borderBottom","borderColor","gutterBottom","paragraph","container","spacing","option","xs","sm","md","control","newFileTypes","preset","px","valueLabelDisplay","valueLabelFormat","max","step","marks","dateAdapter","renderInput","params","helperText","autoFocus","margin","dense","primary","pop","secondary","severity","idx","bgcolor","border","borderRadius","textAlign","transition","onDragOver","currentTarget","style","theme","palette","main","onDragLeave","onDrop","dataTransfer","hidden","multiple","FileCard","fileMetadata","showActions","showPreview","isPreviewSupported","getFileTypeDescription","isSupported","icon","_","mx"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/s3/S3BucketBrowser.jsx"],"sourcesContent":["/**\n * S3 Bucket Browser Component\n *\n * A component for browsing and selecting AWS S3 buckets and objects.\n * Supports bucket listing, object browsing, searching, and file operations.\n *\n * @component\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Chip,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  FormControl,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  Radio,\n  RadioGroup,\n  Select,\n  Slider,\n  Stack,\n  Switch,\n  Tab,\n  Tabs,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  Alert,\n  AlertTitle,\n  FormControlLabel,\n  Checkbox,\n  LinearProgress,\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport {\n  AddCircleOutline as AddIcon,\n  ArrowUpward as UpIcon,\n  CloudUpload as UploadIcon,\n  Delete as DeleteIcon,\n  Download as DownloadIcon,\n  Folder as FolderIcon,\n  FolderOpen as FolderOpenIcon,\n  InsertDriveFile as FileIcon,\n  MoreVert as MoreVertIcon,\n  Refresh as RefreshIcon,\n  Search as SearchIcon,\n  Visibility as ViewIcon,\n  CreateNewFolder as CreateFolderIcon,\n  Storage as BucketIcon,\n  CheckCircle as CheckCircleIcon,\n  Close as CloseIcon,\n  Info as InfoIcon,\n  Warning as WarningIcon,\n  ErrorOutline as ErrorOutlineIcon,\n  FilterList as FilterListIcon,\n  FilterAlt as FilterAltIcon,\n  SelectAll as SelectAllIcon,\n  LibraryAddCheck as BatchActionIcon,\n  Public as PublicIcon,\n  Lock as LockIcon,\n  Archive as ArchiveIcon,\n  Check as CheckIcon,\n  Clear as ClearIcon,\n  ContentCopy as CopyIcon,\n  ZoomIn as ZoomInIcon,\n  MoveToInbox as MoveIcon,\n  Label as TagIcon,\n  Settings as AdvancedIcon\n} from '@mui/icons-material';\n\n// Utilities for handling file types\nimport { generateFileMetadata, MimeTypeCategories } from '../../../utils/fileTypeUtils';\n\n// File type options for filtering\nconst FILE_TYPE_OPTIONS = [\n  { value: 'TEXT', label: 'Text Files', description: 'CSV, TXT, JSON, XML, etc.' },\n  { value: 'DOCUMENT', label: 'Documents', description: 'PDF, DOCX, XLSX, PPTX, etc.' },\n  { value: 'IMAGE', label: 'Images', description: 'JPG, PNG, GIF, SVG, etc.' },\n  { value: 'AUDIO', label: 'Audio', description: 'MP3, WAV, OGG, etc.' },\n  { value: 'VIDEO', label: 'Video', description: 'MP4, WEBM, AVI, etc.' },\n  { value: 'ARCHIVE', label: 'Archives', description: 'ZIP, RAR, TAR, etc.' },\n  { value: 'DATA', label: 'Data Files', description: 'CSV, JSON, Parquet, etc.' },\n  { value: 'CODE', label: 'Source Code', description: 'JS, PY, JAVA, etc.' },\n];\n\n// Size options presets for filtering\nconst SIZE_PRESETS = [\n  { value: [0, 1024 * 10], label: 'Tiny (< 10KB)' },\n  { value: [0, 1024 * 100], label: 'Small (< 100KB)' },\n  { value: [1024 * 100, 1024 * 1024], label: 'Medium (100KB - 1MB)' },\n  { value: [1024 * 1024, 1024 * 1024 * 10], label: 'Large (1MB - 10MB)' },\n  { value: [1024 * 1024 * 10, 1024 * 1024 * 100], label: 'X-Large (10MB - 100MB)' },\n  { value: [1024 * 1024 * 100, Number.MAX_SAFE_INTEGER], label: 'XX-Large (> 100MB)' },\n];\n\n// Date presets for filtering\nconst DATE_PRESETS = [\n  { value: { days: 1 }, label: 'Last 24 hours' },\n  { value: { days: 7 }, label: 'Last 7 days' },\n  { value: { days: 30 }, label: 'Last 30 days' },\n  { value: { days: 90 }, label: 'Last 3 months' },\n  { value: { days: 365 }, label: 'Last year' },\n  { value: 'custom', label: 'Custom range' },\n];\n\n/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Unknown';\n  \n  const date = new Date(dateString);\n  return date.toLocaleString();\n};\n\n/**\n * Gets the date from a specified number of days ago\n * @param {number} days - Number of days to subtract from current date\n * @returns {Date} Date object representing the date X days ago\n */\nconst getDateDaysAgo = (days) => {\n  const date = new Date();\n  date.setDate(date.getDate() - days);\n  return date;\n};\n\n/**\n * Applies filters to an array of objects\n * @param {Array} objects - Array of S3 objects to filter\n * @param {Object} filters - Filter criteria\n * @returns {Array} Filtered array of objects\n */\nconst applyFilters = (objects, filters) => {\n  if (!objects || !filters) return objects;\n  \n  return objects.filter(item => {\n    // Skip directories if we're filtering by file type or size\n    if (item.type === 'folder' || item.type === 'directory') {\n      // Only filter directories by date or custom prefix\n      let matchesPrefix = true;\n      let matchesDate = true;\n      \n      // Filter by prefix if specified\n      if (filters.customPrefix) {\n        matchesPrefix = item.key.toLowerCase().includes(filters.customPrefix.toLowerCase());\n      }\n      \n      // Filter by date if specified\n      if (filters.dateRange.start && filters.dateRange.end) {\n        const itemDate = new Date(item.lastModified);\n        matchesDate = itemDate >= filters.dateRange.start && itemDate <= filters.dateRange.end;\n      }\n      \n      return matchesPrefix && matchesDate;\n    }\n    \n    // Filter by file type\n    let matchesFileType = true;\n    if (filters.fileTypes && filters.fileTypes.length > 0) {\n      matchesFileType = filters.fileTypes.some(type => {\n        // Check if this file's content type belongs to the selected category\n        const contentType = item.contentType || '';\n        return MimeTypeCategories[type]?.some(mimeType => \n          contentType.toLowerCase().includes(mimeType.toLowerCase())\n        );\n      });\n    }\n    \n    // Filter by size range\n    let matchesSize = true;\n    if (filters.sizeRange && filters.sizeRange.length === 2) {\n      const size = item.size || 0;\n      matchesSize = size >= filters.sizeRange[0] && size <= filters.sizeRange[1];\n    }\n    \n    // Filter by date range\n    let matchesDate = true;\n    if (filters.dateRange.start && filters.dateRange.end) {\n      const itemDate = new Date(item.lastModified);\n      matchesDate = itemDate >= filters.dateRange.start && itemDate <= filters.dateRange.end;\n    }\n    \n    // Filter by custom prefix\n    let matchesPrefix = true;\n    if (filters.customPrefix) {\n      matchesPrefix = item.key.toLowerCase().includes(filters.customPrefix.toLowerCase());\n    }\n    \n    return matchesFileType && matchesSize && matchesDate && matchesPrefix;\n  });\n};\n\n/**\n * Performs batch operation on selected items with comprehensive progress tracking\n * @param {string} action - The action to perform (delete, download, copy, etc.)\n * @param {Array} items - Array of selected items\n * @param {string} target - Target location for copy/move operations\n * @returns {Promise<Object>} Result of the batch operation\n */\nconst performBatchOperation = async (action, items, target = '') => {\n  if (!items || items.length === 0) {\n    return { success: false, message: 'No items selected' };\n  }\n  \n  // Reset status\n  setBatchOperationStatus({\n    inProgress: true,\n    completed: false,\n    failed: false,\n    message: `Processing ${items.length} items...`,\n    details: null,\n    progress: 0\n  });\n  \n  // Track total items for progress calculation\n  const totalItems = items.length;\n  const updateProgress = (processedItems) => {\n    const progress = Math.round((processedItems / totalItems) * 100);\n    setBatchOperationStatus(prev => ({\n      ...prev,\n      progress,\n      message: `Processed ${processedItems} of ${totalItems} items (${progress}%)`\n    }));\n  };\n  \n  try {\n    // Different operations based on action type\n    switch (action) {\n      case 'delete':\n        // Simulated batch delete with progress\n        console.log(`Batch deleting ${items.length} items`);\n        \n        // Simulate progress updates\n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 75));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully deleted ${items.length} items`,\n          details: { \n            itemCount: items.length,\n            itemTypes: countItemTypes(items),\n            totalSize: calculateTotalSize(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully deleted ${items.length} items`,\n          details: { itemCount: items.length }\n        };\n        \n      case 'download':\n        // Simulated batch download with progress\n        console.log(`Batch downloading ${items.length} items`);\n        \n        // Faster progress simulation for download\n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 50));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Prepared ${items.length} items for download`,\n          details: { \n            itemCount: items.length,\n            itemTypes: countItemTypes(items),\n            totalSize: calculateTotalSize(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Prepared ${items.length} items for download`,\n          details: { itemCount: items.length }\n        };\n        \n      case 'copy':\n        // Simulated batch copy with progress and target\n        console.log(`Batch copying ${items.length} items to ${target}`);\n        \n        // Slower progress simulation for copy\n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 100));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully copied ${items.length} items to ${target || 'destination'}`,\n          details: { \n            itemCount: items.length,\n            target: target || 'destination',\n            itemTypes: countItemTypes(items),\n            totalSize: calculateTotalSize(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully copied ${items.length} items`,\n          details: { itemCount: items.length, target }\n        };\n        \n      case 'move':\n        // Simulated batch move with progress and target\n        console.log(`Batch moving ${items.length} items to ${target}`);\n        \n        // Slower progress simulation for move\n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 125));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully moved ${items.length} items to ${target || 'destination'}`,\n          details: { \n            itemCount: items.length,\n            target: target || 'destination',\n            itemTypes: countItemTypes(items),\n            totalSize: calculateTotalSize(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully moved ${items.length} items`,\n          details: { itemCount: items.length, target }\n        };\n        \n      case 'makePublic':\n        // Simulated making items public with progress\n        console.log(`Making ${items.length} items public`);\n        \n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 40));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully made ${items.length} items public`,\n          details: { \n            itemCount: items.length,\n            itemTypes: countItemTypes(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully made ${items.length} items public`,\n          details: { itemCount: items.length }\n        };\n        \n      case 'makePrivate':\n        // Simulated making items private with progress\n        console.log(`Making ${items.length} items private`);\n        \n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 40));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully made ${items.length} items private`,\n          details: { \n            itemCount: items.length,\n            itemTypes: countItemTypes(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully made ${items.length} items private`,\n          details: { itemCount: items.length }\n        };\n        \n      case 'addTags':\n        // Simulated tagging items with progress\n        console.log(`Adding tags to ${items.length} items`);\n        \n        for (let i = 0; i < totalItems; i++) {\n          await new Promise(resolve => setTimeout(resolve, 60));\n          updateProgress(i + 1);\n        }\n        \n        setBatchOperationStatus({\n          inProgress: false,\n          completed: true,\n          failed: false,\n          message: `Successfully tagged ${items.length} items`,\n          details: { \n            itemCount: items.length,\n            itemTypes: countItemTypes(items)\n          },\n          progress: 100\n        });\n        \n        return { \n          success: true, \n          message: `Successfully tagged ${items.length} items`,\n          details: { itemCount: items.length }\n        };\n        \n      default:\n        setBatchOperationStatus({\n          inProgress: false,\n          completed: false,\n          failed: true,\n          message: `Unknown action: ${action}`,\n          details: null,\n          progress: 0\n        });\n        \n        return { success: false, message: `Unknown action: ${action}` };\n    }\n  } catch (error) {\n    // Handle errors\n    setBatchOperationStatus({\n      inProgress: false,\n      completed: false,\n      failed: true,\n      message: `Operation failed: ${error.message}`,\n      details: { error: error.message },\n      progress: 0\n    });\n    \n    return { \n      success: false, \n      message: `Operation failed: ${error.message}`,\n      details: { error: error.message }\n    };\n  }\n};\n\n/**\n * Counts items by type (file, folder) in a selection\n * @param {Array} items - The items to count\n * @returns {Object} Counts by type\n */\nconst countItemTypes = (items) => {\n  if (!items) return { files: 0, folders: 0 };\n  \n  const counts = {\n    files: 0,\n    folders: 0\n  };\n  \n  items.forEach(item => {\n    if (item.type === 'folder' || item.type === 'directory') {\n      counts.folders++;\n    } else {\n      counts.files++;\n    }\n  });\n  \n  return counts;\n};\n\n/**\n * Calculates the total size of selected items\n * @param {Array} items - The items to calculate size for\n * @returns {number} Total size in bytes\n */\nconst calculateTotalSize = (items) => {\n  if (!items) return 0;\n  \n  return items.reduce((total, item) => {\n    // Only add size for files\n    if (item.type !== 'folder' && item.type !== 'directory') {\n      return total + (item.size || 0);\n    }\n    return total;\n  }, 0);\n};\n\n/**\n * S3 Bucket Browser Component\n */\nconst S3BucketBrowser = ({\n  config,\n  onSelectBucket,\n  onSelectObject,\n  readOnly = false,\n  selectedBucket = '',\n  selectedPrefix = '',\n}) => {\n  // Ref to track if component is mounted (prevents memory leaks from state updates after unmount)\n  const isMounted = useRef(true);\n  \n  // Clean up on unmount\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n  \n  // Refs to track active timers and intervals for cleanup\n  const timeoutIdsRef = useRef([]);\n  const intervalIdsRef = useRef([]);\n  \n  // Helper to safely set timeout with tracking for cleanup\n  const setSafeTimeout = useCallback((callback, delay) => {\n    const id = setTimeout(() => {\n      // Remove from tracking array when executed\n      timeoutIdsRef.current = timeoutIdsRef.current.filter(timeoutId => timeoutId !== id);\n      // Only execute callback if component is still mounted\n      if (isMounted.current) {\n        callback();\n      }\n    }, delay);\n    \n    // Add to tracking array\n    timeoutIdsRef.current.push(id);\n    return id;\n  }, []);\n  \n  // Helper to safely set interval with tracking for cleanup\n  const setSafeInterval = useCallback((callback, delay) => {\n    const id = setInterval(() => {\n      // Only execute callback if component is still mounted\n      if (isMounted.current) {\n        callback();\n      }\n    }, delay);\n    \n    // Add to tracking array\n    intervalIdsRef.current.push(id);\n    return id;\n  }, []);\n  \n  // Clean up all active timers and intervals on unmount\n  useEffect(() => {\n    return () => {\n      // Clear all tracked timeouts\n      timeoutIdsRef.current.forEach(id => clearTimeout(id));\n      timeoutIdsRef.current = [];\n      \n      // Clear all tracked intervals\n      intervalIdsRef.current.forEach(id => clearInterval(id));\n      intervalIdsRef.current = [];\n    };\n  }, []);\n  \n  // Load buckets on mount and when config changes with proper cleanup\n  useEffect(() => {\n    // Create abort controller for cleanup\n    const abortController = new AbortController();\n    \n    if (config) {\n      loadBuckets(abortController.signal);\n    }\n    \n    // Cleanup: abort any in-progress fetches when component unmounts or config changes\n    return () => {\n      abortController.abort();\n    };\n  }, [config, loadBuckets]);\n  // State for buckets and objects\n  const [buckets, setBuckets] = useState([]);\n  const [objects, setObjects] = useState([]);\n  const [currentPrefix, setCurrentPrefix] = useState(selectedPrefix || '');\n  const [prefixHistory, setPrefixHistory] = useState([]);\n  \n  // State for loading indicators\n  const [loading, setLoading] = useState(false);\n  const [bucketLoading, setBucketLoading] = useState(false);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  \n  // Enhanced filtering state\n  const [filterDialogOpen, setFilterDialogOpen] = useState(false);\n  const [filterTabValue, setFilterTabValue] = useState(0);\n  const [activeFilters, setActiveFilters] = useState({\n    fileTypes: [],\n    sizeRange: [0, Number.MAX_SAFE_INTEGER],\n    dateRange: {\n      start: null,\n      end: null\n    },\n    modifiedBy: '',\n    customPrefix: ''\n  });\n  \n  // Active filter tracking for visual feedback\n  const [activeFilterCount, setActiveFilterCount] = useState(0);\n  const [filterSummary, setFilterSummary] = useState({\n    hasFileTypeFilters: false,\n    hasSizeFilter: false,\n    hasDateFilter: false,\n    hasCustomPrefix: false\n  });\n  \n  // Batch operations state\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectionMode, setSelectionMode] = useState(false);\n  const [batchActionDialogOpen, setBatchActionDialogOpen] = useState(false);\n  const [batchAction, setBatchAction] = useState('');\n  const [batchActionTarget, setBatchActionTarget] = useState('');\n  const [batchOperationStatus, setBatchOperationStatus] = useState({\n    inProgress: false,\n    completed: false,\n    failed: false,\n    message: '',\n    details: null,\n    progress: 0\n  });\n  \n  // Dialog states\n  const [newBucketDialogOpen, setNewBucketDialogOpen] = useState(false);\n  const [newBucketName, setNewBucketName] = useState('');\n  const [newFolderDialogOpen, setNewFolderDialogOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [fileUploadDialogOpen, setFileUploadDialogOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filesToUpload, setFilesToUpload] = useState([]);\n  const [currentUploadIndex, setCurrentUploadIndex] = useState(0);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadOptions, setUploadOptions] = useState({\n    overwriteExisting: true,\n    makePublic: false\n  });\n  \n  // Context menu state\n  const [contextMenuPos, setContextMenuPos] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  \n  // File viewer state\n  const [fileViewerOpen, setFileViewerOpen] = useState(false);\n  const [fileViewUrl, setFileViewUrl] = useState('');\n  const [fileViewType, setFileViewType] = useState('');\n  \n  // Error state\n  const [error, setError] = useState(null);\n\n  /**\n   * Load buckets from S3 with support for cancellation\n   * @param {AbortSignal} [signal] - Optional AbortSignal for cancellation\n   */\n  const loadBuckets = useCallback(async (signal) => {\n    if (!config) return;\n    \n    setBucketLoading(true);\n    setError(null);\n    \n    try {\n      // Simulated API call for development environment\n      console.log('Loading S3 buckets with config:', config);\n      \n      // Create a promise that can be aborted\n      const abortablePromise = new Promise((resolve, reject) => {\n        // Track the timeout ID so we can clear it if aborted\n        const timeoutId = setTimeout(() => {\n          resolve({\n            status: 'success',\n            buckets: [\n              { name: 'data-bucket-1', creationDate: new Date(Date.now() - 15552000000).toISOString() },\n              { name: 'data-bucket-2', creationDate: new Date(Date.now() - 7776000000).toISOString() },\n              { name: 'logs-bucket', creationDate: new Date(Date.now() - 31104000000).toISOString() },\n              { name: 'backup-bucket', creationDate: new Date(Date.now() - 62208000000).toISOString() },\n              { name: 'test-integration-bucket', creationDate: new Date().toISOString() },\n            ]\n          });\n        }, 1000);\n        \n        // Handle abort signal if provided\n        if (signal) {\n          signal.addEventListener('abort', () => {\n            clearTimeout(timeoutId);\n            reject(new Error('Operation cancelled'));\n          });\n        }\n        \n        // Track the timeout for cleanup\n        timeoutIdsRef.current.push(timeoutId);\n      });\n      \n      const response = await abortablePromise;\n      \n      // Check if component is still mounted before updating state\n      if (!isMounted.current) return;\n      \n      if (response.status === 'success') {\n        setBuckets(response.buckets);\n        \n        // If a bucket is already selected, keep it selected\n        if (selectedBucket && response.buckets.some(b => b.name === selectedBucket)) {\n          loadObjects(selectedBucket, selectedPrefix || '', signal);\n        }\n      } else {\n        setError(response.message || 'Failed to load S3 buckets');\n      }\n    } catch (err) {\n      // Only log and update error state if not cancelled and component is mounted\n      if (err.message !== 'Operation cancelled' && isMounted.current) {\n        console.error('Error loading buckets:', err);\n        setError(err.message || 'An error occurred while loading S3 buckets');\n      }\n    } finally {\n      // Only update loading state if component is still mounted\n      if (isMounted.current) {\n        setBucketLoading(false);\n      }\n    }\n  }, [config, selectedBucket, selectedPrefix, isMounted]);\n  \n  /**\n   * Load objects from a bucket with specified prefix\n   */\n  const loadObjects = useCallback(async (bucketName, prefix = '') => {\n    if (!config || !bucketName) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Loading objects from bucket: ${bucketName}, prefix: ${prefix}`);\n      \n      // Simulate API response with mock data based on prefix\n      const response = await new Promise(resolve => setTimeout(() => {\n        // Generate different mock responses based on the prefix\n        let mockObjects = [];\n        \n        if (prefix === '') {\n          // Root directory\n          mockObjects = [\n            {\n              key: 'folder1/',\n              size: 0,\n              lastModified: new Date(Date.now() - 86400000).toISOString(),\n              type: 'folder'\n            },\n            {\n              key: 'folder2/',\n              size: 0,\n              lastModified: new Date(Date.now() - 172800000).toISOString(),\n              type: 'folder'\n            },\n            {\n              key: 'data/',\n              size: 0,\n              lastModified: new Date(Date.now() - 259200000).toISOString(),\n              type: 'folder'\n            },\n            {\n              key: 'sample.csv',\n              size: 1024,\n              lastModified: new Date(Date.now() - 345600000).toISOString(),\n              contentType: 'text/csv',\n              type: 'file'\n            },\n            {\n              key: 'readme.txt',\n              size: 512,\n              lastModified: new Date(Date.now() - 432000000).toISOString(),\n              contentType: 'text/plain',\n              type: 'file'\n            }\n          ];\n        } else if (prefix === 'folder1/') {\n          // Folder 1 contents\n          mockObjects = [\n            {\n              key: 'folder1/subfolder/',\n              size: 0,\n              lastModified: new Date(Date.now() - 518400000).toISOString(),\n              type: 'folder'\n            },\n            {\n              key: 'folder1/data1.json',\n              size: 2048,\n              lastModified: new Date(Date.now() - 604800000).toISOString(),\n              contentType: 'application/json',\n              type: 'file'\n            }\n          ];\n        } else if (prefix === 'folder1/subfolder/') {\n          // Subfolder contents\n          mockObjects = [\n            {\n              key: 'folder1/subfolder/deep.xml',\n              size: 4096,\n              lastModified: new Date(Date.now() - 691200000).toISOString(),\n              contentType: 'application/xml',\n              type: 'file'\n            }\n          ];\n        } else if (prefix === 'folder2/') {\n          // Folder 2 contents\n          mockObjects = [\n            {\n              key: 'folder2/image.png',\n              size: 102400,\n              lastModified: new Date(Date.now() - 777600000).toISOString(),\n              contentType: 'image/png',\n              type: 'file'\n            },\n            {\n              key: 'folder2/document.pdf',\n              size: 204800,\n              lastModified: new Date(Date.now() - 864000000).toISOString(),\n              contentType: 'application/pdf',\n              type: 'file'\n            }\n          ];\n        } else if (prefix === 'data/') {\n          // Data folder contents\n          mockObjects = [\n            {\n              key: 'data/dataset1.csv',\n              size: 5120,\n              lastModified: new Date(Date.now() - 950400000).toISOString(),\n              contentType: 'text/csv',\n              type: 'file'\n            },\n            {\n              key: 'data/dataset2.csv',\n              size: 6144,\n              lastModified: new Date(Date.now() - 1036800000).toISOString(),\n              contentType: 'text/csv',\n              type: 'file'\n            },\n            {\n              key: 'data/dataset3.xlsx',\n              size: 8192,\n              lastModified: new Date(Date.now() - 1123200000).toISOString(),\n              contentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n              type: 'file'\n            }\n          ];\n        }\n        \n        resolve({\n          status: 'success',\n          objects: mockObjects,\n          bucketName: bucketName,\n          prefix: prefix\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Update current bucket and prefix\n        if (bucketName !== selectedBucket) {\n          onSelectBucket(bucketName);\n          setPrefixHistory([]);\n        }\n        \n        setObjects(response.objects);\n        setCurrentPrefix(prefix);\n        \n        // If this is a new prefix, add it to history\n        if (prefix !== currentPrefix) {\n          setPrefixHistory(prevHistory => {\n            // Add the previous prefix to history only if it's not empty\n            if (currentPrefix) {\n              return [...prevHistory, currentPrefix];\n            }\n            return prevHistory;\n          });\n        }\n      } else {\n        setError(response.message || 'Failed to load objects');\n      }\n    } catch (err) {\n      console.error('Error loading objects:', err);\n      setError(err.message || 'An error occurred while loading objects');\n    } finally {\n      setLoading(false);\n      setIsSearching(false);\n    }\n  }, [config, currentPrefix, onSelectBucket, selectedBucket]);\n  \n  /**\n   * Navigate to a folder or object\n   */\n  const navigateTo = useCallback((item) => {\n    if (item.type === 'folder') {\n      // Extract the folder prefix from the key\n      const fullPrefix = item.key;\n      \n      // Load objects from the folder\n      loadObjects(selectedBucket, fullPrefix);\n    } else if (item.type === 'file') {\n      // Select the object\n      onSelectObject({\n        bucketName: selectedBucket,\n        prefix: currentPrefix,\n        key: item.key,\n        size: item.size,\n        lastModified: item.lastModified,\n        contentType: item.contentType\n      });\n    }\n  }, [currentPrefix, loadObjects, onSelectObject, selectedBucket]);\n  \n  /**\n   * Go up one level in the prefix\n   */\n  const navigateUp = useCallback(() => {\n    if (prefixHistory.length > 0) {\n      // Get the previous prefix\n      const previousPrefix = prefixHistory[prefixHistory.length - 1];\n      \n      // Update the prefix history\n      setPrefixHistory(prevHistory => prevHistory.slice(0, -1));\n      \n      // Load objects from the previous prefix\n      loadObjects(selectedBucket, previousPrefix);\n    } else {\n      // If we're at the root of a bucket, go back to bucket list\n      setObjects([]);\n      setCurrentPrefix('');\n      onSelectBucket('');\n    }\n  }, [loadObjects, onSelectBucket, prefixHistory, selectedBucket]);\n  \n  /**\n   * Search for objects\n   */\n  const searchObjects = useCallback(async () => {\n    if (!searchTerm || !selectedBucket) return;\n    \n    setIsSearching(true);\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Searching for \"${searchTerm}\" in bucket: ${selectedBucket}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        // Generate mock search results\n        const allPossibleObjects = [\n          {\n            key: 'folder1/data1.json',\n            size: 2048,\n            lastModified: new Date(Date.now() - 604800000).toISOString(),\n            contentType: 'application/json',\n            type: 'file'\n          },\n          {\n            key: 'folder1/subfolder/deep.xml',\n            size: 4096,\n            lastModified: new Date(Date.now() - 691200000).toISOString(),\n            contentType: 'application/xml',\n            type: 'file'\n          },\n          {\n            key: 'folder2/image.png',\n            size: 102400,\n            lastModified: new Date(Date.now() - 777600000).toISOString(),\n            contentType: 'image/png',\n            type: 'file'\n          },\n          {\n            key: 'folder2/document.pdf',\n            size: 204800,\n            lastModified: new Date(Date.now() - 864000000).toISOString(),\n            contentType: 'application/pdf',\n            type: 'file'\n          },\n          {\n            key: 'data/dataset1.csv',\n            size: 5120,\n            lastModified: new Date(Date.now() - 950400000).toISOString(),\n            contentType: 'text/csv',\n            type: 'file'\n          },\n          {\n            key: 'data/dataset2.csv',\n            size: 6144,\n            lastModified: new Date(Date.now() - 1036800000).toISOString(),\n            contentType: 'text/csv',\n            type: 'file'\n          },\n          {\n            key: 'data/dataset3.xlsx',\n            size: 8192,\n            lastModified: new Date(Date.now() - 1123200000).toISOString(),\n            contentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n            type: 'file'\n          },\n          {\n            key: 'sample.csv',\n            size: 1024,\n            lastModified: new Date(Date.now() - 345600000).toISOString(),\n            contentType: 'text/csv',\n            type: 'file'\n          },\n          {\n            key: 'readme.txt',\n            size: 512,\n            lastModified: new Date(Date.now() - 432000000).toISOString(),\n            contentType: 'text/plain',\n            type: 'file'\n          }\n        ];\n        \n        // Filter by search term\n        const searchLower = searchTerm.toLowerCase();\n        const results = allPossibleObjects.filter(obj => \n          obj.key.toLowerCase().includes(searchLower)\n        );\n        \n        resolve({\n          status: 'success',\n          objects: results\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        setSearchResults(response.objects);\n      } else {\n        setError(response.message || 'Failed to search objects');\n      }\n    } catch (err) {\n      console.error('Error searching objects:', err);\n      setError(err.message || 'An error occurred while searching objects');\n    } finally {\n      setLoading(false);\n    }\n  }, [searchTerm, selectedBucket]);\n  \n  /**\n   * Clear search and return to regular browsing\n   */\n  const clearSearch = useCallback(() => {\n    setSearchTerm('');\n    setSearchResults([]);\n    setIsSearching(false);\n    \n    // Reload current prefix\n    if (selectedBucket) {\n      loadObjects(selectedBucket, currentPrefix);\n    }\n  }, [currentPrefix, loadObjects, selectedBucket]);\n  \n  /**\n   * Apply advanced filters and update UI\n   */\n  const applyAdvancedFilters = useCallback(() => {\n    if (!selectedBucket) return;\n    \n    setLoading(true);\n    \n    try {\n      // If we're searching, apply filters to search results\n      // Otherwise apply to the current objects list\n      const itemsToFilter = isSearching ? searchResults : objects;\n      const filteredResults = applyFilters(itemsToFilter, activeFilters);\n      \n      // If searching, update search results\n      // Otherwise, update the objects list directly\n      if (isSearching) {\n        setSearchResults(filteredResults);\n      } else {\n        // Set a flag to indicate we're filtering\n        setIsSearching(true);\n        setSearchResults(filteredResults);\n      }\n    } catch (err) {\n      console.error('Error applying filters:', err);\n      setError('An error occurred while applying filters');\n    } finally {\n      setLoading(false);\n      setFilterDialogOpen(false);\n    }\n  }, [activeFilters, isSearching, objects, searchResults, selectedBucket]);\n  \n  /**\n   * Clear all active filters\n   */\n  const clearFilters = useCallback(() => {\n    setActiveFilters({\n      fileTypes: [],\n      sizeRange: [0, Number.MAX_SAFE_INTEGER],\n      dateRange: {\n        start: null,\n        end: null\n      },\n      modifiedBy: '',\n      customPrefix: ''\n    });\n    \n    // If we were filtering but not searching, reload objects\n    if (isSearching && !searchTerm) {\n      setIsSearching(false);\n      if (selectedBucket) {\n        loadObjects(selectedBucket, currentPrefix);\n      }\n    } \n    // If we were both searching and filtering, apply just the search\n    else if (isSearching && searchTerm) {\n      searchObjects();\n    }\n  }, [currentPrefix, isSearching, loadObjects, searchObjects, searchTerm, selectedBucket]);\n  \n  /**\n   * Toggle selection mode for batch operations\n   */\n  const toggleSelectionMode = useCallback(() => {\n    setSelectionMode(prev => !prev);\n    \n    // Clear selections when toggling off\n    if (selectionMode) {\n      setSelectedItems([]);\n    }\n  }, [selectionMode]);\n  \n  /**\n   * Toggle selection of an item\n   */\n  const toggleItemSelection = useCallback((e, item) => {\n    e.stopPropagation(); // Prevent navigating when clicking the checkbox\n    \n    setSelectedItems(prev => {\n      // Check if item is already selected\n      const isSelected = prev.some(selected => \n        selected.key === item.key && selected.type === item.type\n      );\n      \n      if (isSelected) {\n        // Remove item from selection\n        return prev.filter(selected => \n          !(selected.key === item.key && selected.type === item.type)\n        );\n      } else {\n        // Add item to selection\n        return [...prev, item];\n      }\n    });\n  }, []);\n  \n  /**\n   * Check if an item is selected\n   */\n  const isItemSelected = useCallback((item) => {\n    return selectedItems.some(selected => \n      selected.key === item.key && selected.type === item.type\n    );\n  }, [selectedItems]);\n  \n  /**\n   * Select or deselect all items\n   */\n  const selectAllItems = useCallback(() => {\n    if (selectedItems.length === (isSearching ? searchResults.length : objects.length)) {\n      // If all are selected, deselect all\n      setSelectedItems([]);\n    } else {\n      // Otherwise, select all\n      setSelectedItems(isSearching ? searchResults : objects);\n    }\n  }, [isSearching, objects, searchResults, selectedItems]);\n  \n  /**\n   * Execute batch action on selected items\n   */\n  const executeBatchAction = useCallback(async () => {\n    if (!selectedItems.length || !batchAction) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      const result = await performBatchOperation(batchAction, selectedItems);\n      \n      if (result.success) {\n        // Set success message\n        // For delete, remove items from the list\n        if (batchAction === 'delete') {\n          const itemKeys = selectedItems.map(item => item.key);\n          \n          // Update objects or search results accordingly\n          if (isSearching) {\n            setSearchResults(prev => \n              prev.filter(item => !itemKeys.includes(item.key))\n            );\n          } else {\n            setObjects(prev => \n              prev.filter(item => !itemKeys.includes(item.key))\n            );\n          }\n        }\n        \n        // Reset selection\n        setSelectedItems([]);\n        setSelectionMode(false);\n      } else {\n        setError(result.message || 'Batch operation failed');\n      }\n    } catch (err) {\n      console.error('Error executing batch action:', err);\n      setError('An error occurred during batch operation');\n    } finally {\n      setLoading(false);\n      setBatchActionDialogOpen(false);\n    }\n  }, [batchAction, isSearching, selectedItems]);\n  \n  /**\n   * Create a new bucket\n   */\n  const createBucket = useCallback(async () => {\n    if (!newBucketName) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Creating bucket: ${newBucketName}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        if (newBucketName.includes(' ')) {\n          resolve({\n            status: 'error',\n            message: 'Bucket name cannot contain spaces'\n          });\n        } else if (buckets.some(b => b.name === newBucketName)) {\n          resolve({\n            status: 'error',\n            message: 'Bucket already exists'\n          });\n        } else {\n          resolve({\n            status: 'success',\n            bucket: {\n              name: newBucketName,\n              creationDate: new Date().toISOString()\n            }\n          });\n        }\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Add new bucket to list\n        setBuckets(prevBuckets => [...prevBuckets, response.bucket]);\n        \n        // Close dialog\n        setNewBucketDialogOpen(false);\n        setNewBucketName('');\n        \n        // Select the new bucket\n        onSelectBucket(response.bucket.name);\n        loadObjects(response.bucket.name, '');\n      } else {\n        setError(response.message || 'Failed to create bucket');\n      }\n    } catch (err) {\n      console.error('Error creating bucket:', err);\n      setError(err.message || 'An error occurred while creating bucket');\n    } finally {\n      setLoading(false);\n    }\n  }, [buckets, loadObjects, newBucketName, onSelectBucket]);\n  \n  /**\n   * Create a new folder\n   */\n  const createFolder = useCallback(async () => {\n    if (!newFolderName || !selectedBucket) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Construct the full key\n      const fullKey = currentPrefix ? `${currentPrefix}${newFolderName}/` : `${newFolderName}/`;\n      \n      // Simulate API call\n      console.log(`Creating folder: ${fullKey} in bucket: ${selectedBucket}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        resolve({\n          status: 'success',\n          folder: {\n            key: fullKey,\n            size: 0,\n            lastModified: new Date().toISOString(),\n            type: 'folder'\n          }\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Add new folder to list\n        setObjects(prevObjects => [...prevObjects, response.folder]);\n        \n        // Close dialog\n        setNewFolderDialogOpen(false);\n        setNewFolderName('');\n      } else {\n        setError(response.message || 'Failed to create folder');\n      }\n    } catch (err) {\n      console.error('Error creating folder:', err);\n      setError(err.message || 'An error occurred while creating folder');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPrefix, newFolderName, selectedBucket]);\n  \n  /**\n   * Delete a bucket, folder, or object\n   */\n  const deleteItem = useCallback(async () => {\n    if (!itemToDelete) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log(`Deleting ${itemToDelete.type}: ${itemToDelete.name || itemToDelete.key}`);\n      \n      // Simulate API call\n      const response = await new Promise(resolve => setTimeout(() => {\n        resolve({\n          status: 'success'\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        if (itemToDelete.type === 'bucket') {\n          // Remove bucket from list\n          setBuckets(prevBuckets => \n            prevBuckets.filter(b => b.name !== itemToDelete.name)\n          );\n          \n          // If this was the selected bucket, clear selection\n          if (selectedBucket === itemToDelete.name) {\n            onSelectBucket('');\n            setObjects([]);\n            setCurrentPrefix('');\n          }\n        } else {\n          // Remove object or folder from list\n          setObjects(prevObjects => \n            prevObjects.filter(o => o.key !== itemToDelete.key)\n          );\n        }\n        \n        // Close dialog\n        setConfirmDeleteDialogOpen(false);\n        setItemToDelete(null);\n      } else {\n        setError(response.message || 'Failed to delete item');\n      }\n    } catch (err) {\n      console.error('Error deleting item:', err);\n      setError(err.message || 'An error occurred while deleting item');\n    } finally {\n      setLoading(false);\n    }\n  }, [itemToDelete, onSelectBucket, selectedBucket]);\n  \n  /**\n   * Process file selection for upload\n   */\n  const processFileSelection = useCallback((files) => {\n    if (!files || files.length === 0) return;\n    \n    // If it's a FileList (from input), convert to array\n    const fileArray = Array.from(files);\n    \n    if (fileArray.length === 1) {\n      // Single file selection - use the existing workflow\n      setSelectedFile(fileArray[0]);\n      setFilesToUpload([]);\n    } else {\n      // Multiple file selection\n      setFilesToUpload(fileArray);\n      setSelectedFile(fileArray[0]); // Show the first file in preview\n      setCurrentUploadIndex(0);\n    }\n  }, []);\n  \n  /**\n   * Upload a single file\n   */\n  const uploadSingleFile = useCallback(async (file) => {\n    if (!file || !selectedBucket) return false;\n    \n    try {\n      // Construct the full key\n      const fullKey = currentPrefix ? `${currentPrefix}${file.name}` : file.name;\n      \n      console.log(`Uploading file: ${fullKey} to bucket: ${selectedBucket}`);\n      \n      // Simulate upload progress with more realistic behavior using safe interval helper\n      let progress = 0;\n      const uploadProgressInterval = setSafeInterval(() => {\n        // Realistic upload progress simulation\n        // First 80% is linear, last 20% is slower to simulate server processing\n        if (progress < 80) {\n          progress += Math.random() * 5; // Random increment for realism\n        } else if (progress < 95) {\n          progress += Math.random() * 0.5; // Slower near the end\n        } else if (progress < 99) {\n          progress += 0.1; // Very slow for the last bit\n        }\n        \n        if (progress >= 100) {\n          // Find and remove from tracked intervals\n          const index = intervalIdsRef.current.indexOf(uploadProgressInterval);\n          if (index !== -1) {\n            intervalIdsRef.current.splice(index, 1);\n          }\n          clearInterval(uploadProgressInterval);\n          progress = 100;\n        }\n        \n        setUploadProgress(Math.min(Math.floor(progress), 100));\n      }, 200);\n      \n      // Simulate API response with file validation and upload behavior\n      const response = await new Promise(resolve => {\n        // Calculate simulated upload time based on file size for realism\n        // Larger files take longer to upload\n        const baseUploadTime = 1000; // Minimum 1 second\n        const sizeBasedTime = Math.min(file.size / 10000, 5000); // Up to 5 seconds more for large files\n        \n        // Use safe timeout helper to prevent memory leaks\n        setSafeTimeout(() => {\n          // Find and remove from tracked intervals\n          const index = intervalIdsRef.current.indexOf(uploadProgressInterval);\n          if (index !== -1) {\n            intervalIdsRef.current.splice(index, 1);\n          }\n          clearInterval(uploadProgressInterval);\n          setUploadProgress(100);\n          \n          // In a real implementation, we would check for errors\n          // like size limits, permission issues, etc.\n          resolve({\n            status: 'success',\n            object: {\n              key: fullKey,\n              size: file.size,\n              lastModified: new Date().toISOString(),\n              contentType: file.type || 'application/octet-stream',\n              type: 'file'\n            }\n          });\n        }, baseUploadTime + sizeBasedTime);\n      });\n      \n      if (response.status === 'success') {\n        // Add new file to list if we're in the current prefix\n        setObjects(prevObjects => [...prevObjects, response.object]);\n        return true;\n      } else {\n        setError(response.message || `Failed to upload file: ${file.name}`);\n        return false;\n      }\n    } catch (err) {\n      console.error(`Error uploading file ${file.name}:`, err);\n      setError(err.message || `An error occurred while uploading file: ${file.name}`);\n      return false;\n    }\n  }, [currentPrefix, selectedBucket]);\n  \n  /**\n   * Upload files (single file or batch upload)\n   */\n  const uploadFile = useCallback(async () => {\n    if (!selectedBucket) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (filesToUpload.length > 0) {\n        // Batch upload workflow\n        let successCount = 0;\n        \n        // Process each file in sequence\n        for (let i = 0; i < filesToUpload.length; i++) {\n          setCurrentUploadIndex(i);\n          setSelectedFile(filesToUpload[i]); // Update preview to current file\n          setUploadProgress(0);\n          \n          const success = await uploadSingleFile(filesToUpload[i]);\n          if (success) {\n            successCount++;\n          }\n          \n          // Short pause between files\n          if (i < filesToUpload.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, 500));\n          }\n        }\n        \n        // Show completion message\n        console.log(`Uploaded ${successCount} of ${filesToUpload.length} files successfully`);\n        \n        // Close dialog after batch upload\n        if (successCount > 0) {\n          setTimeout(() => {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setFilesToUpload([]);\n            setUploadProgress(0);\n          }, 1500);\n        }\n        \n      } else if (selectedFile) {\n        // Single file upload workflow\n        const success = await uploadSingleFile(selectedFile);\n        \n        // Close dialog after successful upload\n        if (success) {\n          setTimeout(() => {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setUploadProgress(0);\n          }, 1500);\n        }\n      }\n    } catch (err) {\n      console.error('Error in upload process:', err);\n      setError(err.message || 'An unexpected error occurred during upload');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedBucket, selectedFile, filesToUpload, uploadSingleFile]);\n  \n  /**\n   * Download an object\n   */\n  const downloadObject = useCallback((item) => {\n    if (!item || !selectedBucket) return;\n    \n    console.log(`Downloading object: ${item.key} from bucket: ${selectedBucket}`);\n    \n    // In a real implementation, this would create a download link\n    // For now, we'll just simulate it\n    alert(`Simulated download of file: ${item.key}`);\n  }, [selectedBucket]);\n  \n  /**\n   * View/preview an object\n   */\n  const viewObject = useCallback((item) => {\n    if (!item || !selectedBucket) return;\n    \n    console.log(`Viewing object: ${item.key} from bucket: ${selectedBucket}`);\n    \n    // In a real implementation, this would create a URL for the object content\n    // For now, we'll use a placeholder\n    setFileViewUrl(`https://example.com/preview/${selectedBucket}/${item.key}`);\n    \n    // Set the file type based on contentType\n    const contentType = item.contentType || '';\n    setFileViewType(contentType);\n    \n    // Set selected item for additional metadata in preview\n    setSelectedItem(item);\n    \n    // Open the viewer\n    setFileViewerOpen(true);\n  }, [selectedBucket]);\n  \n  /**\n   * Handle context menu opening\n   */\n  const handleContextMenu = useCallback((event, item) => {\n    event.preventDefault();\n    \n    // Skip if in read-only mode\n    if (readOnly) return;\n    \n    setContextMenuPos({ x: event.clientX, y: event.clientY });\n    setSelectedItem(item);\n  }, [readOnly]);\n  \n  /**\n   * Handle context menu closing\n   */\n  const handleContextMenuClose = useCallback(() => {\n    setContextMenuPos(null);\n    setSelectedItem(null);\n  }, []);\n  \n  // Load buckets on mount\n  useEffect(() => {\n    if (config) {\n      loadBuckets();\n    }\n  }, [config, loadBuckets]);\n  \n  // File content render functions with enhanced preview\n  const renderFilePreview = (url, contentType) => {\n    // Import FilePreview component for advanced file previewing\n    const FilePreview = require('../../common/FilePreview').default;\n    \n    // Generate a mock file object with the selected item's data\n    const fileObj = selectedItem ? {\n      name: getDisplayName(selectedItem.key, selectedItem.type),\n      type: contentType,\n      size: selectedItem.size || 0,\n      lastModified: selectedItem.lastModified\n    } : null;\n    \n    // Generate simulated content for text files\n    const generateSimulatedContent = () => {\n      if (contentType === 'text/plain') {\n        return `This is a simulated preview of a plain text file.\\n\\nFilename: ${selectedItem.key}\\nSize: ${formatFileSize(selectedItem.size || 0)}\\nLast Modified: ${formatDate(selectedItem.lastModified)}\\n\\nIn a production environment, this would fetch the actual file content from the S3 bucket.`;\n      }\n      \n      if (contentType === 'text/csv') {\n        return `id,name,email,department\\n1,\"John Smith\",john.smith@example.com,Marketing\\n2,\"Jane Doe\",jane.doe@example.com,Engineering\\n3,\"Robert Johnson\",robert.johnson@example.com,Finance\\n4,\"Sarah Williams\",sarah.williams@example.com,Human Resources\\n5,\"Michael Brown\",michael.brown@example.com,Sales`;\n      }\n      \n      if (contentType === 'application/json') {\n        return JSON.stringify({\n          \"id\": 12345,\n          \"name\": \"Sample JSON Data\",\n          \"items\": [\n            { \"id\": 1, \"value\": \"First item\" },\n            { \"id\": 2, \"value\": \"Second item\" },\n            { \"id\": 3, \"value\": \"Third item\" }\n          ],\n          \"metadata\": {\n            \"created\": new Date().toISOString(),\n            \"version\": \"1.0.0\",\n            \"source\": \"S3 Object\"\n          }\n        }, null, 2);\n      }\n      \n      if (contentType === 'application/xml' || contentType === 'text/xml') {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n  <item id=\"1\">\\n    <n>First Item</n>\\n    <value>100</value>\\n  </item>\\n  <item id=\"2\">\\n    <n>Second Item</n>\\n    <value>200</value>\\n  </item>\\n  <metadata>\\n    <created>${new Date().toISOString()}</created>\\n    <source>S3 Object</source>\\n  </metadata>\\n</root>`;\n      }\n      \n      // Default text content\n      return `This is a simulated preview of content type: ${contentType}\\n\\nIn a production environment, this would display the actual file content.`;\n    };\n    \n    // Generate content for text-based files\n    const content = (contentType === 'text/plain' || \n                     contentType === 'text/csv' || \n                     contentType === 'application/json' || \n                     contentType === 'application/xml' ||\n                     contentType === 'text/xml') \n      ? generateSimulatedContent() \n      : null;\n    \n    return (\n      <FilePreview\n        file={fileObj}\n        url={url}\n        content={content}\n        mimeType={contentType}\n        filename={fileObj?.name}\n        onDownload={() => downloadObject(selectedItem)}\n        maxHeight=\"600px\"\n        fullWidth={true}\n      />\n    );\n  };\n  \n  // Get color for file icon based on content type\n  const getIconColorForFileType = (contentType) => {\n    if (contentType.startsWith('image/')) {\n      return 'success.main'; // Green for images\n    } else if (contentType.startsWith('text/')) {\n      return 'info.main'; // Blue for text files\n    } else if (contentType.includes('spreadsheet') || contentType.includes('excel')) {\n      return 'success.dark'; // Dark green for spreadsheets\n    } else if (contentType.includes('pdf')) {\n      return 'error.main'; // Red for PDFs\n    } else if (contentType.includes('zip') || contentType.includes('compressed')) {\n      return 'warning.dark'; // Dark yellow for archives\n    } else if (contentType.includes('json') || contentType.includes('xml')) {\n      return 'secondary.main'; // Purple for data files\n    } else {\n      return 'info.main'; // Default blue\n    }\n  };\n\n  // Item name display function (truncates long paths)\n  const getDisplayName = (key, type) => {\n    if (type === 'bucket') {\n      return key;\n    } else if (type === 'folder') {\n      // For folders, extract the last folder name\n      const parts = key.split('/');\n      return parts[parts.length - 2] || key; // Account for trailing slash\n    } else {\n      // For files, extract filename from potentially nested path\n      const parts = key.split('/');\n      return parts[parts.length - 1] || key;\n    }\n  };\n  \n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n      {/* Top bar with actions */}\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1, overflow: 'hidden' }}>\n          {/* Breadcrumb navigation */}\n          <Box sx={{ display: 'flex', alignItems: 'center', flexWrap: 'nowrap', overflow: 'hidden' }}>\n            <Typography \n              variant=\"h6\" \n              sx={{ \n                flexShrink: 0,\n                whiteSpace: 'nowrap'\n              }}\n            >\n              {selectedBucket ? (\n                <>\n                  <Tooltip title=\"Back to buckets\">\n                    <Box \n                      component=\"span\" \n                      onClick={() => onSelectBucket('')}\n                      sx={{ \n                        cursor: 'pointer', \n                        color: 'primary.main',\n                        '&:hover': { textDecoration: 'underline' } \n                      }}\n                    >\n                      Buckets\n                    </Box>\n                  </Tooltip>\n                  {' / '}\n                  <Tooltip title={`Bucket: ${selectedBucket}`}>\n                    <strong>{selectedBucket}</strong>\n                  </Tooltip>\n                </>\n              ) : (\n                'AWS S3 Buckets'\n              )}\n            </Typography>\n            \n            {/* Path breadcrumb navigation */}\n            {selectedBucket && currentPrefix && (\n              <Box \n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  ml: 1,\n                  overflow: 'hidden',\n                  flexWrap: 'nowrap'\n                }}\n              >\n                <Typography \n                  component=\"span\" \n                  variant=\"body2\" \n                  sx={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    color: 'text.secondary',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  }}\n                >\n                  {' / '}\n                  {currentPrefix.split('/').filter(Boolean).map((segment, index, array) => {\n                    // Create a path up to this segment\n                    const pathUpToSegment = array.slice(0, index + 1).join('/') + '/';\n                    \n                    return (\n                      <React.Fragment key={index}>\n                        {index > 0 && ' / '}\n                        <Tooltip title={`Navigate to ${segment}`}>\n                          <Box \n                            component=\"span\" \n                            onClick={() => loadObjects(selectedBucket, pathUpToSegment)}\n                            sx={{ \n                              cursor: 'pointer', \n                              color: 'primary.main',\n                              flexShrink: 0,\n                              '&:hover': { textDecoration: 'underline' } \n                            }}\n                          >\n                            {segment}\n                          </Box>\n                        </Tooltip>\n                      </React.Fragment>\n                    );\n                  })}\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Box>\n        \n        <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>\n          {selectedBucket && (\n            <Tooltip title=\"Go up\">\n              <IconButton \n                onClick={navigateUp} \n                disabled={loading}\n                size=\"small\"\n              >\n                <UpIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n          \n          <Tooltip title=\"Refresh\">\n            <IconButton \n              onClick={() => selectedBucket ? loadObjects(selectedBucket, currentPrefix) : loadBuckets()} \n              disabled={loading}\n              size=\"small\"\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          \n          {!readOnly && (\n            <>\n              {selectedBucket ? (\n                <Tooltip title=\"Upload File\">\n                  <IconButton \n                    onClick={() => setFileUploadDialogOpen(true)} \n                    disabled={loading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <UploadIcon />\n                  </IconButton>\n                </Tooltip>\n              ) : (\n                <Tooltip title=\"New Bucket\">\n                  <IconButton \n                    onClick={() => setNewBucketDialogOpen(true)} \n                    disabled={loading || bucketLoading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n              \n              {selectedBucket && (\n                <Tooltip title=\"New Folder\">\n                  <IconButton \n                    onClick={() => setNewFolderDialogOpen(true)} \n                    disabled={loading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <CreateFolderIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n      \n      {/* Search and Filter bar */}\n      {selectedBucket && (\n        <Box sx={{ mb: 2 }}>\n          {/* Search and Filter Controls */}\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n            <TextField\n              fullWidth\n              placeholder=\"Search objects...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              disabled={loading}\n              size=\"small\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n                endAdornment: isSearching && !activeFilters.fileTypes.length && (\n                  <InputAdornment position=\"end\">\n                    <Button \n                      size=\"small\" \n                      onClick={clearSearch}\n                      disabled={loading}\n                    >\n                      Clear\n                    </Button>\n                  </InputAdornment>\n                )\n              }}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter' && searchTerm) {\n                  searchObjects();\n                }\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              onClick={searchObjects}\n              disabled={loading || !searchTerm}\n              sx={{ ml: 1 }}\n            >\n              Search\n            </Button>\n            <Tooltip title=\"Advanced Filters\">\n              <IconButton \n                color={activeFilters.fileTypes.length > 0 ? \"primary\" : \"default\"}\n                onClick={() => {\n                  setFilterTabValue(0);\n                  setFilterDialogOpen(true);\n                }}\n                sx={{ ml: 1 }}\n              >\n                <FilterAltIcon />\n              </IconButton>\n            </Tooltip>\n            \n            {!readOnly && (\n              <Tooltip title={selectionMode ? \"Exit Selection Mode\" : \"Selection Mode\"}>\n                <IconButton \n                  color={selectionMode ? \"primary\" : \"default\"}\n                  onClick={toggleSelectionMode}\n                  sx={{ ml: 1 }}\n                >\n                  <SelectAllIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n          </Box>\n          \n          {/* Active Filters Display */}\n          {(activeFilters.fileTypes.length > 0 || \n            activeFilters.dateRange.start || \n            activeFilters.sizeRange[0] > 0 || \n            activeFilters.sizeRange[1] < Number.MAX_SAFE_INTEGER ||\n            activeFilters.customPrefix) && (\n            <Box sx={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap', gap: 1, mb: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Filters:\n              </Typography>\n              \n              {activeFilters.fileTypes.map(fileType => (\n                <Chip\n                  key={fileType}\n                  label={`Type: ${FILE_TYPE_OPTIONS.find(opt => opt.value === fileType)?.label || fileType}`}\n                  size=\"small\"\n                  onDelete={() => {\n                    setActiveFilters(prev => ({\n                      ...prev,\n                      fileTypes: prev.fileTypes.filter(t => t !== fileType)\n                    }));\n                    // Re-apply filters\n                    setTimeout(applyAdvancedFilters, 0);\n                  }}\n                />\n              ))}\n              \n              {activeFilters.sizeRange[0] > 0 && (\n                <Chip\n                  label={`Min size: ${formatFileSize(activeFilters.sizeRange[0])}`}\n                  size=\"small\"\n                  onDelete={() => {\n                    setActiveFilters(prev => ({\n                      ...prev,\n                      sizeRange: [0, prev.sizeRange[1]]\n                    }));\n                    // Re-apply filters\n                    setTimeout(applyAdvancedFilters, 0);\n                  }}\n                />\n              )}\n              \n              {activeFilters.sizeRange[1] < Number.MAX_SAFE_INTEGER && (\n                <Chip\n                  label={`Max size: ${formatFileSize(activeFilters.sizeRange[1])}`}\n                  size=\"small\"\n                  onDelete={() => {\n                    setActiveFilters(prev => ({\n                      ...prev,\n                      sizeRange: [prev.sizeRange[0], Number.MAX_SAFE_INTEGER]\n                    }));\n                    // Re-apply filters\n                    setTimeout(applyAdvancedFilters, 0);\n                  }}\n                />\n              )}\n              \n              {activeFilters.dateRange.start && activeFilters.dateRange.end && (\n                <Chip\n                  label={`Date: ${formatDate(activeFilters.dateRange.start)} - ${formatDate(activeFilters.dateRange.end)}`}\n                  size=\"small\"\n                  onDelete={() => {\n                    setActiveFilters(prev => ({\n                      ...prev,\n                      dateRange: { start: null, end: null }\n                    }));\n                    // Re-apply filters\n                    setTimeout(applyAdvancedFilters, 0);\n                  }}\n                />\n              )}\n              \n              {activeFilters.customPrefix && (\n                <Chip\n                  label={`Prefix: ${activeFilters.customPrefix}`}\n                  size=\"small\"\n                  onDelete={() => {\n                    setActiveFilters(prev => ({\n                      ...prev,\n                      customPrefix: ''\n                    }));\n                    // Re-apply filters\n                    setTimeout(applyAdvancedFilters, 0);\n                  }}\n                />\n              )}\n              \n              <Button\n                size=\"small\"\n                variant=\"outlined\"\n                startIcon={<ClearIcon fontSize=\"small\" />}\n                onClick={clearFilters}\n              >\n                Clear All\n              </Button>\n            </Box>\n          )}\n          \n          {/* Batch Operations Bar */}\n          {selectionMode && selectedItems.length > 0 && (\n            <Paper \n              variant=\"outlined\"\n              sx={{ \n                display: 'flex', \n                justifyContent: 'space-between', \n                alignItems: 'center',\n                p: 1,\n                mt: 1\n              }}\n            >\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <Typography variant=\"body2\" fontWeight=\"bold\" color=\"primary.main\">\n                  {selectedItems.length} item{selectedItems.length !== 1 ? 's' : ''} selected\n                </Typography>\n                <Tooltip title=\"Clear selection\">\n                  <IconButton \n                    size=\"small\" \n                    onClick={() => setSelectedItems([])}\n                    sx={{ ml: 1 }}\n                  >\n                    <ClearIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </Box>\n              \n              <Box>\n                <Tooltip title=\"Download Selected\">\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setBatchAction('download');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <DownloadIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Delete Selected\">\n                  <IconButton \n                    size=\"small\"\n                    color=\"error\"\n                    onClick={() => {\n                      setBatchAction('delete');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <DeleteIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Copy Selected\">\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setBatchAction('copy');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <CopyIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Move Selected\">\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setBatchAction('move');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <MoveIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Make Public\">\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setBatchAction('makePublic');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <PublicIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Tooltip title=\"Make Private\">\n                  <IconButton \n                    size=\"small\"\n                    onClick={() => {\n                      setBatchAction('makePrivate');\n                      setBatchActionDialogOpen(true);\n                    }}\n                  >\n                    <LockIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n                \n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={selectAllItems}\n                  sx={{ ml: 1 }}\n                >\n                  {selectedItems.length === (isSearching ? searchResults.length : objects.length) ? \n                    'Deselect All' : 'Select All'}\n                </Button>\n              </Box>\n            </Paper>\n          )}\n        </Box>\n      )}\n      \n      {/* Error message */}\n      {error && (\n        <Typography color=\"error\" sx={{ mb: 2 }}>\n          Error: {error}\n        </Typography>\n      )}\n      \n      {/* Content area */}\n      {(bucketLoading || loading) ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : selectedBucket ? (\n        // Object list\n        <TableContainer component={Paper} sx={{ flexGrow: 1, overflow: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {selectionMode && <TableCell padding=\"checkbox\" width=\"50px\"></TableCell>}\n                <TableCell>Name</TableCell>\n                <TableCell align=\"right\">Size</TableCell>\n                <TableCell align=\"right\">Last Modified</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(isSearching ? searchResults : objects).length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={selectionMode ? 5 : 4} align=\"center\">\n                    {isSearching ? 'No search results' : 'No objects in this location'}\n                  </TableCell>\n                </TableRow>\n              ) : (isSearching ? searchResults : objects).map((item) => (\n                <TableRow \n                  key={item.key}\n                  hover\n                  onClick={(e) => selectionMode ? toggleItemSelection(e, item) : navigateTo(item)}\n                  sx={{ \n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: 'action.hover',\n                    },\n                    ...(selectionMode && isItemSelected(item) ? {\n                      backgroundColor: 'action.selected',\n                      '&:hover': {\n                        backgroundColor: 'action.selectedHover',\n                      },\n                    } : {})\n                  }}\n                  onContextMenu={(e) => handleContextMenu(e, item)}\n                >\n                  {selectionMode && (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected(item)}\n                        onChange={(e) => toggleItemSelection(e, item)}\n                        onClick={(e) => e.stopPropagation()}\n                        color=\"primary\"\n                        size=\"small\"\n                      />\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <ListItemIcon sx={{ minWidth: 36 }}>\n                        {item.type === 'folder' ? (\n                          <FolderIcon color=\"primary\" />\n                        ) : (\n                          <FileIcon \n                            sx={{ \n                              color: getIconColorForFileType(item.contentType || '')\n                            }} \n                          />\n                        )}\n                      </ListItemIcon>\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {getDisplayName(item.key, item.type)}\n                        </Typography>\n                        {item.type === 'file' && item.contentType && (\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {item.contentType}\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {item.type === 'folder' ? (\n                      '-'\n                    ) : (\n                      <Typography \n                        variant=\"body2\" \n                        sx={{ \n                          fontFamily: 'monospace', \n                          fontWeight: 500,\n                          color: 'text.secondary' \n                        }}\n                      >\n                        {formatFileSize(item.size || 0)}\n                      </Typography>\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {formatDate(item.lastModified)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                      {item.type === 'file' && (\n                        <>\n                          <Tooltip title=\"View\">\n                            <IconButton \n                              size=\"small\" \n                              onClick={(e) => {\n                                e.stopPropagation();\n                                viewObject(item);\n                              }}\n                            >\n                              <ViewIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Download\">\n                            <IconButton \n                              size=\"small\" \n                              onClick={(e) => {\n                                e.stopPropagation();\n                                downloadObject(item);\n                              }}\n                            >\n                              <DownloadIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Select this file\">\n                            <IconButton \n                              size=\"small\" \n                              color=\"primary\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                onSelectObject({\n                                  bucketName: selectedBucket,\n                                  prefix: currentPrefix,\n                                  key: item.key,\n                                  size: item.size,\n                                  lastModified: item.lastModified,\n                                  contentType: item.contentType\n                                });\n                              }}\n                            >\n                              <CheckCircleIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        </>\n                      )}\n                      {!readOnly && (\n                        <Tooltip title=\"More actions\">\n                          <IconButton \n                            size=\"small\" \n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleContextMenu(e, item);\n                            }}\n                          >\n                            <MoreVertIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        // Bucket list\n        <TableContainer component={Paper} sx={{ flexGrow: 1, overflow: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                {selectionMode && <TableCell padding=\"checkbox\" width=\"50px\"></TableCell>}\n                <TableCell>Bucket Name</TableCell>\n                <TableCell align=\"right\">Creation Date</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {buckets.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={selectionMode ? 4 : 3} align=\"center\">\n                    No buckets found\n                  </TableCell>\n                </TableRow>\n              ) : buckets.map((bucket) => (\n                <TableRow \n                  key={bucket.name}\n                  hover\n                  onClick={(e) => selectionMode \n                    ? toggleItemSelection(e, { ...bucket, type: 'bucket' }) \n                    : loadObjects(bucket.name, '')}\n                  sx={{ \n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: 'action.hover',\n                    },\n                    ...(selectionMode && isItemSelected({ ...bucket, type: 'bucket' }) ? {\n                      backgroundColor: 'action.selected',\n                      '&:hover': {\n                        backgroundColor: 'action.selectedHover',\n                      },\n                    } : {})\n                  }}\n                  onContextMenu={(e) => handleContextMenu(e, { ...bucket, type: 'bucket' })}\n                >\n                  {selectionMode && (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected({ ...bucket, type: 'bucket' })}\n                        onChange={(e) => toggleItemSelection(e, { ...bucket, type: 'bucket' })}\n                        onClick={(e) => e.stopPropagation()}\n                        color=\"primary\"\n                        size=\"small\"\n                      />\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <ListItemIcon sx={{ minWidth: 36 }}>\n                        <BucketIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        {bucket.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {formatDate(bucket.creationDate)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                      <Tooltip title=\"Browse bucket\">\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            loadObjects(bucket.name, '');\n                          }}\n                        >\n                          <FolderOpenIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Select bucket\">\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            onSelectBucket(bucket.name);\n                          }}\n                        >\n                          <CheckCircleIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      {!readOnly && (\n                        <Tooltip title=\"More actions\">\n                          <IconButton \n                            size=\"small\" \n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleContextMenu(e, { ...bucket, type: 'bucket' });\n                            }}\n                          >\n                            <MoreVertIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      \n      {/* Context menu */}\n      <Menu\n        open={Boolean(contextMenuPos)}\n        onClose={handleContextMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextMenuPos\n            ? { top: contextMenuPos.y, left: contextMenuPos.x }\n            : undefined\n        }\n      >\n        {selectedItem && selectedItem.type === 'bucket' && (\n          <div>\n            <MenuItem onClick={() => {\n              loadObjects(selectedItem.name, '');\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <FolderOpenIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Browse bucket\n            </MenuItem>\n            <MenuItem \n              onClick={() => {\n                onSelectBucket(selectedItem.name);\n                handleContextMenuClose();\n              }}\n              divider\n            >\n              <ListItemIcon>\n                <CheckCircleIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Select bucket\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete bucket\n              </MenuItem>\n            )}\n          </div>\n        )}\n        \n        {selectedItem && selectedItem.type === 'folder' && (\n          <div>\n            <MenuItem onClick={() => {\n              navigateTo(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <FolderOpenIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Open folder\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete folder\n              </MenuItem>\n            )}\n          </div>\n        )}\n        \n        {selectedItem && selectedItem.type === 'file' && (\n          <div>\n            <MenuItem onClick={() => {\n              viewObject(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <ViewIcon fontSize=\"small\" />\n              </ListItemIcon>\n              View\n            </MenuItem>\n            <MenuItem onClick={() => {\n              downloadObject(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <DownloadIcon fontSize=\"small\" />\n              </ListItemIcon>\n              Download\n            </MenuItem>\n            <MenuItem \n              onClick={() => {\n                onSelectObject({\n                  bucketName: selectedBucket,\n                  prefix: currentPrefix,\n                  key: selectedItem.key,\n                  size: selectedItem.size,\n                  lastModified: selectedItem.lastModified,\n                  contentType: selectedItem.contentType\n                });\n                handleContextMenuClose();\n              }}\n              divider\n            >\n              <ListItemIcon>\n                <CheckCircleIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Select this file\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete\n              </MenuItem>\n            )}\n          </div>\n        )}\n      </Menu>\n      \n      {/* Filter Dialog */}\n      <Dialog\n        open={filterDialogOpen}\n        onClose={() => setFilterDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          <Box display=\"flex\" alignItems=\"center\">\n            <FilterAltIcon sx={{ mr: 1 }} />\n            <Typography variant=\"h6\">Advanced Filtering</Typography>\n          </Box>\n        </DialogTitle>\n        <DialogContent dividers>\n          <Tabs\n            value={filterTabValue}\n            onChange={(e, newValue) => setFilterTabValue(newValue)}\n            sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}\n          >\n            <Tab label=\"File Types\" />\n            <Tab label=\"Size\" />\n            <Tab label=\"Date\" />\n            <Tab label=\"Prefix\" />\n          </Tabs>\n          \n          {/* File Type Filter Section */}\n          <Box sx={{ p: 1, display: filterTabValue === 0 ? 'block' : 'none' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Filter by File Type\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n              Select file types to include in the results\n            </Typography>\n            \n            <FormGroup>\n              <Grid container spacing={2}>\n                {FILE_TYPE_OPTIONS.map(option => (\n                  <Grid item xs={12} sm={6} md={4} key={option.value}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={activeFilters.fileTypes.includes(option.value)}\n                          onChange={(e) => {\n                            const newFileTypes = e.target.checked\n                              ? [...activeFilters.fileTypes, option.value]\n                              : activeFilters.fileTypes.filter(t => t !== option.value);\n                            \n                            setActiveFilters({\n                              ...activeFilters,\n                              fileTypes: newFileTypes\n                            });\n                          }}\n                        />\n                      }\n                      label={\n                        <Box>\n                          <Typography variant=\"body2\">{option.label}</Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {option.description}\n                          </Typography>\n                        </Box>\n                      }\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            </FormGroup>\n            \n            {/* Size Filter Section */}\n            <Box sx={{ mt: 4, display: filterTabValue === 1 ? 'block' : 'none' }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Filter by Size\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Select a size range or use the slider\n              </Typography>\n              \n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Size Presets</InputLabel>\n                <Select\n                  value=\"\"\n                  onChange={(e) => {\n                    const preset = SIZE_PRESETS.find(p => p.label === e.target.value);\n                    if (preset) {\n                      setActiveFilters({\n                        ...activeFilters,\n                        sizeRange: preset.value\n                      });\n                    }\n                  }}\n                >\n                  <MenuItem value=\"\">Custom</MenuItem>\n                  {SIZE_PRESETS.map(preset => (\n                    <MenuItem value={preset.label} key={preset.label}>\n                      {preset.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              \n              <Box sx={{ px: 2 }}>\n                <Typography id=\"size-slider\" gutterBottom>\n                  Size Range: {formatFileSize(activeFilters.sizeRange[0])} - {formatFileSize(activeFilters.sizeRange[1])}\n                </Typography>\n                <Slider\n                  value={activeFilters.sizeRange}\n                  onChange={(e, newValue) => {\n                    setActiveFilters({\n                      ...activeFilters,\n                      sizeRange: newValue\n                    });\n                  }}\n                  valueLabelDisplay=\"auto\"\n                  valueLabelFormat={value => formatFileSize(value)}\n                  min={0}\n                  max={1024 * 1024 * 1024} // 1 GB\n                  step={1024}\n                  marks={[\n                    { value: 0, label: '0' },\n                    { value: 1024 * 1024, label: '1 MB' },\n                    { value: 1024 * 1024 * 100, label: '100 MB' },\n                    { value: 1024 * 1024 * 1024, label: '1 GB' }\n                  ]}\n                />\n              </Box>\n            </Box>\n            \n            {/* Date Filter Section */}\n            <Box sx={{ mt: 4, display: filterTabValue === 2 ? 'block' : 'none' }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Filter by Date\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Select a date range or choose a preset\n              </Typography>\n              \n              <FormControl fullWidth sx={{ mb: 2 }}>\n                <InputLabel>Date Presets</InputLabel>\n                <Select\n                  value=\"\"\n                  onChange={(e) => {\n                    const preset = DATE_PRESETS.find(p => p.label === e.target.value);\n                    if (preset && preset.value !== 'custom') {\n                      const end = new Date();\n                      const start = getDateDaysAgo(preset.value.days);\n                      \n                      setActiveFilters({\n                        ...activeFilters,\n                        dateRange: { start, end }\n                      });\n                    }\n                  }}\n                >\n                  <MenuItem value=\"\">Custom Range</MenuItem>\n                  {DATE_PRESETS.map(preset => (\n                    <MenuItem value={preset.label} key={preset.label}>\n                      {preset.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              \n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Start Date\"\n                      value={activeFilters.dateRange.start}\n                      onChange={(newValue) => {\n                        setActiveFilters({\n                          ...activeFilters,\n                          dateRange: {\n                            ...activeFilters.dateRange,\n                            start: newValue\n                          }\n                        });\n                      }}\n                      renderInput={(params) => <TextField {...params} fullWidth />}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"End Date\"\n                      value={activeFilters.dateRange.end}\n                      onChange={(newValue) => {\n                        setActiveFilters({\n                          ...activeFilters,\n                          dateRange: {\n                            ...activeFilters.dateRange,\n                            end: newValue\n                          }\n                        });\n                      }}\n                      renderInput={(params) => <TextField {...params} fullWidth />}\n                    />\n                  </LocalizationProvider>\n                </Grid>\n              </Grid>\n            </Box>\n            \n            {/* Prefix Filter Section */}\n            <Box sx={{ mt: 4, display: filterTabValue === 3 ? 'block' : 'none' }}>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Filter by Prefix\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Enter a custom prefix to filter items\n              </Typography>\n              \n              <TextField\n                fullWidth\n                label=\"Custom Prefix\"\n                value={activeFilters.customPrefix}\n                onChange={(e) => {\n                  setActiveFilters({\n                    ...activeFilters,\n                    customPrefix: e.target.value\n                  });\n                }}\n                placeholder=\"e.g. data/ or report-\"\n                helperText=\"Filter items by key prefix or substring\"\n              />\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button \n            startIcon={<ClearIcon />}\n            onClick={() => {\n              setActiveFilters({\n                fileTypes: [],\n                sizeRange: [0, Number.MAX_SAFE_INTEGER],\n                dateRange: {\n                  start: null,\n                  end: null\n                },\n                modifiedBy: '',\n                customPrefix: ''\n              });\n            }}\n          >\n            Clear All\n          </Button>\n          <Button onClick={() => setFilterDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\"\n            color=\"primary\" \n            onClick={() => {\n              setFilterDialogOpen(false);\n              // Apply filters function will be called when dialog is closed\n              // since we're already watching activeFilters in an effect\n            }}\n            startIcon={<FilterAltIcon />}\n          >\n            Apply Filters\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* New Bucket Dialog */}\n      <Dialog open={newBucketDialogOpen} onClose={() => setNewBucketDialogOpen(false)}>\n        <DialogTitle>Create New Bucket</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for the new bucket. Bucket names must be globally unique, lowercase letters, numbers, or hyphens.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"bucket-name\"\n            label=\"Bucket Name\"\n            type=\"text\"\n            fullWidth\n            value={newBucketName}\n            onChange={(e) => setNewBucketName(e.target.value)}\n            error={Boolean(error)}\n            helperText={error}\n            disabled={loading}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNewBucketDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={createBucket} \n            color=\"primary\" \n            disabled={loading || !newBucketName}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Batch Action Confirmation Dialog */}\n      <Dialog\n        open={batchActionDialogOpen}\n        onClose={() => setBatchActionDialogOpen(false)}\n      >\n        <DialogTitle>\n          {batchAction === 'delete' && 'Confirm Delete'}\n          {batchAction === 'download' && 'Confirm Download'}\n          {batchAction === 'copy' && 'Confirm Copy'}\n          {batchAction === 'move' && 'Confirm Move'}\n          {batchAction === 'makePublic' && 'Confirm Make Public'}\n          {batchAction === 'makePrivate' && 'Confirm Make Private'}\n        </DialogTitle>\n        <DialogContent>\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n            {batchAction === 'delete' && <DeleteIcon color=\"error\" sx={{ mr: 1 }} />}\n            {batchAction === 'download' && <DownloadIcon color=\"primary\" sx={{ mr: 1 }} />}\n            {batchAction === 'copy' && <CopyIcon color=\"primary\" sx={{ mr: 1 }} />}\n            {batchAction === 'move' && <MoveIcon color=\"primary\" sx={{ mr: 1 }} />}\n            {batchAction === 'makePublic' && <PublicIcon color=\"primary\" sx={{ mr: 1 }} />}\n            {batchAction === 'makePrivate' && <LockIcon color=\"primary\" sx={{ mr: 1 }} />}\n            \n            <Typography>\n              {batchAction === 'delete' && \n                `Are you sure you want to delete ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''}?`}\n              {batchAction === 'download' && \n                `Download ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''}?`}\n              {batchAction === 'copy' && \n                `Copy ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''}?`}\n              {batchAction === 'move' && \n                `Move ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''}?`}\n              {batchAction === 'makePublic' && \n                `Make ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''} public?`}\n              {batchAction === 'makePrivate' && \n                `Make ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''} private?`}\n            </Typography>\n          </Box>\n          \n          {selectedItems.length <= 5 ? (\n            <List dense>\n              {selectedItems.map((item, index) => (\n                <ListItem key={index}>\n                  <ListItemIcon>\n                    {item.type === 'folder' || item.type === 'directory' ? \n                      <FolderIcon fontSize=\"small\" color=\"primary\" /> : \n                      <FileIcon fontSize=\"small\" />}\n                  </ListItemIcon>\n                  <ListItemText \n                    primary={item.key.split('/').pop() || item.key} \n                    secondary={item.type === 'file' ? formatFileSize(item.size) : ''}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <Alert severity=\"info\">\n              {selectedItems.length} items selected. Proceeding will affect all selected items.\n            </Alert>\n          )}\n          \n          {(batchAction === 'copy' || batchAction === 'move') && (\n            <Box sx={{ mt: 2 }}>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Destination:\n              </Typography>\n              <FormControl fullWidth sx={{ mt: 1 }}>\n                <InputLabel>Destination Folder</InputLabel>\n                <Select\n                  value=\"\"\n                  onChange={() => {}}\n                >\n                  <MenuItem value=\"\">Root Directory</MenuItem>\n                  {objects\n                    .filter(item => item.type === 'folder' || item.type === 'directory')\n                    .map((folder, idx) => (\n                      <MenuItem key={idx} value={folder.key}>\n                        {folder.key}\n                      </MenuItem>\n                    ))\n                  }\n                </Select>\n              </FormControl>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setBatchActionDialogOpen(false)}>\n            Cancel\n          </Button>\n          <Button \n            variant=\"contained\"\n            color={batchAction === 'delete' ? 'error' : 'primary'}\n            onClick={executeBatchAction}\n            startIcon={\n              batchAction === 'delete' ? <DeleteIcon /> :\n              batchAction === 'download' ? <DownloadIcon /> :\n              batchAction === 'copy' ? <CopyIcon /> :\n              batchAction === 'move' ? <MoveIcon /> :\n              batchAction === 'makePublic' ? <PublicIcon /> :\n              batchAction === 'makePrivate' ? <LockIcon /> : null\n            }\n          >\n            {batchAction === 'delete' ? 'Delete' : \n             batchAction === 'download' ? 'Download' :\n             batchAction === 'copy' ? 'Copy' :\n             batchAction === 'move' ? 'Move' :\n             batchAction === 'makePublic' ? 'Make Public' :\n             batchAction === 'makePrivate' ? 'Make Private' : 'Confirm'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* New Folder Dialog */}\n      <Dialog open={newFolderDialogOpen} onClose={() => setNewFolderDialogOpen(false)}>\n        <DialogTitle>Create New Folder</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for the new folder.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"folder-name\"\n            label=\"Folder Name\"\n            type=\"text\"\n            fullWidth\n            value={newFolderName}\n            onChange={(e) => setNewFolderName(e.target.value)}\n            error={Boolean(error)}\n            helperText={error}\n            disabled={loading}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNewFolderDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={createFolder} \n            color=\"primary\" \n            disabled={loading || !newFolderName}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Confirm Delete Dialog */}\n      <Dialog open={confirmDeleteDialogOpen} onClose={() => setConfirmDeleteDialogOpen(false)}>\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete the {itemToDelete?.type === 'bucket' ? 'bucket' : itemToDelete?.type === 'folder' ? 'folder' : 'file'}:\n            <Box component=\"span\" sx={{ fontWeight: 'bold', display: 'block', mt: 1 }}>\n              {itemToDelete?.name || itemToDelete?.key}\n            </Box>\n            {itemToDelete?.type === 'bucket' && (\n              <Typography color=\"error\" sx={{ mt: 2 }}>\n                This will delete all objects in the bucket!\n              </Typography>\n            )}\n            {itemToDelete?.type === 'folder' && (\n              <Typography color=\"error\" sx={{ mt: 2 }}>\n                This will delete all contents of the folder!\n              </Typography>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setConfirmDeleteDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={deleteItem} \n            color=\"error\" \n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Delete'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Enhanced File Upload Dialog */}\n      <Dialog \n        open={fileUploadDialogOpen} \n        onClose={() => {\n          if (!loading) {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setUploadProgress(0);\n          }\n        }}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n            Upload Files to S3\n            <IconButton onClick={() => {\n              if (!loading) {\n                setFileUploadDialogOpen(false);\n                setSelectedFile(null);\n                setUploadProgress(0);\n              }\n            }}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Upload Location:\n          </Typography>\n          <Paper variant=\"outlined\" sx={{ p: 1.5, mb: 2, bgcolor: 'background.default' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <BucketIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography sx={{ fontWeight: 'medium' }}>\n                {selectedBucket}{currentPrefix ? `/${currentPrefix}` : ''}\n              </Typography>\n            </Box>\n          </Paper>\n          \n          {/* Enhanced File Drop Zone */}\n          <Box\n            sx={{\n              border: '2px dashed',\n              borderColor: 'divider',\n              borderRadius: 1,\n              p: 3,\n              mb: 3,\n              textAlign: 'center',\n              transition: 'all 0.2s ease',\n              '&:hover': {\n                borderColor: 'primary.main',\n                bgcolor: 'action.hover'\n              },\n              position: 'relative',\n            }}\n            onDragOver={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = theme => theme.palette.primary.main;\n              e.currentTarget.style.backgroundColor = theme => theme.palette.action.hover;\n            }}\n            onDragLeave={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = '';\n              e.currentTarget.style.backgroundColor = '';\n            }}\n            onDrop={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = '';\n              e.currentTarget.style.backgroundColor = '';\n              \n              if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                // Process all dropped files\n                processFileSelection(e.dataTransfer.files);\n              }\n            }}\n          >\n            <UploadIcon color=\"primary\" sx={{ fontSize: 40, mb: 2 }} />\n            <Typography variant=\"h6\" gutterBottom>\n              Drag & Drop Files Here\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n              or\n            </Typography>\n            <Button\n              variant=\"contained\"\n              component=\"label\"\n              startIcon={<UploadIcon />}\n            >\n              Browse Files\n              <input\n                type=\"file\"\n                hidden\n                multiple\n                onChange={(e) => {\n                  if (e.target.files && e.target.files.length > 0) {\n                    processFileSelection(e.target.files);\n                  }\n                }}\n              />\n            </Button>\n            <Typography variant=\"caption\" color=\"textSecondary\" sx={{ display: 'block', mt: 2 }}>\n              Supported file types: CSV, JSON, XML, PDF, Images, Text files\n            </Typography>\n          </Box>\n          \n          {/* File Preview & Validation Section */}\n          {selectedFile && (\n            <Box>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                File Preview\n              </Typography>\n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={12} md={6}>\n                    {/* Import the FileCard component for file preview */}\n                    {(() => {\n                      const FileCard = require('../../common/FileCard').default;\n                      \n                      // Generate metadata for the file\n                      const fileMetadata = generateFileMetadata(selectedFile);\n                      \n                      return (\n                        <FileCard\n                          file={selectedFile}\n                          showActions={false}\n                          showPreview={false}\n                          variant=\"outlined\"\n                        />\n                      );\n                    })()}\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      File Details\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>File name:</span> \n                        <span style={{ fontWeight: 'medium' }}>{selectedFile.name}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Size:</span> \n                        <span>{formatFileSize(selectedFile.size)}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Type:</span> \n                        <span>{selectedFile.type || 'Unknown'}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Last modified:</span> \n                        <span>{new Date(selectedFile.lastModified).toLocaleString()}</span>\n                      </Typography>\n                    </Box>\n                    \n                    {/* File Type Validation */}\n                    {(() => {\n                      const { isPreviewSupported, getFileTypeDescription } = require('../../../utils/fileTypeUtils');\n                      const mimeType = selectedFile.type;\n                      const isSupported = isPreviewSupported(mimeType);\n                      \n                      return (\n                        <Box sx={{ mb: 2 }}>\n                          {isSupported ? (\n                            <Alert severity=\"success\" icon={<CheckCircleIcon />}>\n                              This file type ({getFileTypeDescription(mimeType)}) is fully supported.\n                            </Alert>\n                          ) : (\n                            <Alert severity=\"warning\">\n                              <AlertTitle>Limited Support</AlertTitle>\n                              This file type may have limited preview capabilities in the system.\n                            </Alert>\n                          )}\n                        </Box>\n                      );\n                    })()}\n                    \n                    <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      color=\"error\"\n                      startIcon={<CloseIcon />}\n                      onClick={() => setSelectedFile(null)}\n                      sx={{ mt: 1 }}\n                    >\n                      Remove File\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n              \n              {/* Upload Progress Tracking */}\n              {uploadProgress > 0 && (\n                <Box sx={{ mt: 2, mb: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom display=\"flex\" justifyContent=\"space-between\">\n                    <span>Upload Progress</span>\n                    <span>{uploadProgress}%</span>\n                  </Typography>\n                  <LinearProgress \n                    variant=\"determinate\" \n                    value={uploadProgress} \n                    sx={{ \n                      height: 10, \n                      borderRadius: 5,\n                      mb: 1\n                    }} \n                  />\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    {uploadProgress < 100 ? \n                      `Uploading ${selectedFile.name}...` : \n                      `Successfully uploaded ${selectedFile.name}`\n                    }\n                  </Typography>\n                  \n                  {/* Batch upload status indicator */}\n                  {filesToUpload.length > 1 && (\n                    <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        File {currentUploadIndex + 1} of {filesToUpload.length}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        {Array.from({ length: Math.min(filesToUpload.length, 5) }).map((_, index) => {\n                          // Calculate status for this dot\n                          let color = 'grey.300'; // default - not started\n                          if (index < currentUploadIndex) {\n                            color = 'success.main'; // completed\n                          } else if (index === currentUploadIndex) {\n                            color = uploadProgress === 100 ? 'success.main' : 'primary.main'; // in progress\n                          }\n                          \n                          return (\n                            <Box \n                              key={index} \n                              sx={{ \n                                width: 8, \n                                height: 8, \n                                borderRadius: '50%', \n                                bgcolor: color,\n                                mx: 0.5\n                              }} \n                            />\n                          );\n                        })}\n                        {filesToUpload.length > 5 && (\n                          <Typography variant=\"caption\" color=\"textSecondary\" sx={{ ml: 1 }}>\n                            +{filesToUpload.length - 5} more\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  )}\n                </Box>\n              )}\n              \n              {/* Upload Options */}\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Upload Options\n                </Typography>\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={uploadOptions.overwriteExisting} \n                      onChange={() => setUploadOptions(prev => ({\n                        ...prev,\n                        overwriteExisting: !prev.overwriteExisting\n                      }))} \n                      name=\"overwriteExisting\"\n                    />\n                  }\n                  label=\"Overwrite if file already exists\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={uploadOptions.makePublic} \n                      onChange={() => setUploadOptions(prev => ({\n                        ...prev,\n                        makePublic: !prev.makePublic\n                      }))} \n                      name=\"makePublic\"\n                    />\n                  }\n                  label=\"Make file publicly accessible\"\n                />\n\n                {/* Batch upload info */}\n                {filesToUpload.length > 1 && (\n                  <Box sx={{ mt: 2, p: 1, bgcolor: 'info.lightest', borderRadius: 1 }}>\n                    <Typography variant=\"body2\" gutterBottom sx={{ fontWeight: 'medium', color: 'info.main', display: 'flex', alignItems: 'center' }}>\n                      <InfoIcon fontSize=\"small\" sx={{ mr: 0.5 }} /> \n                      Batch Upload Information\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {filesToUpload.length} files selected for upload ({\n                        formatFileSize(filesToUpload.reduce((total, file) => total + file.size, 0))\n                      })\n                    </Typography>\n                    <Button\n                      size=\"small\"\n                      variant=\"text\"\n                      color=\"primary\"\n                      onClick={() => {\n                        setFilesToUpload([]);\n                        setSelectedFile(null);\n                      }}\n                      sx={{ mt: 1 }}\n                      startIcon={<CloseIcon fontSize=\"small\" />}\n                    >\n                      Clear Batch Selection\n                    </Button>\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ px: 3, py: 2 }}>\n          <Button \n            onClick={() => {\n              setFileUploadDialogOpen(false);\n              setSelectedFile(null);\n              setUploadProgress(0);\n            }} \n            disabled={loading}\n          >\n            Cancel\n          </Button>\n          <Button \n            onClick={uploadFile} \n            variant=\"contained\"\n            color=\"primary\" \n            disabled={loading || !selectedFile || uploadProgress > 0}\n            startIcon={loading ? <CircularProgress size={20} /> : <UploadIcon />}\n          >\n            {loading \n              ? 'Uploading...' \n              : filesToUpload.length > 1 \n                ? `Upload ${filesToUpload.length} Files` \n                : 'Upload File'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Enhanced File Viewer Dialog */}\n      <Dialog\n        open={fileViewerOpen}\n        onClose={() => setFileViewerOpen(false)}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogContent dividers sx={{ p: 0 }}>\n          {renderFilePreview(fileViewUrl, fileViewType)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setFileViewerOpen(false)}>Close</Button>\n          {selectedItem && selectedItem.type === 'file' && (\n            <>\n              <Button \n                onClick={() => {\n                  downloadObject(selectedItem);\n                }} \n                startIcon={<DownloadIcon />}\n              >\n                Download\n              </Button>\n              <Button \n                onClick={() => {\n                  onSelectObject({\n                    bucketName: selectedBucket,\n                    prefix: currentPrefix,\n                    key: selectedItem.key,\n                    size: selectedItem.size,\n                    lastModified: selectedItem.lastModified,\n                    contentType: selectedItem.contentType\n                  });\n                  setFileViewerOpen(false);\n                }} \n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<CheckCircleIcon />}\n              >\n                Select This File\n              </Button>\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nS3BucketBrowser.propTypes = {\n  config: PropTypes.object.isRequired,\n  onSelectBucket: PropTypes.func.isRequired,\n  onSelectObject: PropTypes.func.isRequired,\n  readOnly: PropTypes.bool,\n  selectedBucket: PropTypes.string,\n  selectedPrefix: PropTypes.string,\n};\n\nexport default S3BucketBrowser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}