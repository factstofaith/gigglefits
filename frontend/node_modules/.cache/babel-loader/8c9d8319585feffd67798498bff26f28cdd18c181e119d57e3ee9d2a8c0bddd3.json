{"ast":null,"code":"/**\n * Feature Flags Service\n * \n * Simple service for managing feature flags in the application.\n */// Default feature flags configuration\nconst defaultFeatureFlags={// Core features\nnewDesignSystem:true,enhancedErrorHandling:true,advancedAnalytics:false,// UI components\nnewNavigationBar:false,enhancedDataTable:false,newDashboardLayout:false,// Features\nmultiTenantSupport:true,advancedFileUpload:false,enhancedDataVisualization:false,// Experimental\nbetaFeatures:false,experimentalUI:false};// Current feature flags state\nlet currentFeatureFlags={...defaultFeatureFlags};// Check if a feature is enabled\nfunction isFeatureEnabled(featureName){if(!(featureName in currentFeatureFlags)){console.warn(`Feature flag \"${featureName}\" is not defined`);return false;}return currentFeatureFlags[featureName];}// Set a feature flag (for testing/development)\nfunction setFeatureFlag(featureName,value){if(!(featureName in currentFeatureFlags)){console.warn(`Feature flag \"${featureName}\" is not defined`);return false;}currentFeatureFlags[featureName]=!!value;return true;}// Reset all feature flags to default values\nfunction resetFeatureFlags(){currentFeatureFlags={...defaultFeatureFlags};return currentFeatureFlags;}// Get all feature flags\nfunction getAllFeatureFlags(){return{...currentFeatureFlags};}// Get a stub hook function - actual implementation will be in hook files\nfunction createUseFeatureFlag(){return function useFeatureFlag(featureName){return isFeatureEnabled(featureName);};}export default{isEnabled:isFeatureEnabled,setFlag:setFeatureFlag,resetFlags:resetFeatureFlags,getAllFlags:getAllFeatureFlags,createUseFeatureFlag};","map":{"version":3,"names":["defaultFeatureFlags","newDesignSystem","enhancedErrorHandling","advancedAnalytics","newNavigationBar","enhancedDataTable","newDashboardLayout","multiTenantSupport","advancedFileUpload","enhancedDataVisualization","betaFeatures","experimentalUI","currentFeatureFlags","isFeatureEnabled","featureName","console","warn","setFeatureFlag","value","resetFeatureFlags","getAllFeatureFlags","createUseFeatureFlag","useFeatureFlag","isEnabled","setFlag","resetFlags","getAllFlags"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/services/featureFlagsService.js"],"sourcesContent":["/**\n * Feature Flags Service\n * \n * Simple service for managing feature flags in the application.\n */\n\n// Default feature flags configuration\nconst defaultFeatureFlags = {\n  // Core features\n  newDesignSystem: true,\n  enhancedErrorHandling: true,\n  advancedAnalytics: false,\n  \n  // UI components\n  newNavigationBar: false,\n  enhancedDataTable: false,\n  newDashboardLayout: false,\n  \n  // Features\n  multiTenantSupport: true,\n  advancedFileUpload: false,\n  enhancedDataVisualization: false,\n  \n  // Experimental\n  betaFeatures: false,\n  experimentalUI: false,\n};\n\n// Current feature flags state\nlet currentFeatureFlags = { ...defaultFeatureFlags };\n\n// Check if a feature is enabled\nfunction isFeatureEnabled(featureName) {\n  if (!(featureName in currentFeatureFlags)) {\n    console.warn(`Feature flag \"${featureName}\" is not defined`);\n    return false;\n  }\n  \n  return currentFeatureFlags[featureName];\n}\n\n// Set a feature flag (for testing/development)\nfunction setFeatureFlag(featureName, value) {\n  if (!(featureName in currentFeatureFlags)) {\n    console.warn(`Feature flag \"${featureName}\" is not defined`);\n    return false;\n  }\n  \n  currentFeatureFlags[featureName] = !!value;\n  \n  return true;\n}\n\n// Reset all feature flags to default values\nfunction resetFeatureFlags() {\n  currentFeatureFlags = { ...defaultFeatureFlags };\n  return currentFeatureFlags;\n}\n\n// Get all feature flags\nfunction getAllFeatureFlags() {\n  return { ...currentFeatureFlags };\n}\n\n// Get a stub hook function - actual implementation will be in hook files\nfunction createUseFeatureFlag() {\n  return function useFeatureFlag(featureName) {\n    return isFeatureEnabled(featureName);\n  };\n}\n\nexport default {\n  isEnabled: isFeatureEnabled,\n  setFlag: setFeatureFlag,\n  resetFlags: resetFeatureFlags,\n  getAllFlags: getAllFeatureFlags,\n  createUseFeatureFlag,\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA,GAEA;AACA,KAAM,CAAAA,mBAAmB,CAAG,CAC1B;AACAC,eAAe,CAAE,IAAI,CACrBC,qBAAqB,CAAE,IAAI,CAC3BC,iBAAiB,CAAE,KAAK,CAExB;AACAC,gBAAgB,CAAE,KAAK,CACvBC,iBAAiB,CAAE,KAAK,CACxBC,kBAAkB,CAAE,KAAK,CAEzB;AACAC,kBAAkB,CAAE,IAAI,CACxBC,kBAAkB,CAAE,KAAK,CACzBC,yBAAyB,CAAE,KAAK,CAEhC;AACAC,YAAY,CAAE,KAAK,CACnBC,cAAc,CAAE,KAClB,CAAC,CAED;AACA,GAAI,CAAAC,mBAAmB,CAAG,CAAE,GAAGZ,mBAAoB,CAAC,CAEpD;AACA,QAAS,CAAAa,gBAAgBA,CAACC,WAAW,CAAE,CACrC,GAAI,EAAEA,WAAW,GAAI,CAAAF,mBAAmB,CAAC,CAAE,CACzCG,OAAO,CAACC,IAAI,CAAC,iBAAiBF,WAAW,kBAAkB,CAAC,CAC5D,MAAO,MAAK,CACd,CAEA,MAAO,CAAAF,mBAAmB,CAACE,WAAW,CAAC,CACzC,CAEA;AACA,QAAS,CAAAG,cAAcA,CAACH,WAAW,CAAEI,KAAK,CAAE,CAC1C,GAAI,EAAEJ,WAAW,GAAI,CAAAF,mBAAmB,CAAC,CAAE,CACzCG,OAAO,CAACC,IAAI,CAAC,iBAAiBF,WAAW,kBAAkB,CAAC,CAC5D,MAAO,MAAK,CACd,CAEAF,mBAAmB,CAACE,WAAW,CAAC,CAAG,CAAC,CAACI,KAAK,CAE1C,MAAO,KAAI,CACb,CAEA;AACA,QAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC3BP,mBAAmB,CAAG,CAAE,GAAGZ,mBAAoB,CAAC,CAChD,MAAO,CAAAY,mBAAmB,CAC5B,CAEA;AACA,QAAS,CAAAQ,kBAAkBA,CAAA,CAAG,CAC5B,MAAO,CAAE,GAAGR,mBAAoB,CAAC,CACnC,CAEA;AACA,QAAS,CAAAS,oBAAoBA,CAAA,CAAG,CAC9B,MAAO,SAAS,CAAAC,cAAcA,CAACR,WAAW,CAAE,CAC1C,MAAO,CAAAD,gBAAgB,CAACC,WAAW,CAAC,CACtC,CAAC,CACH,CAEA,cAAe,CACbS,SAAS,CAAEV,gBAAgB,CAC3BW,OAAO,CAAEP,cAAc,CACvBQ,UAAU,CAAEN,iBAAiB,CAC7BO,WAAW,CAAEN,kBAAkB,CAC/BC,oBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}