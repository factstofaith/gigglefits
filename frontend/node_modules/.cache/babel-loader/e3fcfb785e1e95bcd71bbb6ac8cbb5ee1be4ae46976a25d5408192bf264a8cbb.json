{"ast":null,"code":"/**\n * Transformation Node\n *\n * A custom node for data transformations in the integration flow canvas.\n * This node represents a data transformation operation.\n *\n * @component\n */import React,{memo}from'react';import{Handle}from'reactflow';import{Box,Typography,Paper,IconButton,Tooltip,Badge,Chip}from'@mui/material';import{Transform as TransformIcon,Code as CodeIcon,Functions as FunctionsIcon,AutoAwesome as AutoAwesomeIcon,SwapHoriz as SwapHorizIcon,Settings as SettingsIcon,Error as ErrorIcon,Check as CheckIcon}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TRANSFORMATION_TYPES={MAPPING:{icon:SwapHorizIcon,color:'#ff9800',// Orange\nlabel:'Mapping'},FORMULA:{icon:FunctionsIcon,color:'#ff9800',// Orange\nlabel:'Formula'},SCRIPT:{icon:CodeIcon,color:'#ff9800',// Orange\nlabel:'Script'},AI:{icon:AutoAwesomeIcon,color:'#ff9800',// Orange\nlabel:'AI Transform'},default:{icon:TransformIcon,color:'#ff9800',// Orange\nlabel:'Transform'}};/**\n * Transformation Node component\n */const TransformationNode=/*#__PURE__*/memo(_ref=>{let{id,data,isConnectable,selected}=_ref;const transformationType=data.transformationType||'default';const transformationConfig=TRANSFORMATION_TYPES[transformationType]||TRANSFORMATION_TYPES.default;const TransformationIconComponent=transformationConfig.icon;const hasError=data.error!==undefined;const isConfigured=data.isConfigured||false;return/*#__PURE__*/_jsxs(Paper,{elevation:selected?3:1,sx:{minHeight:80,width:200,padding:1,borderRadius:1,borderWidth:2,borderStyle:'solid',borderColor:selected?'primary.main':transformationConfig.color,backgroundColor:'background.paper',position:'relative'},children:[/*#__PURE__*/_jsx(Handle,{type:\"target\",position:\"left\",id:\"input\",style:{left:-8,top:'50%',width:12,height:12,background:transformationConfig.color,border:'2px solid #fff'},isConnectable:isConnectable}),/*#__PURE__*/_jsx(Handle,{type:\"source\",position:\"right\",id:\"output\",style:{right:-8,top:'50%',width:12,height:12,background:transformationConfig.color,border:'2px solid #fff'},isConnectable:isConnectable}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:1,backgroundColor:transformationConfig.color,color:'#fff',marginLeft:-1,marginRight:-1,marginTop:-1,padding:0.5,borderTopLeftRadius:4,borderTopRightRadius:4},children:[/*#__PURE__*/_jsx(TransformationIconComponent,{fontSize:\"small\",sx:{mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",sx:{flexGrow:1},children:transformationConfig.label}),/*#__PURE__*/_jsx(Badge,{color:hasError?\"error\":\"success\",variant:\"dot\",invisible:!isConfigured,children:/*#__PURE__*/_jsx(Tooltip,{title:\"Configure Transformation\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",sx:{color:'#fff','&:hover':{backgroundColor:'rgba(255, 255, 255, 0.2)'}},children:/*#__PURE__*/_jsx(SettingsIcon,{fontSize:\"small\"})})})})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:1},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mb:0.5},children:data.label||'Data Transformation'}),data.fields&&data.fields.length>0&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:0.5,my:0.5},children:/*#__PURE__*/_jsx(Chip,{label:`${data.fields.length} field${data.fields.length>1?'s':''}`,size:\"small\",variant:\"outlined\",color:\"primary\"})}),hasError?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',color:'error.main'},children:[/*#__PURE__*/_jsx(ErrorIcon,{fontSize:\"small\",sx:{mr:0.5}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"error\",children:data.error})]}):isConfigured?/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',color:'success.main'},children:[/*#__PURE__*/_jsx(CheckIcon,{fontSize:\"small\",sx:{mr:0.5}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"success.main\",children:\"Configured\"})]}):/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:\"Click to configure\"})]})]});});export default TransformationNode;","map":{"version":3,"names":["React","memo","Handle","Box","Typography","Paper","IconButton","Tooltip","Badge","Chip","Transform","TransformIcon","Code","CodeIcon","Functions","FunctionsIcon","AutoAwesome","AutoAwesomeIcon","SwapHoriz","SwapHorizIcon","Settings","SettingsIcon","Error","ErrorIcon","Check","CheckIcon","jsx","_jsx","jsxs","_jsxs","TRANSFORMATION_TYPES","MAPPING","icon","color","label","FORMULA","SCRIPT","AI","default","TransformationNode","_ref","id","data","isConnectable","selected","transformationType","transformationConfig","TransformationIconComponent","hasError","error","undefined","isConfigured","elevation","sx","minHeight","width","padding","borderRadius","borderWidth","borderStyle","borderColor","backgroundColor","position","children","type","style","left","top","height","background","border","right","display","alignItems","mb","marginLeft","marginRight","marginTop","borderTopLeftRadius","borderTopRightRadius","fontSize","mr","variant","flexGrow","invisible","title","size","p","fields","length","flexWrap","gap","my"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/flow/nodes/TransformationNode.jsx"],"sourcesContent":["/**\n * Transformation Node\n *\n * A custom node for data transformations in the integration flow canvas.\n * This node represents a data transformation operation.\n *\n * @component\n */\n\nimport React, { memo } from 'react';\nimport { Handle } from 'reactflow';\nimport { \n  Box, \n  Typography, \n  Paper, \n  IconButton,\n  Tooltip,\n  Badge,\n  Chip,\n} from '@mui/material';\nimport {\n  Transform as TransformIcon,\n  Code as CodeIcon,\n  Functions as FunctionsIcon,\n  AutoAwesome as AutoAwesomeIcon,\n  SwapHoriz as SwapHorizIcon,\n  Settings as SettingsIcon,\n  Error as ErrorIcon,\n  Check as CheckIcon,\n} from '@mui/icons-material';\n\nconst TRANSFORMATION_TYPES = {\n  MAPPING: {\n    icon: SwapHorizIcon,\n    color: '#ff9800', // Orange\n    label: 'Mapping',\n  },\n  FORMULA: {\n    icon: FunctionsIcon,\n    color: '#ff9800', // Orange\n    label: 'Formula',\n  },\n  SCRIPT: {\n    icon: CodeIcon,\n    color: '#ff9800', // Orange\n    label: 'Script',\n  },\n  AI: {\n    icon: AutoAwesomeIcon,\n    color: '#ff9800', // Orange\n    label: 'AI Transform',\n  },\n  default: {\n    icon: TransformIcon,\n    color: '#ff9800', // Orange\n    label: 'Transform',\n  },\n};\n\n/**\n * Transformation Node component\n */\nconst TransformationNode = memo(({ id, data, isConnectable, selected }) => {\n  const transformationType = data.transformationType || 'default';\n  const transformationConfig = TRANSFORMATION_TYPES[transformationType] || TRANSFORMATION_TYPES.default;\n  const TransformationIconComponent = transformationConfig.icon;\n  const hasError = data.error !== undefined;\n  const isConfigured = data.isConfigured || false;\n  \n  return (\n    <Paper \n      elevation={selected ? 3 : 1}\n      sx={{\n        minHeight: 80,\n        width: 200,\n        padding: 1,\n        borderRadius: 1,\n        borderWidth: 2,\n        borderStyle: 'solid',\n        borderColor: selected ? 'primary.main' : transformationConfig.color,\n        backgroundColor: 'background.paper',\n        position: 'relative',\n      }}\n    >\n      {/* Input handle on the left */}\n      <Handle\n        type=\"target\"\n        position=\"left\"\n        id=\"input\"\n        style={{ \n          left: -8,\n          top: '50%',\n          width: 12,\n          height: 12,\n          background: transformationConfig.color,\n          border: '2px solid #fff',\n        }}\n        isConnectable={isConnectable}\n      />\n      \n      {/* Output handle on the right */}\n      <Handle\n        type=\"source\"\n        position=\"right\"\n        id=\"output\"\n        style={{ \n          right: -8,\n          top: '50%',\n          width: 12,\n          height: 12,\n          background: transformationConfig.color,\n          border: '2px solid #fff',\n        }}\n        isConnectable={isConnectable}\n      />\n      \n      {/* Node header */}\n      <Box sx={{ \n        display: 'flex', \n        alignItems: 'center', \n        mb: 1,\n        backgroundColor: transformationConfig.color,\n        color: '#fff',\n        marginLeft: -1,\n        marginRight: -1,\n        marginTop: -1,\n        padding: 0.5,\n        borderTopLeftRadius: 4,\n        borderTopRightRadius: 4,\n      }}>\n        <TransformationIconComponent fontSize=\"small\" sx={{ mr: 1 }} />\n        <Typography variant=\"subtitle2\" sx={{ flexGrow: 1 }}>\n          {transformationConfig.label}\n        </Typography>\n        <Badge \n          color={hasError ? \"error\" : \"success\"} \n          variant=\"dot\"\n          invisible={!isConfigured}\n        >\n          <Tooltip title=\"Configure Transformation\">\n            <IconButton \n              size=\"small\"\n              sx={{ \n                color: '#fff',\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                }\n              }}\n            >\n              <SettingsIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Badge>\n      </Box>\n      \n      {/* Node content */}\n      <Box sx={{ p: 1 }}>\n        <Typography variant=\"body2\" sx={{ mb: 0.5 }}>\n          {data.label || 'Data Transformation'}\n        </Typography>\n        \n        {/* Display transformation details */}\n        {data.fields && data.fields.length > 0 && (\n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, my: 0.5 }}>\n            <Chip \n              label={`${data.fields.length} field${data.fields.length > 1 ? 's' : ''}`} \n              size=\"small\" \n              variant=\"outlined\" \n              color=\"primary\"\n            />\n          </Box>\n        )}\n        \n        {/* Status indicator */}\n        {hasError ? (\n          <Box sx={{ display: 'flex', alignItems: 'center', color: 'error.main' }}>\n            <ErrorIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n            <Typography variant=\"caption\" color=\"error\">\n              {data.error}\n            </Typography>\n          </Box>\n        ) : isConfigured ? (\n          <Box sx={{ display: 'flex', alignItems: 'center', color: 'success.main' }}>\n            <CheckIcon fontSize=\"small\" sx={{ mr: 0.5 }} />\n            <Typography variant=\"caption\" color=\"success.main\">\n              Configured\n            </Typography>\n          </Box>\n        ) : (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Click to configure\n          </Typography>\n        )}\n      </Box>\n    </Paper>\n  );\n});\n\nexport default TransformationNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}