{"ast":null,"code":"/**\n * Test API & Webhook Configuration Component\n *\n * A simple component for testing the API and webhook configuration functionality.\n *\n * @component\n */\n\nimport React, { useState } from 'react';\nimport { Box, Button, Card, CardContent, Container, Divider, Paper, Typography, Switch, FormControlLabel, Tabs, Tab } from '@mui/material';\n\n// Import the configuration components\nimport APISourceConfiguration from \"../APISourceConfiguration\";\nimport WebhookConfiguration from \"../WebhookConfiguration\";\n\n/**\n * Test component for API and Webhook Configuration\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TestAPIWebhookConfiguration = () => {\n  // Test state\n  const [apiConfig, setApiConfig] = useState({\n    name: 'Sample API',\n    baseUrl: 'https://api.example.com/v1',\n    method: 'GET',\n    headers: [{\n      key: 'Content-Type',\n      value: 'application/json'\n    }, {\n      key: 'Accept',\n      value: 'application/json'\n    }],\n    queryParams: [{\n      key: 'limit',\n      value: '100'\n    }],\n    authentication: {\n      type: 'none'\n    }\n  });\n  const [webhookConfig, setWebhookConfig] = useState({\n    name: 'Sample Webhook',\n    description: 'A webhook for receiving data updates',\n    endpointId: 'sample-webhook-endpoint',\n    security: {\n      type: 'token',\n      token: {\n        value: 'secret-token-value',\n        headerName: 'X-Webhook-Token'\n      }\n    }\n  });\n\n  // UI state\n  const [readOnly, setReadOnly] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n\n  // Test handlers\n  const handleTestApi = async config => {\n    // In a real app, this would make an API call to test the connection\n    console.log('Testing API with config:', config);\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Return simulated result\n    return {\n      success: true,\n      message: 'Successfully connected to API',\n      responsePreview: {\n        status: 'success',\n        data: {\n          items: [{\n            id: 1,\n            name: 'Item 1'\n          }, {\n            id: 2,\n            name: 'Item 2'\n          }],\n          total: 2,\n          page: 1,\n          limit: 100\n        }\n      }\n    };\n  };\n  const handleTestWebhook = async config => {\n    // In a real app, this would make an API call to test the webhook\n    console.log('Testing webhook with config:', config);\n\n    // Simulate API call delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n\n    // Return simulated result\n    return {\n      success: true,\n      message: 'Webhook endpoint created successfully',\n      endpointUrl: `https://api.example.com/webhooks/${config.endpointId}`\n    };\n  };\n  return /*#__PURE__*/_jsxs(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsx(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"API & Webhook Configuration Test\"\n    }), /*#__PURE__*/_jsx(Typography, {\n      variant: \"body1\",\n      paragraph: true,\n      children: \"This page allows testing of the API source and webhook configuration components.\"\n    }), /*#__PURE__*/_jsx(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxs(CardContent, {\n        children: [/*#__PURE__*/_jsxs(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsx(Typography, {\n            variant: \"h6\",\n            children: \"Control Panel\"\n          }), /*#__PURE__*/_jsx(FormControlLabel, {\n            control: /*#__PURE__*/_jsx(Switch, {\n              checked: readOnly,\n              onChange: e => setReadOnly(e.target.checked)\n            }),\n            label: \"Read Only Mode\"\n          })]\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => {\n            // Reset configuration\n            setApiConfig({\n              name: '',\n              baseUrl: '',\n              method: 'GET',\n              headers: [],\n              queryParams: [],\n              authentication: {\n                type: 'none'\n              }\n            });\n            setWebhookConfig({\n              name: '',\n              description: '',\n              endpointId: '',\n              security: {\n                type: 'none'\n              }\n            });\n          },\n          sx: {\n            mr: 2\n          },\n          children: \"Reset\"\n        }), /*#__PURE__*/_jsx(Button, {\n          variant: \"outlined\",\n          onClick: () => {\n            // Set test values\n            setApiConfig({\n              name: 'Test API',\n              baseUrl: 'https://api.example.com/v1',\n              method: 'GET',\n              headers: [{\n                key: 'Content-Type',\n                value: 'application/json'\n              }, {\n                key: 'Accept',\n                value: 'application/json'\n              }],\n              queryParams: [{\n                key: 'limit',\n                value: '100'\n              }],\n              authentication: {\n                type: 'apiKey',\n                apiKey: {\n                  key: 'X-API-Key',\n                  value: 'test-api-key',\n                  addTo: 'header'\n                }\n              }\n            });\n            setWebhookConfig({\n              name: 'Test Webhook',\n              description: 'A webhook for receiving data updates',\n              endpointId: 'test-webhook-endpoint',\n              security: {\n                type: 'token',\n                token: {\n                  value: 'test-token-value',\n                  headerName: 'X-Webhook-Token'\n                }\n              }\n            });\n          },\n          children: \"Load Test Data\"\n        })]\n      })\n    }), /*#__PURE__*/_jsxs(Tabs, {\n      value: activeTab,\n      onChange: (e, newValue) => setActiveTab(newValue),\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsx(Tab, {\n        label: \"API Configuration\"\n      }), /*#__PURE__*/_jsx(Tab, {\n        label: \"Webhook Configuration\"\n      })]\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        display: activeTab === 0 ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsx(APISourceConfiguration, {\n        value: apiConfig,\n        onChange: setApiConfig,\n        onTest: handleTestApi,\n        disabled: readOnly\n      })\n    }), /*#__PURE__*/_jsx(Box, {\n      sx: {\n        display: activeTab === 1 ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsx(WebhookConfiguration, {\n        value: webhookConfig,\n        onChange: setWebhookConfig,\n        onTest: handleTestWebhook,\n        disabled: readOnly\n      })\n    }), /*#__PURE__*/_jsxs(Paper, {\n      variant: \"outlined\",\n      sx: {\n        p: 3,\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsx(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Current Configuration\"\n      }), /*#__PURE__*/_jsx(Divider, {\n        sx: {\n          my: 2\n        }\n      }), /*#__PURE__*/_jsx(Typography, {\n        variant: \"subtitle2\",\n        children: activeTab === 0 ? \"API Configuration:\" : \"Webhook Configuration:\"\n      }), /*#__PURE__*/_jsx(Box, {\n        component: \"pre\",\n        sx: {\n          p: 2,\n          mt: 2,\n          bgcolor: 'background.default',\n          borderRadius: 1,\n          overflow: 'auto',\n          maxHeight: '400px'\n        },\n        children: JSON.stringify(activeTab === 0 ? apiConfig : webhookConfig, null, 2)\n      })]\n    })]\n  });\n};\nexport default TestAPIWebhookConfiguration;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}