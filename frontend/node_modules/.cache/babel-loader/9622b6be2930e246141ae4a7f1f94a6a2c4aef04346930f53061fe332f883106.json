{"ast":null,"code":"/**\n * Design System Adapted Components\n * \n * This file exports components from the design system.\n * Properly implemented components are directly exported.\n * Remaining components use temporary implementations until completed.\n */// Import properly implemented adapted components\nimport ButtonAdapted from\"./core/Button.jsx\";import TextFieldAdapted from\"./form/TextField.jsx\";import CheckboxAdapted from\"./form/Checkbox.jsx\";import ErrorBoundary from\"./core/ErrorBoundary/ErrorBoundary.jsx\";// Export Error Boundary as it actually exists\nexport{ErrorBoundary};// Export properly implemented components\nexport const Button=ButtonAdapted;export const TextField=TextFieldAdapted;export const Checkbox=CheckboxAdapted;export const Table=ErrorBoundary;export const Card=ErrorBoundary;export const CardContent=ErrorBoundary;export const Typography=ErrorBoundary;export const Modal=ErrorBoundary;export const Alert=ErrorBoundary;export const Tabs=ErrorBoundary;export const Link=ErrorBoundary;/**\n * TECHNICAL DEBT NOTE:\n * \n * This approach is a temporary solution to fix build errors without introducing incomplete\n * implementations of design system components. It makes the minimum changes needed to make\n * the build pass, while clearly documenting what needs to be done properly.\n * \n * The proper fix is to implement each of these components following design system guidelines.\n * This should be tracked as a separate task and prioritized accordingly.\n */// Include component names for reference to identify future implementation needs\nexport const componentsToBuild=['ButtonAdapted','TextFieldAdapted','CheckboxAdapted','TableAdapted','CardAdapted','CardContentAdapted','TypographyAdapted','ModalAdapted','AlertAdapted','TabsAdapted','LinkAdapted'];// Default export (follows same pattern)\nexport default{Button:ButtonAdapted,ErrorBoundary,TextField:TextFieldAdapted,Checkbox:CheckboxAdapted,Table:ErrorBoundary,Card:ErrorBoundary,CardContent:ErrorBoundary,Typography:ErrorBoundary,Modal:ErrorBoundary,Alert:ErrorBoundary,Tabs:ErrorBoundary,Link:ErrorBoundary};// Export lint check utilities with valid JS identifier\nexport*from\"./navigation\";","map":{"version":3,"names":["ButtonAdapted","TextFieldAdapted","CheckboxAdapted","ErrorBoundary","Button","TextField","Checkbox","Table","Card","CardContent","Typography","Modal","Alert","Tabs","Link","componentsToBuild"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/design-system/adapted/index.js"],"sourcesContent":["/**\n * Design System Adapted Components\n * \n * This file exports components from the design system.\n * Properly implemented components are directly exported.\n * Remaining components use temporary implementations until completed.\n */\n\n// Import properly implemented adapted components\nimport ButtonAdapted from './core/Button.jsx';\nimport TextFieldAdapted from './form/TextField.jsx';\nimport CheckboxAdapted from './form/Checkbox.jsx';\nimport ErrorBoundary from './core/ErrorBoundary/ErrorBoundary.jsx';\n\n// Export Error Boundary as it actually exists\nexport { ErrorBoundary };\n\n// Export properly implemented components\nexport const Button = ButtonAdapted;\nexport const TextField = TextFieldAdapted;\nexport const Checkbox = CheckboxAdapted;\nexport const Table = ErrorBoundary;\nexport const Card = ErrorBoundary;  \nexport const CardContent = ErrorBoundary;\nexport const Typography = ErrorBoundary;\nexport const Modal = ErrorBoundary;\nexport const Alert = ErrorBoundary;\nexport const Tabs = ErrorBoundary;\nexport const Link = ErrorBoundary;\n\n/**\n * TECHNICAL DEBT NOTE:\n * \n * This approach is a temporary solution to fix build errors without introducing incomplete\n * implementations of design system components. It makes the minimum changes needed to make\n * the build pass, while clearly documenting what needs to be done properly.\n * \n * The proper fix is to implement each of these components following design system guidelines.\n * This should be tracked as a separate task and prioritized accordingly.\n */\n\n// Include component names for reference to identify future implementation needs\nexport const componentsToBuild = [\n  'ButtonAdapted',\n  'TextFieldAdapted',\n  'CheckboxAdapted',\n  'TableAdapted',\n  'CardAdapted',\n  'CardContentAdapted',\n  'TypographyAdapted',\n  'ModalAdapted',\n  'AlertAdapted',\n  'TabsAdapted',\n  'LinkAdapted'\n];\n\n// Default export (follows same pattern)\nexport default {\n  Button: ButtonAdapted,\n  ErrorBoundary,\n  TextField: TextFieldAdapted,\n  Checkbox: CheckboxAdapted,\n  Table: ErrorBoundary,\n  Card: ErrorBoundary,\n  CardContent: ErrorBoundary,\n  Typography: ErrorBoundary,\n  Modal: ErrorBoundary,\n  Alert: ErrorBoundary,\n  Tabs: ErrorBoundary,\n  Link: ErrorBoundary,\n};\n\n// Export lint check utilities with valid JS identifier\nexport * from './navigation';\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA;AACA,MAAO,CAAAA,aAAa,yBACpB,MAAO,CAAAC,gBAAgB,4BACvB,MAAO,CAAAC,eAAe,2BACtB,MAAO,CAAAC,aAAa,8CAEpB;AACA,OAASA,aAAa,EAEtB;AACA,MAAO,MAAM,CAAAC,MAAM,CAAGJ,aAAa,CACnC,MAAO,MAAM,CAAAK,SAAS,CAAGJ,gBAAgB,CACzC,MAAO,MAAM,CAAAK,QAAQ,CAAGJ,eAAe,CACvC,MAAO,MAAM,CAAAK,KAAK,CAAGJ,aAAa,CAClC,MAAO,MAAM,CAAAK,IAAI,CAAGL,aAAa,CACjC,MAAO,MAAM,CAAAM,WAAW,CAAGN,aAAa,CACxC,MAAO,MAAM,CAAAO,UAAU,CAAGP,aAAa,CACvC,MAAO,MAAM,CAAAQ,KAAK,CAAGR,aAAa,CAClC,MAAO,MAAM,CAAAS,KAAK,CAAGT,aAAa,CAClC,MAAO,MAAM,CAAAU,IAAI,CAAGV,aAAa,CACjC,MAAO,MAAM,CAAAW,IAAI,CAAGX,aAAa,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA;AACA,MAAO,MAAM,CAAAY,iBAAiB,CAAG,CAC/B,eAAe,CACf,kBAAkB,CAClB,iBAAiB,CACjB,cAAc,CACd,aAAa,CACb,oBAAoB,CACpB,mBAAmB,CACnB,cAAc,CACd,cAAc,CACd,aAAa,CACb,aAAa,CACd,CAED;AACA,cAAe,CACbX,MAAM,CAAEJ,aAAa,CACrBG,aAAa,CACbE,SAAS,CAAEJ,gBAAgB,CAC3BK,QAAQ,CAAEJ,eAAe,CACzBK,KAAK,CAAEJ,aAAa,CACpBK,IAAI,CAAEL,aAAa,CACnBM,WAAW,CAAEN,aAAa,CAC1BO,UAAU,CAAEP,aAAa,CACzBQ,KAAK,CAAER,aAAa,CACpBS,KAAK,CAAET,aAAa,CACpBU,IAAI,CAAEV,aAAa,CACnBW,IAAI,CAAEX,aACR,CAAC,CAED;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}