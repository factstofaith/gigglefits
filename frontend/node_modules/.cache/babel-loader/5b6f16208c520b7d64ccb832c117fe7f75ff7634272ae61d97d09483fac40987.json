{"ast":null,"code":"/**\n * Setup file for Jest tests\n */// Mock window.matchMedia\nwindow.matchMedia=window.matchMedia||function(){return{matches:false,addListener:function(){},removeListener:function(){}};};// Mock IntersectionObserver\nclass IntersectionObserver{constructor(){}disconnect(){}observe(){}takeRecords(){return[];}unobserve(){}}window.IntersectionObserver=IntersectionObserver;// Mock localStorage\nconst localStorageMock=function(){let store={};return{getItem:function(key){return store[key]||null;},setItem:function(key,value){store[key]=value.toString();},clear:function(){store={};},removeItem:function(key){delete store[key];}};}();Object.defineProperty(window,'localStorage',{value:localStorageMock});// Log to console that tests are being set up\nconsole.log('Setting up test environment');","map":{"version":3,"names":["window","matchMedia","matches","addListener","removeListener","IntersectionObserver","constructor","disconnect","observe","takeRecords","unobserve","localStorageMock","store","getItem","key","setItem","value","toString","clear","removeItem","Object","defineProperty","console","log"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/setupTests.js"],"sourcesContent":["/**\n * Setup file for Jest tests\n */\n\n// Mock window.matchMedia\nwindow.matchMedia = window.matchMedia || function() {\n  return {\n    matches: false,\n    addListener: function() {},\n    removeListener: function() {}\n  };\n};\n\n// Mock IntersectionObserver\nclass IntersectionObserver {\n  constructor() {}\n  disconnect() {}\n  observe() {}\n  takeRecords() { return []; }\n  unobserve() {}\n}\nwindow.IntersectionObserver = IntersectionObserver;\n\n// Mock localStorage\nconst localStorageMock = (function() {\n  let store = {};\n  return {\n    getItem: function(key) {\n      return store[key] || null;\n    },\n    setItem: function(key, value) {\n      store[key] = value.toString();\n    },\n    clear: function() {\n      store = {};\n    },\n    removeItem: function(key) {\n      delete store[key];\n    }\n  };\n})();\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock\n});\n\n// Log to console that tests are being set up\nconsole.log('Setting up test environment');\n"],"mappings":"AAAA;AACA;AACA,GAEA;AACAA,MAAM,CAACC,UAAU,CAAGD,MAAM,CAACC,UAAU,EAAI,UAAW,CAClD,MAAO,CACLC,OAAO,CAAE,KAAK,CACdC,WAAW,CAAE,QAAAA,CAAA,CAAW,CAAC,CAAC,CAC1BC,cAAc,CAAE,QAAAA,CAAA,CAAW,CAAC,CAC9B,CAAC,CACH,CAAC,CAED;AACA,KAAM,CAAAC,oBAAqB,CACzBC,WAAWA,CAAA,CAAG,CAAC,CACfC,UAAUA,CAAA,CAAG,CAAC,CACdC,OAAOA,CAAA,CAAG,CAAC,CACXC,WAAWA,CAAA,CAAG,CAAE,MAAO,EAAE,CAAE,CAC3BC,SAASA,CAAA,CAAG,CAAC,CACf,CACAV,MAAM,CAACK,oBAAoB,CAAGA,oBAAoB,CAElD;AACA,KAAM,CAAAM,gBAAgB,CAAI,UAAW,CACnC,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAC,CACd,MAAO,CACLC,OAAO,CAAE,QAAAA,CAASC,GAAG,CAAE,CACrB,MAAO,CAAAF,KAAK,CAACE,GAAG,CAAC,EAAI,IAAI,CAC3B,CAAC,CACDC,OAAO,CAAE,QAAAA,CAASD,GAAG,CAAEE,KAAK,CAAE,CAC5BJ,KAAK,CAACE,GAAG,CAAC,CAAGE,KAAK,CAACC,QAAQ,CAAC,CAAC,CAC/B,CAAC,CACDC,KAAK,CAAE,QAAAA,CAAA,CAAW,CAChBN,KAAK,CAAG,CAAC,CAAC,CACZ,CAAC,CACDO,UAAU,CAAE,QAAAA,CAASL,GAAG,CAAE,CACxB,MAAO,CAAAF,KAAK,CAACE,GAAG,CAAC,CACnB,CACF,CAAC,CACH,CAAC,CAAE,CAAC,CAEJM,MAAM,CAACC,cAAc,CAACrB,MAAM,CAAE,cAAc,CAAE,CAC5CgB,KAAK,CAAEL,gBACT,CAAC,CAAC,CAEF;AACAW,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}