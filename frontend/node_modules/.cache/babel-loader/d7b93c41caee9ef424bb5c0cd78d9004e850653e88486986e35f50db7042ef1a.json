{"ast":null,"code":"/**\r\n * Integration Creation Dialog\r\n *\r\n * A dialog component for creating new integrations.\r\n *\r\n * @component\r\n */import React,{useState}from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,TextField,FormControl,InputLabel,Select,MenuItem,FormHelperText,Box,Stepper,Step,StepLabel,Typography,Stack}from'@mui/material';import{useFormik}from'formik';import*as yup from'yup';import ContextualHelp from\"../common/ContextualHelp\";import{useContextualHelp}from\"../../hooks\";// Define steps for integration creation\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const steps=['Basic Information','Connection Settings','Schedule'];// Validation schema for the form\nconst validationSchema=yup.object({name:yup.string().required('Name is required').min(3,'Name should be at least 3 characters').max(50,'Name should be at most 50 characters'),description:yup.string().max(200,'Description should be at most 200 characters'),type:yup.string().required('Integration type is required')});/**\r\n * Integration types and their descriptions\r\n */const INTEGRATION_TYPES=[{value:'data_sync',label:'Data Synchronization',description:'Synchronize data between multiple systems'},{value:'data_transformation',label:'Data Transformation',description:'Transform data from one format to another'},{value:'data_validation',label:'Data Validation',description:'Validate data against business rules'},{value:'data_migration',label:'Data Migration',description:'Migrate data from legacy systems to new platforms'}];/**\r\n * Integration Creation Dialog component\r\n */const IntegrationCreationDialog=_ref=>{var _getHelp,_INTEGRATION_TYPES$fi,_getHelp2;let{open,onClose,onSubmit}=_ref;const[activeStep,setActiveStep]=useState(0);const{getHelp}=useContextualHelp('integration');// Initialize formik\nconst formik=useFormik({initialValues:{name:'',description:'',type:'',scheduleType:'manual',scheduleFrequency:''},validationSchema,onSubmit:values=>{onSubmit(values);formik.resetForm();setActiveStep(0);onClose();}});// Handle step navigation\nconst handleNext=()=>{setActiveStep(prevStep=>prevStep+1);};const handleBack=()=>{setActiveStep(prevStep=>prevStep-1);};const handleReset=()=>{formik.resetForm();setActiveStep(0);};// Handle dialog close\nconst handleClose=()=>{formik.resetForm();setActiveStep(0);onClose();};return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,fullWidth:true,maxWidth:\"md\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"div\",children:\"Create New Integration\"}),/*#__PURE__*/_jsx(ContextualHelp,{id:\"integration-creation\",title:\"Integration Creation\",content:((_getHelp=getHelp('creation'))===null||_getHelp===void 0?void 0:_getHelp.content)||\"Create a new integration by specifying its name, description, and type. An integration defines how data moves between systems.\",type:\"tooltip\",size:\"small\"})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:/*#__PURE__*/_jsx(Stepper,{activeStep:activeStep,children:steps.map(label=>/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:label})},label))})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[activeStep===0&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",id:\"name\",name:\"name\",label:\"Integration Name\",value:formik.values.name,onChange:formik.handleChange,error:formik.touched.name&&Boolean(formik.errors.name),helperText:formik.touched.name&&formik.errors.name}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,margin:\"normal\",id:\"description\",name:\"description\",label:\"Description\",multiline:true,rows:3,value:formik.values.description,onChange:formik.handleChange,error:formik.touched.description&&Boolean(formik.errors.description),helperText:formik.touched.description&&formik.errors.description}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",error:formik.touched.type&&Boolean(formik.errors.type),children:[/*#__PURE__*/_jsx(InputLabel,{id:\"type-label\",children:\"Integration Type\"}),/*#__PURE__*/_jsx(Select,{labelId:\"type-label\",id:\"type\",name:\"type\",value:formik.values.type,onChange:formik.handleChange,label:\"Integration Type\",children:INTEGRATION_TYPES.map(type=>/*#__PURE__*/_jsx(MenuItem,{value:type.value,children:type.label},type.value))}),formik.touched.type&&formik.errors.type&&/*#__PURE__*/_jsx(FormHelperText,{children:formik.errors.type})]}),formik.values.type&&/*#__PURE__*/_jsx(Box,{mt:2,p:2,bgcolor:\"grey.100\",borderRadius:1,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:(_INTEGRATION_TYPES$fi=INTEGRATION_TYPES.find(t=>t.value===formik.values.type))===null||_INTEGRATION_TYPES$fi===void 0?void 0:_INTEGRATION_TYPES$fi.description})})]}),activeStep===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Connection Settings\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",paragraph:true,children:\"You'll configure the detailed connection settings in the Flow Designer after creating the integration.\"}),/*#__PURE__*/_jsx(ContextualHelp,{id:\"connection-settings-info\",title:\"Connection Configuration\",content:\"The Flow Designer is where you'll build your integration workflow by connecting nodes together. You'll be able to configure source and destination systems, add transformation steps, and define how data flows between them.\",type:\"inline\",icon:\"info\",relatedLinks:[{label:\"Take Flow Designer tour\",onClick:()=>console.log(\"Start flow designer tour\")},{label:\"View connection types\",onClick:()=>console.log(\"Open connection types documentation\")}]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",gutterBottom:true,sx:{mt:2},children:\"The Flow Designer will allow you to:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Add source and destination nodes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Configure transformation and filter operations\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Establish connections between nodes\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Validate and test your integration flow\"})]})]}),activeStep===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Schedule Configuration\"}),/*#__PURE__*/_jsx(ContextualHelp,{id:\"schedule-config\",title:\"Scheduling\",content:((_getHelp2=getHelp('schedule'))===null||_getHelp2===void 0?void 0:_getHelp2.content)||\"Set up when your integration should run automatically. Supports one-time, recurring, and event-based schedules.\",type:\"popover\",size:\"small\",relatedLinks:[{label:\"View scheduling documentation\",onClick:()=>console.log(\"Open scheduling documentation\")},{label:\"Take scheduling tour\",onClick:()=>console.log(\"Start scheduling tour\")}]})]}),/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"schedule-type-label\",children:\"Schedule Type\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"schedule-type-label\",id:\"scheduleType\",name:\"scheduleType\",value:formik.values.scheduleType,onChange:formik.handleChange,label:\"Schedule Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"manual\",children:\"Manual Execution\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"scheduled\",children:\"Scheduled\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"event_driven\",children:\"Event Driven\"})]})]}),formik.values.scheduleType==='scheduled'&&/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,margin:\"normal\",children:[/*#__PURE__*/_jsx(InputLabel,{id:\"schedule-frequency-label\",children:\"Frequency\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"schedule-frequency-label\",id:\"scheduleFrequency\",name:\"scheduleFrequency\",value:formik.values.scheduleFrequency,onChange:formik.handleChange,label:\"Frequency\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"hourly\",children:\"Hourly\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"daily\",children:\"Daily\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"weekly\",children:\"Weekly\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"monthly\",children:\"Monthly\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"custom\",children:\"Custom (CRON)\"})]})]}),formik.values.scheduleType==='event_driven'&&/*#__PURE__*/_jsx(Box,{mt:2,p:2,bgcolor:\"grey.100\",borderRadius:1,children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:\"Event-driven integrations will be triggered by external events such as webhook calls, file uploads, or system notifications.\"})})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"Cancel\"}),activeStep>0&&/*#__PURE__*/_jsx(Button,{onClick:handleBack,children:\"Back\"}),activeStep<steps.length-1&&/*#__PURE__*/_jsx(Button,{onClick:handleNext,variant:\"contained\",disabled:activeStep===0&&!(formik.values.name&&formik.values.type&&!formik.errors.name&&!formik.errors.description),children:\"Next\"}),activeStep===steps.length-1&&/*#__PURE__*/_jsx(Button,{onClick:()=>formik.handleSubmit(),variant:\"contained\",color:\"primary\",children:\"Create Integration\"})]})]});};export default IntegrationCreationDialog;","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","TextField","FormControl","InputLabel","Select","MenuItem","FormHelperText","Box","Stepper","Step","StepLabel","Typography","Stack","useFormik","yup","ContextualHelp","useContextualHelp","jsx","_jsx","jsxs","_jsxs","steps","validationSchema","object","name","string","required","min","max","description","type","INTEGRATION_TYPES","value","label","IntegrationCreationDialog","_ref","_getHelp","_INTEGRATION_TYPES$fi","_getHelp2","open","onClose","onSubmit","activeStep","setActiveStep","getHelp","formik","initialValues","scheduleType","scheduleFrequency","values","resetForm","handleNext","prevStep","handleBack","handleReset","handleClose","fullWidth","maxWidth","children","direction","alignItems","spacing","variant","component","id","title","content","size","sx","mb","map","handleSubmit","margin","onChange","handleChange","error","touched","Boolean","errors","helperText","multiline","rows","labelId","mt","p","bgcolor","borderRadius","find","t","gutterBottom","color","paragraph","icon","relatedLinks","onClick","console","log","length","disabled"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/IntegrationCreationDialog.jsx"],"sourcesContent":["/**\r\n * Integration Creation Dialog\r\n *\r\n * A dialog component for creating new integrations.\r\n *\r\n * @component\r\n */\r\n\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  Dialog, \r\n  DialogTitle, \r\n  DialogContent, \r\n  DialogActions, \r\n  Button, \r\n  TextField, \r\n  FormControl, \r\n  InputLabel, \r\n  Select, \r\n  MenuItem, \r\n  FormHelperText,\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Typography,\r\n  Stack,\r\n} from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport ContextualHelp from '../common/ContextualHelp';\r\nimport { useContextualHelp } from '../../hooks';\r\n\r\n// Define steps for integration creation\r\nconst steps = ['Basic Information', 'Connection Settings', 'Schedule'];\r\n\r\n// Validation schema for the form\r\nconst validationSchema = yup.object({\r\n  name: yup\r\n    .string()\r\n    .required('Name is required')\r\n    .min(3, 'Name should be at least 3 characters')\r\n    .max(50, 'Name should be at most 50 characters'),\r\n  description: yup\r\n    .string()\r\n    .max(200, 'Description should be at most 200 characters'),\r\n  type: yup\r\n    .string()\r\n    .required('Integration type is required'),\r\n});\r\n\r\n/**\r\n * Integration types and their descriptions\r\n */\r\nconst INTEGRATION_TYPES = [\r\n  { \r\n    value: 'data_sync', \r\n    label: 'Data Synchronization', \r\n    description: 'Synchronize data between multiple systems' \r\n  },\r\n  { \r\n    value: 'data_transformation', \r\n    label: 'Data Transformation', \r\n    description: 'Transform data from one format to another' \r\n  },\r\n  { \r\n    value: 'data_validation', \r\n    label: 'Data Validation', \r\n    description: 'Validate data against business rules' \r\n  },\r\n  { \r\n    value: 'data_migration', \r\n    label: 'Data Migration', \r\n    description: 'Migrate data from legacy systems to new platforms' \r\n  },\r\n];\r\n\r\n/**\r\n * Integration Creation Dialog component\r\n */\r\nconst IntegrationCreationDialog = ({ open, onClose, onSubmit }) => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const { getHelp } = useContextualHelp('integration');\r\n  \r\n  // Initialize formik\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n      description: '',\r\n      type: '',\r\n      scheduleType: 'manual',\r\n      scheduleFrequency: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      onSubmit(values);\r\n      formik.resetForm();\r\n      setActiveStep(0);\r\n      onClose();\r\n    },\r\n  });\r\n  \r\n  // Handle step navigation\r\n  const handleNext = () => {\r\n    setActiveStep((prevStep) => prevStep + 1);\r\n  };\r\n  \r\n  const handleBack = () => {\r\n    setActiveStep((prevStep) => prevStep - 1);\r\n  };\r\n  \r\n  const handleReset = () => {\r\n    formik.resetForm();\r\n    setActiveStep(0);\r\n  };\r\n  \r\n  // Handle dialog close\r\n  const handleClose = () => {\r\n    formik.resetForm();\r\n    setActiveStep(0);\r\n    onClose();\r\n  };\r\n  \r\n  return (\r\n    <Dialog \r\n      open={open} \r\n      onClose={handleClose}\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n    >\r\n      <DialogTitle>\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n          <Typography variant=\"h6\" component=\"div\">Create New Integration</Typography>\r\n          <ContextualHelp\r\n            id=\"integration-creation\"\r\n            title=\"Integration Creation\"\r\n            content={getHelp('creation')?.content || \"Create a new integration by specifying its name, description, and type. An integration defines how data moves between systems.\"}\r\n            type=\"tooltip\"\r\n            size=\"small\"\r\n          />\r\n        </Stack>\r\n      </DialogTitle>\r\n      \r\n      <DialogContent>\r\n        <Box sx={{ mb: 2 }}>\r\n          <Stepper activeStep={activeStep}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </Box>\r\n        \r\n        <form onSubmit={formik.handleSubmit}>\r\n          {/* Step 1: Basic Information */}\r\n          {activeStep === 0 && (\r\n            <Box>\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Integration Name\"\r\n                value={formik.values.name}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.name && Boolean(formik.errors.name)}\r\n                helperText={formik.touched.name && formik.errors.name}\r\n              />\r\n              \r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                multiline\r\n                rows={3}\r\n                value={formik.values.description}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.description && Boolean(formik.errors.description)}\r\n                helperText={formik.touched.description && formik.errors.description}\r\n              />\r\n              \r\n              <FormControl \r\n                fullWidth \r\n                margin=\"normal\"\r\n                error={formik.touched.type && Boolean(formik.errors.type)}\r\n              >\r\n                <InputLabel id=\"type-label\">Integration Type</InputLabel>\r\n                <Select\r\n                  labelId=\"type-label\"\r\n                  id=\"type\"\r\n                  name=\"type\"\r\n                  value={formik.values.type}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Integration Type\"\r\n                >\r\n                  {INTEGRATION_TYPES.map((type) => (\r\n                    <MenuItem key={type.value} value={type.value}>\r\n                      {type.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {formik.touched.type && formik.errors.type && (\r\n                  <FormHelperText>{formik.errors.type}</FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              \r\n              {formik.values.type && (\r\n                <Box mt={2} p={2} bgcolor=\"grey.100\" borderRadius={1}>\r\n                  <Typography variant=\"body2\">\r\n                    {INTEGRATION_TYPES.find(t => t.value === formik.values.type)?.description}\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          )}\r\n          \r\n          {/* Step 2: Connection Settings */}\r\n          {activeStep === 1 && (\r\n            <Box>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Connection Settings\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                You'll configure the detailed connection settings in the Flow Designer after creating the integration.\r\n              </Typography>\r\n              \r\n              <ContextualHelp\r\n                id=\"connection-settings-info\"\r\n                title=\"Connection Configuration\"\r\n                content=\"The Flow Designer is where you'll build your integration workflow by connecting nodes together. You'll be able to configure source and destination systems, add transformation steps, and define how data flows between them.\"\r\n                type=\"inline\"\r\n                icon=\"info\"\r\n                relatedLinks={[\r\n                  { \r\n                    label: \"Take Flow Designer tour\", \r\n                    onClick: () => console.log(\"Start flow designer tour\") \r\n                  },\r\n                  { \r\n                    label: \"View connection types\", \r\n                    onClick: () => console.log(\"Open connection types documentation\") \r\n                  }\r\n                ]}\r\n              />\r\n              \r\n              <Typography variant=\"body2\" gutterBottom sx={{ mt: 2 }}>\r\n                The Flow Designer will allow you to:\r\n              </Typography>\r\n              <ul>\r\n                <li>Add source and destination nodes</li>\r\n                <li>Configure transformation and filter operations</li>\r\n                <li>Establish connections between nodes</li>\r\n                <li>Validate and test your integration flow</li>\r\n              </ul>\r\n            </Box>\r\n          )}\r\n          \r\n          {/* Step 3: Schedule */}\r\n          {activeStep === 2 && (\r\n            <Box>\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={2}>\r\n                <Typography variant=\"subtitle1\">Schedule Configuration</Typography>\r\n                <ContextualHelp\r\n                  id=\"schedule-config\"\r\n                  title=\"Scheduling\"\r\n                  content={getHelp('schedule')?.content || \"Set up when your integration should run automatically. Supports one-time, recurring, and event-based schedules.\"}\r\n                  type=\"popover\"\r\n                  size=\"small\"\r\n                  relatedLinks={[\r\n                    { \r\n                      label: \"View scheduling documentation\", \r\n                      onClick: () => console.log(\"Open scheduling documentation\") \r\n                    },\r\n                    { \r\n                      label: \"Take scheduling tour\", \r\n                      onClick: () => console.log(\"Start scheduling tour\") \r\n                    }\r\n                  ]}\r\n                />\r\n              </Stack>\r\n            \r\n              <FormControl fullWidth margin=\"normal\">\r\n                <InputLabel id=\"schedule-type-label\">Schedule Type</InputLabel>\r\n                <Select\r\n                  labelId=\"schedule-type-label\"\r\n                  id=\"scheduleType\"\r\n                  name=\"scheduleType\"\r\n                  value={formik.values.scheduleType}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Schedule Type\"\r\n                >\r\n                  <MenuItem value=\"manual\">Manual Execution</MenuItem>\r\n                  <MenuItem value=\"scheduled\">Scheduled</MenuItem>\r\n                  <MenuItem value=\"event_driven\">Event Driven</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              {formik.values.scheduleType === 'scheduled' && (\r\n                <FormControl fullWidth margin=\"normal\">\r\n                  <InputLabel id=\"schedule-frequency-label\">Frequency</InputLabel>\r\n                  <Select\r\n                    labelId=\"schedule-frequency-label\"\r\n                    id=\"scheduleFrequency\"\r\n                    name=\"scheduleFrequency\"\r\n                    value={formik.values.scheduleFrequency}\r\n                    onChange={formik.handleChange}\r\n                    label=\"Frequency\"\r\n                  >\r\n                    <MenuItem value=\"hourly\">Hourly</MenuItem>\r\n                    <MenuItem value=\"daily\">Daily</MenuItem>\r\n                    <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                    <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                    <MenuItem value=\"custom\">Custom (CRON)</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              \r\n              {formik.values.scheduleType === 'event_driven' && (\r\n                <Box mt={2} p={2} bgcolor=\"grey.100\" borderRadius={1}>\r\n                  <Typography variant=\"body2\">\r\n                    Event-driven integrations will be triggered by external events such as webhook calls,\r\n                    file uploads, or system notifications.\r\n                  </Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          )}\r\n        </form>\r\n      </DialogContent>\r\n      \r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        \r\n        {activeStep > 0 && (\r\n          <Button onClick={handleBack}>Back</Button>\r\n        )}\r\n        \r\n        {activeStep < steps.length - 1 && (\r\n          <Button \r\n            onClick={handleNext}\r\n            variant=\"contained\"\r\n            disabled={\r\n              (activeStep === 0 && !(formik.values.name && formik.values.type && !formik.errors.name && !formik.errors.description))\r\n            }\r\n          >\r\n            Next\r\n          </Button>\r\n        )}\r\n        \r\n        {activeStep === steps.length - 1 && (\r\n          <Button \r\n            onClick={() => formik.handleSubmit()}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Create Integration\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nIntegrationCreationDialog.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default IntegrationCreationDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}