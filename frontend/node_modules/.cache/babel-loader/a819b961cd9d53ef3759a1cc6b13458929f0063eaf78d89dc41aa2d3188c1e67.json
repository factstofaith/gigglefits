{"ast":null,"code":"import React,{useState,useCallback,useEffect}from'react';import{useNavigate}from'react-router-dom';import{Container,Typography,Box,Paper,Button,Grid,Card,CardContent,CardActions,IconButton,Tooltip,Stack}from\"../design-system/optimized\";import{Add as AddIcon,PlayArrow as PlayIcon,Edit as EditIcon,Delete as DeleteIcon,Info as InfoIcon,Tour as TourIcon}from'@mui/icons-material';// Import components\nimport IntegrationCreationDialog from\"../components/integration/IntegrationCreationDialog\";import ContextualHelp from\"../components/common/ContextualHelp\";// Import custom hooks\nimport{useContextualHelp}from\"../hooks\";// Mock data for integrations\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MOCK_INTEGRATIONS=[{id:'1',name:'Sales Data Sync',description:'Sync sales data from CRM to data warehouse',type:'data_sync',status:'active',lastRun:'2025-03-29T14:32:00Z'},{id:'2',name:'Customer Data Transformation',description:'Transform customer data for analytics',type:'data_transformation',status:'inactive',lastRun:null}];/**\n * Integrations Page - Lists all available integrations\n */const IntegrationsPage=()=>{var _getHelp;const navigate=useNavigate();const[integrations,setIntegrations]=useState(MOCK_INTEGRATIONS);const[isCreateDialogOpen,setIsCreateDialogOpen]=useState(false);const{getHelp,startTour,isTourCompleted}=useContextualHelp('integration');// Start the tour when the page loads if it hasn't been completed\nuseEffect(()=>{// Auto-start the tour for first-time users if needed\nif(!isTourCompleted('basics')&&process.env.NODE_ENV==='development'){// In development, we'll just show the tour button\n// In production, we could auto-start: startTour('basics');\n}},[isTourCompleted,startTour]);// Handle creating a new integration\nconst handleCreateIntegration=useCallback(integrationData=>{// In a real app, you would send this to your backend\nconsole.log('Creating integration:',integrationData);// Add to our local state for now (mock)\nconst newIntegration={...integrationData,id:`${Date.now()}`,status:'inactive',lastRun:null};setIntegrations(prevIntegrations=>[...prevIntegrations,newIntegration]);// Navigate to the detail page for the new integration\nnavigate(`/integrations/${newIntegration.id}`);},[navigate]);// Handle navigating to integration details\nconst handleViewIntegration=useCallback(id=>{navigate(`/integrations/${id}`);},[navigate]);// Handle editing an integration\nconst handleEditIntegration=useCallback(id=>{navigate(`/integrations/${id}?edit=true`);},[navigate]);// Handle running an integration\nconst handleRunIntegration=useCallback(id=>{console.log('Running integration:',id);// In a real app, you would trigger the integration execution\n},[]);// Handle deleting an integration\nconst handleDeleteIntegration=useCallback(id=>{console.log('Deleting integration:',id);// Remove from our local state (mock)\nsetIntegrations(prevIntegrations=>prevIntegrations.filter(integration=>integration.id!==id));},[]);// Get type label\nconst getTypeLabel=typeValue=>{const types={'data_sync':'Data Synchronization','data_transformation':'Data Transformation','data_validation':'Data Validation','data_migration':'Data Migration'};return types[typeValue]||typeValue;};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsxs(Box,{my:4,children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",alignItems:\"center\",spacing:1,mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"Integrations\"}),/*#__PURE__*/_jsx(ContextualHelp,{id:\"integrations-page-help\",title:\"Integrations Overview\",content:((_getHelp=getHelp('overview'))===null||_getHelp===void 0?void 0:_getHelp.content)||\"Integrations allow you to connect different systems and define how data flows between them. You can create, edit, and manage all your integrations from this page.\",type:\"popover\",size:\"small\",relatedLinks:[{label:\"Learn more about integrations\",onClick:()=>console.log(\"Open integrations docs\")}]}),/*#__PURE__*/_jsx(Button,{variant:\"text\",size:\"small\",startIcon:/*#__PURE__*/_jsx(TourIcon,{}),onClick:()=>startTour('basics'),sx:{ml:'auto'},color:isTourCompleted('basics')?'success':'primary',children:isTourCompleted('basics')?'Tour Completed':'Take Tour'})]}),/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"flex-end\",mb:2,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setIsCreateDialogOpen(true),className:\"create-integration-button\",children:\"Create New Integration\"})}),integrations.length===0?/*#__PURE__*/_jsxs(Paper,{sx:{p:3,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"You don't have any integrations yet\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",gutterBottom:true,children:\"Create your first integration to get started\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>setIsCreateDialogOpen(true),sx:{mt:2},children:\"Create Integration\"})]}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,className:\"integration-list\",children:integrations.map(integration=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:1,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",sx:{flexGrow:1},children:integration.name}),/*#__PURE__*/_jsx(Box,{sx:{width:10,height:10,borderRadius:'50%',backgroundColor:integration.status==='active'?'success.main':'text.disabled',mr:1}})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",gutterBottom:true,children:integration.description}),/*#__PURE__*/_jsxs(Box,{mt:2,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"textSecondary\",children:[\"Type: \",getTypeLabel(integration.type)]}),integration.lastRun&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",display:\"block\",color:\"textSecondary\",children:[\"Last Run: \",new Date(integration.lastRun).toLocaleString()]})]})]}),/*#__PURE__*/_jsxs(CardActions,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View Details\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:()=>handleViewIntegration(integration.id),children:\"Details\"})}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1}}),/*#__PURE__*/_jsx(Tooltip,{title:\"Run Integration\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleRunIntegration(integration.id),children:/*#__PURE__*/_jsx(PlayIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Edit Integration\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleEditIntegration(integration.id),children:/*#__PURE__*/_jsx(EditIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Delete Integration\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:()=>handleDeleteIntegration(integration.id),children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\"})})})]})]})},integration.id))})]}),/*#__PURE__*/_jsx(IntegrationCreationDialog,{open:isCreateDialogOpen,onClose:()=>setIsCreateDialogOpen(false),onSubmit:handleCreateIntegration})]});};export default IntegrationsPage;","map":{"version":3,"names":["React","useState","useCallback","useEffect","useNavigate","Container","Typography","Box","Paper","Button","Grid","Card","CardContent","CardActions","IconButton","Tooltip","Stack","Add","AddIcon","PlayArrow","PlayIcon","Edit","EditIcon","Delete","DeleteIcon","Info","InfoIcon","Tour","TourIcon","IntegrationCreationDialog","ContextualHelp","useContextualHelp","jsx","_jsx","jsxs","_jsxs","MOCK_INTEGRATIONS","id","name","description","type","status","lastRun","IntegrationsPage","_getHelp","navigate","integrations","setIntegrations","isCreateDialogOpen","setIsCreateDialogOpen","getHelp","startTour","isTourCompleted","process","env","NODE_ENV","handleCreateIntegration","integrationData","console","log","newIntegration","Date","now","prevIntegrations","handleViewIntegration","handleEditIntegration","handleRunIntegration","handleDeleteIntegration","filter","integration","getTypeLabel","typeValue","types","maxWidth","children","my","direction","alignItems","spacing","mb","variant","component","title","content","size","relatedLinks","label","onClick","startIcon","sx","ml","color","display","justifyContent","className","length","p","textAlign","gutterBottom","mt","container","map","item","xs","sm","md","flexGrow","width","height","borderRadius","backgroundColor","mr","toLocaleString","fontSize","open","onClose","onSubmit"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/pages/IntegrationsPage.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  Typography, \n  Box, \n  Paper, \n  Button, \n  Grid, \n  Card, \n  CardContent, \n  CardActions,\n  IconButton,\n  Tooltip,\n  Stack,\n} from '../design-system/optimized';\nimport {\n  Add as AddIcon,\n  PlayArrow as PlayIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  Info as InfoIcon,\n  Tour as TourIcon,\n} from '@mui/icons-material';\n\n// Import components\nimport IntegrationCreationDialog from '../components/integration/IntegrationCreationDialog';\nimport ContextualHelp from '../components/common/ContextualHelp';\n\n// Import custom hooks\nimport { useContextualHelp } from '../hooks';\n\n// Mock data for integrations\nconst MOCK_INTEGRATIONS = [\n  {\n    id: '1',\n    name: 'Sales Data Sync',\n    description: 'Sync sales data from CRM to data warehouse',\n    type: 'data_sync',\n    status: 'active',\n    lastRun: '2025-03-29T14:32:00Z',\n  },\n  {\n    id: '2',\n    name: 'Customer Data Transformation',\n    description: 'Transform customer data for analytics',\n    type: 'data_transformation',\n    status: 'inactive',\n    lastRun: null,\n  }\n];\n\n/**\n * Integrations Page - Lists all available integrations\n */\nconst IntegrationsPage = () => {\n  const navigate = useNavigate();\n  const [integrations, setIntegrations] = useState(MOCK_INTEGRATIONS);\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const { \n    getHelp, \n    startTour, \n    isTourCompleted \n  } = useContextualHelp('integration');\n  \n  // Start the tour when the page loads if it hasn't been completed\n  useEffect(() => {\n    // Auto-start the tour for first-time users if needed\n    if (!isTourCompleted('basics') && process.env.NODE_ENV === 'development') {\n      // In development, we'll just show the tour button\n      // In production, we could auto-start: startTour('basics');\n    }\n  }, [isTourCompleted, startTour]);\n  \n  // Handle creating a new integration\n  const handleCreateIntegration = useCallback((integrationData) => {\n    // In a real app, you would send this to your backend\n    console.log('Creating integration:', integrationData);\n    \n    // Add to our local state for now (mock)\n    const newIntegration = {\n      ...integrationData,\n      id: `${Date.now()}`,\n      status: 'inactive',\n      lastRun: null,\n    };\n    \n    setIntegrations((prevIntegrations) => [...prevIntegrations, newIntegration]);\n    \n    // Navigate to the detail page for the new integration\n    navigate(`/integrations/${newIntegration.id}`);\n  }, [navigate]);\n  \n  // Handle navigating to integration details\n  const handleViewIntegration = useCallback((id) => {\n    navigate(`/integrations/${id}`);\n  }, [navigate]);\n  \n  // Handle editing an integration\n  const handleEditIntegration = useCallback((id) => {\n    navigate(`/integrations/${id}?edit=true`);\n  }, [navigate]);\n  \n  // Handle running an integration\n  const handleRunIntegration = useCallback((id) => {\n    console.log('Running integration:', id);\n    // In a real app, you would trigger the integration execution\n  }, []);\n  \n  // Handle deleting an integration\n  const handleDeleteIntegration = useCallback((id) => {\n    console.log('Deleting integration:', id);\n    \n    // Remove from our local state (mock)\n    setIntegrations((prevIntegrations) => \n      prevIntegrations.filter(integration => integration.id !== id)\n    );\n  }, []);\n  \n  // Get type label\n  const getTypeLabel = (typeValue) => {\n    const types = {\n      'data_sync': 'Data Synchronization',\n      'data_transformation': 'Data Transformation',\n      'data_validation': 'Data Validation',\n      'data_migration': 'Data Migration',\n    };\n    \n    return types[typeValue] || typeValue;\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box my={4}>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} mb={2}>\n          <Typography variant=\"h4\" component=\"h1\">\n            Integrations\n          </Typography>\n          <ContextualHelp\n            id=\"integrations-page-help\"\n            title=\"Integrations Overview\"\n            content={getHelp('overview')?.content || \"Integrations allow you to connect different systems and define how data flows between them. You can create, edit, and manage all your integrations from this page.\"}\n            type=\"popover\"\n            size=\"small\"\n            relatedLinks={[\n              { \n                label: \"Learn more about integrations\", \n                onClick: () => console.log(\"Open integrations docs\") \n              }\n            ]}\n          />\n          <Button\n            variant=\"text\"\n            size=\"small\"\n            startIcon={<TourIcon />}\n            onClick={() => startTour('basics')}\n            sx={{ ml: 'auto' }}\n            color={isTourCompleted('basics') ? 'success' : 'primary'}\n          >\n            {isTourCompleted('basics') ? 'Tour Completed' : 'Take Tour'}\n          </Button>\n        </Stack>\n        \n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            startIcon={<AddIcon />}\n            onClick={() => setIsCreateDialogOpen(true)}\n            className=\"create-integration-button\"\n          >\n            Create New Integration\n          </Button>\n        </Box>\n        \n        {integrations.length === 0 ? (\n          <Paper sx={{ p: 3, textAlign: 'center' }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              You don't have any integrations yet\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n              Create your first integration to get started\n            </Typography>\n            <Button \n              variant=\"outlined\" \n              color=\"primary\" \n              startIcon={<AddIcon />}\n              onClick={() => setIsCreateDialogOpen(true)}\n              sx={{ mt: 2 }}\n            >\n              Create Integration\n            </Button>\n          </Paper>\n        ) : (\n          <Grid container spacing={3} className=\"integration-list\">\n            {integrations.map((integration) => (\n              <Grid item xs={12} sm={6} md={4} key={integration.id}>\n                <Card>\n                  <CardContent>\n                    <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                      <Typography variant=\"h6\" component=\"h2\" sx={{ flexGrow: 1 }}>\n                        {integration.name}\n                      </Typography>\n                      <Box\n                        sx={{\n                          width: 10,\n                          height: 10,\n                          borderRadius: '50%',\n                          backgroundColor: integration.status === 'active' ? 'success.main' : 'text.disabled',\n                          mr: 1,\n                        }}\n                      />\n                    </Box>\n                    \n                    <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                      {integration.description}\n                    </Typography>\n                    \n                    <Box mt={2}>\n                      <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n                        Type: {getTypeLabel(integration.type)}\n                      </Typography>\n                      {integration.lastRun && (\n                        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n                          Last Run: {new Date(integration.lastRun).toLocaleString()}\n                        </Typography>\n                      )}\n                    </Box>\n                  </CardContent>\n                  <CardActions>\n                    <Tooltip title=\"View Details\">\n                      <Button \n                        size=\"small\" \n                        onClick={() => handleViewIntegration(integration.id)}\n                      >\n                        Details\n                      </Button>\n                    </Tooltip>\n                    <Box sx={{ flexGrow: 1 }} />\n                    <Tooltip title=\"Run Integration\">\n                      <IconButton \n                        size=\"small\"\n                        onClick={() => handleRunIntegration(integration.id)}\n                      >\n                        <PlayIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Edit Integration\">\n                      <IconButton \n                        size=\"small\"\n                        onClick={() => handleEditIntegration(integration.id)}\n                      >\n                        <EditIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Delete Integration\">\n                      <IconButton \n                        size=\"small\"\n                        onClick={() => handleDeleteIntegration(integration.id)}\n                      >\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n      </Box>\n      \n      {/* Integration Creation Dialog */}\n      <IntegrationCreationDialog\n        open={isCreateDialogOpen}\n        onClose={() => setIsCreateDialogOpen(false)}\n        onSubmit={handleCreateIntegration}\n      />\n    </Container>\n  );\n};\n\nexport default IntegrationsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}