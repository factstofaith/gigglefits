{"ast":null,"code":"/**\n * Azure Blob Container Browser Component\n *\n * A component for browsing and selecting Azure Blob containers and blobs.\n * Supports container creation, browsing, searching, and file operations.\n *\n * @component\n */import React,{useState,useEffect,useCallback}from'react';import{Box,Button,Card,CardContent,CardHeader,CircularProgress,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle,Divider,Grid,IconButton,InputAdornment,List,ListItem,ListItemIcon,ListItemSecondaryAction,ListItemText,Menu,MenuItem,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,TextField,Tooltip,Typography,Alert,AlertTitle,FormControlLabel,Checkbox,LinearProgress}from'@mui/material';import{AddCircleOutline as AddIcon,ArrowUpward as UpIcon,CloudUpload as UploadIcon,Delete as DeleteIcon,Download as DownloadIcon,Folder as FolderIcon,FolderOpen as FolderOpenIcon,InsertDriveFile as FileIcon,MoreVert as MoreVertIcon,Refresh as RefreshIcon,Search as SearchIcon,Visibility as ViewIcon,CreateNewFolder as CreateFolderIcon,CloudCircle as ContainerIcon,CheckCircle as CheckCircleIcon,Close as CloseIcon,Info as InfoIcon,Warning as WarningIcon,ErrorOutline as ErrorOutlineIcon}from'@mui/icons-material';/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB','TB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */const formatDate=dateString=>{if(!dateString)return'Unknown';const date=new Date(dateString);return date.toLocaleString();};/**\n * Azure Blob Container Browser Component\n */const AzureBlobContainerBrowser=_ref=>{let{config,onSelectContainer,onSelectBlob,readOnly=false,selectedContainer='',selectedPath=''}=_ref;// State for containers and blobs\nconst[containers,setContainers]=useState([]);const[blobs,setBlobs]=useState([]);const[currentPath,setCurrentPath]=useState(selectedPath||'');const[pathHistory,setPathHistory]=useState([]);// State for loading indicators\nconst[loading,setLoading]=useState(false);const[containerLoading,setContainerLoading]=useState(false);// Search state\nconst[searchTerm,setSearchTerm]=useState('');const[searchResults,setSearchResults]=useState([]);const[isSearching,setIsSearching]=useState(false);// Dialog states\nconst[newContainerDialogOpen,setNewContainerDialogOpen]=useState(false);const[newContainerName,setNewContainerName]=useState('');const[newFolderDialogOpen,setNewFolderDialogOpen]=useState(false);const[newFolderName,setNewFolderName]=useState('');const[confirmDeleteDialogOpen,setConfirmDeleteDialogOpen]=useState(false);const[itemToDelete,setItemToDelete]=useState(null);const[fileUploadDialogOpen,setFileUploadDialogOpen]=useState(false);const[selectedFile,setSelectedFile]=useState(null);const[filesToUpload,setFilesToUpload]=useState([]);const[currentUploadIndex,setCurrentUploadIndex]=useState(0);const[uploadProgress,setUploadProgress]=useState(0);const[uploadOptions,setUploadOptions]=useState({overwriteExisting:true,calculateMD5:false});// Context menu state\nconst[contextMenuPos,setContextMenuPos]=useState(null);const[selectedItem,setSelectedItem]=useState(null);// File viewer state\nconst[fileViewerOpen,setFileViewerOpen]=useState(false);const[fileViewUrl,setFileViewUrl]=useState('');const[fileViewType,setFileViewType]=useState('');// Error state\nconst[error,setError]=useState(null);/**\n   * Load containers from Azure\n   */const loadContainers=useCallback(async()=>{if(!config)return;setContainerLoading(true);setError(null);try{// Simulated API call for now - in real implementation, this would call an API\n// using the config parameters\nconsole.log('Loading containers with config:',config);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{resolve({status:'success',containers:[{name:'container1',properties:{lastModified:new Date().toISOString()}},{name:'container2',properties:{lastModified:new Date().toISOString()}},{name:'datasets',properties:{lastModified:new Date().toISOString()}},{name:'exports',properties:{lastModified:new Date().toISOString()}},{name:'imports',properties:{lastModified:new Date().toISOString()}}]});},1000));if(response.status==='success'){setContainers(response.containers);// If a container is already selected, keep it selected\nif(selectedContainer&&response.containers.some(c=>c.name===selectedContainer)){loadBlobs(selectedContainer,selectedPath||'');}}else{setError(response.message||'Failed to load containers');}}catch(err){console.error('Error loading containers:',err);setError(err.message||'An error occurred while loading containers');}finally{setContainerLoading(false);}},[config,selectedContainer,selectedPath]);/**\n   * Load blobs from a container\n   */const loadBlobs=useCallback(async function(containerName){let path=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';if(!config||!containerName)return;setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Loading blobs from container: ${containerName}, path: ${path}`);// Simulate API response with mock data based on path\nconst response=await new Promise(resolve=>setTimeout(()=>{// Generate different mock responses based on the path\nlet mockBlobs=[];if(path===''){// Root directory\nmockBlobs=[{name:'folder1/',properties:{contentLength:0,lastModified:new Date(Date.now()-86400000).toISOString(),contentType:'application/directory'},type:'directory'},{name:'folder2/',properties:{contentLength:0,lastModified:new Date(Date.now()-172800000).toISOString(),contentType:'application/directory'},type:'directory'},{name:'data/',properties:{contentLength:0,lastModified:new Date(Date.now()-259200000).toISOString(),contentType:'application/directory'},type:'directory'},{name:'sample.csv',properties:{contentLength:1024,lastModified:new Date(Date.now()-345600000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'readme.txt',properties:{contentLength:512,lastModified:new Date(Date.now()-432000000).toISOString(),contentType:'text/plain'},type:'blob'}];}else if(path==='folder1/'){// Folder 1 contents\nmockBlobs=[{name:'folder1/subfolder/',properties:{contentLength:0,lastModified:new Date(Date.now()-518400000).toISOString(),contentType:'application/directory'},type:'directory'},{name:'folder1/data1.json',properties:{contentLength:2048,lastModified:new Date(Date.now()-604800000).toISOString(),contentType:'application/json'},type:'blob'}];}else if(path==='folder1/subfolder/'){// Subfolder contents\nmockBlobs=[{name:'folder1/subfolder/deep.xml',properties:{contentLength:4096,lastModified:new Date(Date.now()-691200000).toISOString(),contentType:'application/xml'},type:'blob'}];}else if(path==='folder2/'){// Folder 2 contents\nmockBlobs=[{name:'folder2/image.png',properties:{contentLength:102400,lastModified:new Date(Date.now()-777600000).toISOString(),contentType:'image/png'},type:'blob'},{name:'folder2/document.pdf',properties:{contentLength:204800,lastModified:new Date(Date.now()-864000000).toISOString(),contentType:'application/pdf'},type:'blob'}];}else if(path==='data/'){// Data folder contents\nmockBlobs=[{name:'data/dataset1.csv',properties:{contentLength:5120,lastModified:new Date(Date.now()-950400000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'data/dataset2.csv',properties:{contentLength:6144,lastModified:new Date(Date.now()-1036800000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'data/dataset3.xlsx',properties:{contentLength:8192,lastModified:new Date(Date.now()-1123200000).toISOString(),contentType:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'},type:'blob'}];}resolve({status:'success',blobs:mockBlobs,containerName:containerName,path:path});},1000));if(response.status==='success'){// Update current container and path\nif(containerName!==selectedContainer){onSelectContainer(containerName);setPathHistory([]);}setBlobs(response.blobs);setCurrentPath(path);// If this is a new path, add it to history\nif(path!==currentPath){setPathHistory(prevHistory=>{// Add the previous path to history only if it's not empty\nif(currentPath){return[...prevHistory,currentPath];}return prevHistory;});}}else{setError(response.message||'Failed to load blobs');}}catch(err){console.error('Error loading blobs:',err);setError(err.message||'An error occurred while loading blobs');}finally{setLoading(false);setIsSearching(false);}},[config,currentPath,onSelectContainer,selectedContainer]);/**\n   * Navigate to a folder or blob\n   */const navigateTo=useCallback(item=>{if(item.type==='directory'){// Extract the folder path from the name\nconst fullPath=item.name;// Load blobs from the folder\nloadBlobs(selectedContainer,fullPath);}else if(item.type==='blob'){// Select the blob\nonSelectBlob({containerName:selectedContainer,path:currentPath,blobName:item.name,blobProperties:item.properties});}},[currentPath,loadBlobs,onSelectBlob,selectedContainer]);/**\n   * Go up one level in the path\n   */const navigateUp=useCallback(()=>{if(pathHistory.length>0){// Get the previous path\nconst previousPath=pathHistory[pathHistory.length-1];// Update the path history\nsetPathHistory(prevHistory=>prevHistory.slice(0,-1));// Load blobs from the previous path\nloadBlobs(selectedContainer,previousPath);}else{// If we're at the root of a container, go back to container list\nsetBlobs([]);setCurrentPath('');onSelectContainer('');}},[loadBlobs,onSelectContainer,pathHistory,selectedContainer]);/**\n   * Search for blobs\n   */const searchBlobs=useCallback(async()=>{if(!searchTerm||!selectedContainer)return;setIsSearching(true);setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Searching for \"${searchTerm}\" in container: ${selectedContainer}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{// Generate mock search results\nconst allPossibleBlobs=[{name:'folder1/data1.json',properties:{contentLength:2048,lastModified:new Date(Date.now()-604800000).toISOString(),contentType:'application/json'},type:'blob'},{name:'folder1/subfolder/deep.xml',properties:{contentLength:4096,lastModified:new Date(Date.now()-691200000).toISOString(),contentType:'application/xml'},type:'blob'},{name:'folder2/image.png',properties:{contentLength:102400,lastModified:new Date(Date.now()-777600000).toISOString(),contentType:'image/png'},type:'blob'},{name:'folder2/document.pdf',properties:{contentLength:204800,lastModified:new Date(Date.now()-864000000).toISOString(),contentType:'application/pdf'},type:'blob'},{name:'data/dataset1.csv',properties:{contentLength:5120,lastModified:new Date(Date.now()-950400000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'data/dataset2.csv',properties:{contentLength:6144,lastModified:new Date(Date.now()-1036800000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'data/dataset3.xlsx',properties:{contentLength:8192,lastModified:new Date(Date.now()-1123200000).toISOString(),contentType:'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'},type:'blob'},{name:'sample.csv',properties:{contentLength:1024,lastModified:new Date(Date.now()-345600000).toISOString(),contentType:'text/csv'},type:'blob'},{name:'readme.txt',properties:{contentLength:512,lastModified:new Date(Date.now()-432000000).toISOString(),contentType:'text/plain'},type:'blob'}];// Filter by search term\nconst searchLower=searchTerm.toLowerCase();const results=allPossibleBlobs.filter(blob=>blob.name.toLowerCase().includes(searchLower));resolve({status:'success',blobs:results});},1000));if(response.status==='success'){setSearchResults(response.blobs);}else{setError(response.message||'Failed to search blobs');}}catch(err){console.error('Error searching blobs:',err);setError(err.message||'An error occurred while searching blobs');}finally{setLoading(false);}},[searchTerm,selectedContainer]);/**\n   * Clear search and return to regular browsing\n   */const clearSearch=useCallback(()=>{setSearchTerm('');setSearchResults([]);setIsSearching(false);// Reload current path\nif(selectedContainer){loadBlobs(selectedContainer,currentPath);}},[currentPath,loadBlobs,selectedContainer]);/**\n   * Create a new container\n   */const createContainer=useCallback(async()=>{if(!newContainerName)return;setLoading(true);setError(null);try{// Simulate API call\nconsole.log(`Creating container: ${newContainerName}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{if(newContainerName.includes(' ')){resolve({status:'error',message:'Container name cannot contain spaces'});}else if(containers.some(c=>c.name===newContainerName)){resolve({status:'error',message:'Container already exists'});}else{resolve({status:'success',container:{name:newContainerName,properties:{lastModified:new Date().toISOString()}}});}},1000));if(response.status==='success'){// Add new container to list\nsetContainers(prevContainers=>[...prevContainers,response.container]);// Close dialog\nsetNewContainerDialogOpen(false);setNewContainerName('');// Select the new container\nonSelectContainer(response.container.name);loadBlobs(response.container.name,'');}else{setError(response.message||'Failed to create container');}}catch(err){console.error('Error creating container:',err);setError(err.message||'An error occurred while creating container');}finally{setLoading(false);}},[containers,loadBlobs,newContainerName,onSelectContainer]);/**\n   * Create a new folder\n   */const createFolder=useCallback(async()=>{if(!newFolderName||!selectedContainer)return;setLoading(true);setError(null);try{// Construct the full path\nconst fullPath=currentPath?`${currentPath}${newFolderName}/`:`${newFolderName}/`;// Simulate API call\nconsole.log(`Creating folder: ${fullPath} in container: ${selectedContainer}`);// Simulate API response\nconst response=await new Promise(resolve=>setTimeout(()=>{resolve({status:'success',folder:{name:fullPath,properties:{contentLength:0,lastModified:new Date().toISOString(),contentType:'application/directory'},type:'directory'}});},1000));if(response.status==='success'){// Add new folder to list\nsetBlobs(prevBlobs=>[...prevBlobs,response.folder]);// Close dialog\nsetNewFolderDialogOpen(false);setNewFolderName('');}else{setError(response.message||'Failed to create folder');}}catch(err){console.error('Error creating folder:',err);setError(err.message||'An error occurred while creating folder');}finally{setLoading(false);}},[currentPath,newFolderName,selectedContainer]);/**\n   * Delete a container, folder, or blob\n   */const deleteItem=useCallback(async()=>{if(!itemToDelete)return;setLoading(true);setError(null);try{console.log(`Deleting ${itemToDelete.type}: ${itemToDelete.name}`);// Simulate API call\nconst response=await new Promise(resolve=>setTimeout(()=>{resolve({status:'success'});},1000));if(response.status==='success'){if(itemToDelete.type==='container'){// Remove container from list\nsetContainers(prevContainers=>prevContainers.filter(c=>c.name!==itemToDelete.name));// If this was the selected container, clear selection\nif(selectedContainer===itemToDelete.name){onSelectContainer('');setBlobs([]);setCurrentPath('');}}else{// Remove blob or folder from list\nsetBlobs(prevBlobs=>prevBlobs.filter(b=>b.name!==itemToDelete.name));}// Close dialog\nsetConfirmDeleteDialogOpen(false);setItemToDelete(null);}else{setError(response.message||'Failed to delete item');}}catch(err){console.error('Error deleting item:',err);setError(err.message||'An error occurred while deleting item');}finally{setLoading(false);}},[itemToDelete,onSelectContainer,selectedContainer]);/**\n   * Process file selection for upload\n   */const processFileSelection=useCallback(files=>{if(!files||files.length===0)return;// If it's a FileList (from input), convert to array\nconst fileArray=Array.from(files);if(fileArray.length===1){// Single file selection - use the existing workflow\nsetSelectedFile(fileArray[0]);setFilesToUpload([]);}else{// Multiple file selection\nsetFilesToUpload(fileArray);setSelectedFile(fileArray[0]);// Show the first file in preview\nsetCurrentUploadIndex(0);}},[]);/**\n   * Upload a single file\n   */const uploadSingleFile=useCallback(async file=>{if(!file||!selectedContainer)return false;try{// Construct the full path\nconst fullPath=currentPath?`${currentPath}${file.name}`:file.name;console.log(`Uploading file: ${fullPath} to container: ${selectedContainer}`);// Simulate upload progress with more realistic behavior\nlet progress=0;const uploadProgressInterval=setInterval(()=>{// Realistic upload progress simulation\n// First 80% is linear, last 20% is slower to simulate server processing\nif(progress<80){progress+=Math.random()*5;// Random increment for realism\n}else if(progress<95){progress+=Math.random()*0.5;// Slower near the end\n}else if(progress<99){progress+=0.1;// Very slow for the last bit\n}if(progress>=100){clearInterval(uploadProgressInterval);progress=100;}setUploadProgress(Math.min(Math.floor(progress),100));},200);// Simulate API response with file validation and upload behavior\nconst response=await new Promise(resolve=>{// Calculate simulated upload time based on file size for realism\n// Larger files take longer to upload\nconst baseUploadTime=1000;// Minimum 1 second\nconst sizeBasedTime=Math.min(file.size/10000,5000);// Up to 5 seconds more for large files\nsetTimeout(()=>{clearInterval(uploadProgressInterval);setUploadProgress(100);// In a real implementation, we would check for errors\n// like size limits, permission issues, etc.\nresolve({status:'success',blob:{name:fullPath,properties:{contentLength:file.size,lastModified:new Date().toISOString(),contentType:file.type||'application/octet-stream'},type:'blob'}});},baseUploadTime+sizeBasedTime);});if(response.status==='success'){// Add new file to list if we're in the current path\nsetBlobs(prevBlobs=>[...prevBlobs,response.blob]);return true;}else{setError(response.message||`Failed to upload file: ${file.name}`);return false;}}catch(err){console.error(`Error uploading file ${file.name}:`,err);setError(err.message||`An error occurred while uploading file: ${file.name}`);return false;}},[currentPath,selectedContainer]);/**\n   * Upload files (single file or batch upload)\n   */const uploadFile=useCallback(async()=>{if(!selectedContainer)return;setLoading(true);setError(null);try{if(filesToUpload.length>0){// Batch upload workflow\nlet successCount=0;// Process each file in sequence\nfor(let i=0;i<filesToUpload.length;i++){setCurrentUploadIndex(i);setSelectedFile(filesToUpload[i]);// Update preview to current file\nsetUploadProgress(0);const success=await uploadSingleFile(filesToUpload[i]);if(success){successCount++;}// Short pause between files\nif(i<filesToUpload.length-1){await new Promise(resolve=>setTimeout(resolve,500));}}// Show completion message\nconsole.log(`Uploaded ${successCount} of ${filesToUpload.length} files successfully`);// Close dialog after batch upload\nif(successCount>0){setTimeout(()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setFilesToUpload([]);setUploadProgress(0);},1500);}}else if(selectedFile){// Single file upload workflow\nconst success=await uploadSingleFile(selectedFile);// Close dialog after successful upload\nif(success){setTimeout(()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);},1500);}}}catch(err){console.error('Error in upload process:',err);setError(err.message||'An unexpected error occurred during upload');}finally{setLoading(false);}},[currentPath,selectedContainer,selectedFile,filesToUpload,uploadSingleFile]);/**\n   * Download a blob\n   */const downloadBlob=useCallback(item=>{if(!item||!selectedContainer)return;console.log(`Downloading blob: ${item.name} from container: ${selectedContainer}`);// In a real implementation, this would create a download link using the blob URL\n// For now, we'll just simulate it\nalert(`Simulated download of file: ${item.name}`);},[selectedContainer]);/**\n   * View/preview a blob\n   */const viewBlob=useCallback(item=>{var _item$properties;if(!item||!selectedContainer)return;console.log(`Viewing blob: ${item.name} from container: ${selectedContainer}`);// In a real implementation, this would create a URL for the blob content\n// For now, we'll use a placeholder\nsetFileViewUrl(`https://example.com/preview/${selectedContainer}/${item.name}`);// Set the file type based on contentType or extension\nconst contentType=((_item$properties=item.properties)===null||_item$properties===void 0?void 0:_item$properties.contentType)||'';setFileViewType(contentType);// Open the viewer\nsetFileViewerOpen(true);},[selectedContainer]);/**\n   * Handle context menu opening\n   */const handleContextMenu=useCallback((event,item)=>{event.preventDefault();// Skip if in read-only mode\nif(readOnly)return;setContextMenuPos({x:event.clientX,y:event.clientY});setSelectedItem(item);},[readOnly]);/**\n   * Handle context menu closing\n   */const handleContextMenuClose=useCallback(()=>{setContextMenuPos(null);setSelectedItem(null);},[]);// Load containers on mount\nuseEffect(()=>{if(config){loadContainers();}},[config,loadContainers]);// File content render functions with enhanced preview\nconst renderFilePreview=(url,contentType)=>{var _selectedItem$propert,_selectedItem$propert2;// Import FilePreview component for advanced file previewing\nconst FilePreview=require(\"../../common/FilePreview\").default;// Generate a mock file object with the selected item's data\nconst fileObj=selectedItem?{name:getDisplayName(selectedItem.name,selectedItem.type),type:contentType,size:((_selectedItem$propert=selectedItem.properties)===null||_selectedItem$propert===void 0?void 0:_selectedItem$propert.contentLength)||0,lastModified:(_selectedItem$propert2=selectedItem.properties)===null||_selectedItem$propert2===void 0?void 0:_selectedItem$propert2.lastModified}:null;// Generate simulated content for text files\nconst generateSimulatedContent=()=>{if(contentType==='text/plain'){var _selectedItem$propert3,_selectedItem$propert4;return`This is a simulated preview of a plain text file.\\n\\nFilename: ${selectedItem.name}\\nSize: ${formatFileSize(((_selectedItem$propert3=selectedItem.properties)===null||_selectedItem$propert3===void 0?void 0:_selectedItem$propert3.contentLength)||0)}\\nLast Modified: ${formatDate((_selectedItem$propert4=selectedItem.properties)===null||_selectedItem$propert4===void 0?void 0:_selectedItem$propert4.lastModified)}\\n\\nIn a production environment, this would fetch the actual file content from the Azure Blob storage.`;}if(contentType==='text/csv'){return`id,name,email,department\\n1,\"John Smith\",john.smith@example.com,Marketing\\n2,\"Jane Doe\",jane.doe@example.com,Engineering\\n3,\"Robert Johnson\",robert.johnson@example.com,Finance\\n4,\"Sarah Williams\",sarah.williams@example.com,Human Resources\\n5,\"Michael Brown\",michael.brown@example.com,Sales`;}if(contentType==='application/json'){return JSON.stringify({\"id\":12345,\"name\":\"Sample JSON Data\",\"items\":[{\"id\":1,\"value\":\"First item\"},{\"id\":2,\"value\":\"Second item\"},{\"id\":3,\"value\":\"Third item\"}],\"metadata\":{\"created\":new Date().toISOString(),\"version\":\"1.0.0\",\"source\":\"Azure Blob Storage\"}},null,2);}if(contentType==='application/xml'||contentType==='text/xml'){return`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n  <item id=\"1\">\\n    <name>First Item</name>\\n    <value>100</value>\\n  </item>\\n  <item id=\"2\">\\n    <name>Second Item</name>\\n    <value>200</value>\\n  </item>\\n  <metadata>\\n    <created>${new Date().toISOString()}</created>\\n    <source>Azure Blob Storage</source>\\n  </metadata>\\n</root>`;}// Default text content\nreturn`This is a simulated preview of content type: ${contentType}\\n\\nIn a production environment, this would display the actual file content.`;};// Generate content for text-based files\nconst content=contentType==='text/plain'||contentType==='text/csv'||contentType==='application/json'||contentType==='application/xml'||contentType==='text/xml'?generateSimulatedContent():null;return/*#__PURE__*/_jsx(FilePreview,{file:fileObj,url:url,content:content,mimeType:contentType,filename:fileObj===null||fileObj===void 0?void 0:fileObj.name,onDownload:()=>downloadBlob(selectedItem),maxHeight:\"600px\",fullWidth:true});};// Get color for file icon based on content type\nconst getIconColorForFileType=contentType=>{if(contentType.startsWith('image/')){return'success.main';// Green for images\n}else if(contentType.startsWith('text/')){return'info.main';// Blue for text files\n}else if(contentType.includes('spreadsheet')||contentType.includes('excel')){return'success.dark';// Dark green for spreadsheets\n}else if(contentType.includes('pdf')){return'error.main';// Red for PDFs\n}else if(contentType.includes('zip')||contentType.includes('compressed')){return'warning.dark';// Dark yellow for archives\n}else if(contentType.includes('json')||contentType.includes('xml')){return'secondary.main';// Purple for data files\n}else{return'info.main';// Default blue\n}};// Item name display function (truncates long paths)\nconst getDisplayName=(name,type)=>{if(type==='container'){return name;}else if(type==='directory'){// For directories, extract the last folder name\nconst parts=name.split('/');return parts[parts.length-2]||name;// Account for trailing slash\n}else{// For blobs, extract filename from potentially nested path\nconst parts=name.split('/');return parts[parts.length-1]||name;}};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',height:'100%'},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',flexGrow:1,overflow:'hidden'},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',flexWrap:'nowrap',overflow:'hidden'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexShrink:0,whiteSpace:'nowrap'},children:selectedContainer?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Back to containers\",children:/*#__PURE__*/_jsx(Box,{component:\"span\",onClick:()=>onSelectContainer(''),sx:{cursor:'pointer',color:'primary.main','&:hover':{textDecoration:'underline'}},children:\"Containers\"})}),' / ',/*#__PURE__*/_jsx(Tooltip,{title:`Container: ${selectedContainer}`,children:/*#__PURE__*/_jsx(\"strong\",{children:selectedContainer})})]}):'Azure Blob Containers'}),selectedContainer&&currentPath&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',alignItems:'center',ml:1,overflow:'hidden',flexWrap:'nowrap'},children:/*#__PURE__*/_jsxs(Typography,{component:\"span\",variant:\"body2\",sx:{display:'flex',alignItems:'center',color:'text.secondary',overflow:'hidden',textOverflow:'ellipsis',whiteSpace:'nowrap'},children:[' / ',currentPath.split('/').filter(Boolean).map((segment,index,array)=>{// Create a path up to this segment\nconst pathUpToSegment=array.slice(0,index+1).join('/')+'/';return/*#__PURE__*/_jsxs(React.Fragment,{children:[index>0&&' / ',/*#__PURE__*/_jsx(Tooltip,{title:`Navigate to ${segment}`,children:/*#__PURE__*/_jsx(Box,{component:\"span\",onClick:()=>loadBlobs(selectedContainer,pathUpToSegment),sx:{cursor:'pointer',color:'primary.main',flexShrink:0,'&:hover':{textDecoration:'underline'}},children:segment})})]},index);})]})})]})}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',ml:2},children:[selectedContainer&&/*#__PURE__*/_jsx(Tooltip,{title:\"Go up\",children:/*#__PURE__*/_jsx(IconButton,{onClick:navigateUp,disabled:loading,size:\"small\",children:/*#__PURE__*/_jsx(UpIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>selectedContainer?loadBlobs(selectedContainer,currentPath):loadContainers(),disabled:loading,size:\"small\",children:/*#__PURE__*/_jsx(RefreshIcon,{})})}),!readOnly&&/*#__PURE__*/_jsxs(_Fragment,{children:[selectedContainer?/*#__PURE__*/_jsx(Tooltip,{title:\"Upload File\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setFileUploadDialogOpen(true),disabled:loading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(UploadIcon,{})})}):/*#__PURE__*/_jsx(Tooltip,{title:\"New Container\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setNewContainerDialogOpen(true),disabled:loading||containerLoading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(AddIcon,{})})}),selectedContainer&&/*#__PURE__*/_jsx(Tooltip,{title:\"New Folder\",children:/*#__PURE__*/_jsx(IconButton,{onClick:()=>setNewFolderDialogOpen(true),disabled:loading,size:\"small\",color:\"primary\",children:/*#__PURE__*/_jsx(CreateFolderIcon,{})})})]})]})]}),selectedContainer&&/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,placeholder:\"Search blobs...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),disabled:loading,size:\"small\",InputProps:{startAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"start\",children:/*#__PURE__*/_jsx(SearchIcon,{})}),endAdornment:isSearching&&/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(Button,{size:\"small\",onClick:clearSearch,disabled:loading,children:\"Clear\"})})},onKeyPress:e=>{if(e.key==='Enter'&&searchTerm){searchBlobs();}}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:searchBlobs,disabled:loading||!searchTerm,sx:{ml:1},children:\"Search\"})]}),error&&/*#__PURE__*/_jsxs(Typography,{color:\"error\",sx:{mb:2},children:[\"Error: \",error]}),containerLoading||loading?/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',py:4},children:/*#__PURE__*/_jsx(CircularProgress,{})}):selectedContainer?/*#__PURE__*/// Blob list\n_jsx(TableContainer,{component:Paper,sx:{flexGrow:1,overflow:'auto'},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Size\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Last Modified\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:(isSearching?searchResults:blobs).length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:4,align:\"center\",children:isSearching?'No search results':'No items in this location'})}):(isSearching?searchResults:blobs).map(item=>{var _item$properties2,_item$properties3,_item$properties4,_item$properties5;return/*#__PURE__*/_jsxs(TableRow,{hover:true,onClick:()=>navigateTo(item),sx:{cursor:'pointer','&:hover':{backgroundColor:'action.hover'}},onContextMenu:e=>handleContextMenu(e,item),children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:36},children:item.type==='directory'?/*#__PURE__*/_jsx(FolderIcon,{color:\"primary\"}):/*#__PURE__*/_jsx(FileIcon,{sx:{color:getIconColorForFileType(((_item$properties2=item.properties)===null||_item$properties2===void 0?void 0:_item$properties2.contentType)||'')}})}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:getDisplayName(item.name,item.type)}),item.type==='blob'&&((_item$properties3=item.properties)===null||_item$properties3===void 0?void 0:_item$properties3.contentType)&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"text.secondary\",children:item.properties.contentType})]})]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:item.type==='directory'?'-':/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontFamily:'monospace',fontWeight:500,color:'text.secondary'},children:formatFileSize(((_item$properties4=item.properties)===null||_item$properties4===void 0?void 0:_item$properties4.contentLength)||0)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:formatDate((_item$properties5=item.properties)===null||_item$properties5===void 0?void 0:_item$properties5.lastModified)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end',alignItems:'center'},children:[item.type==='blob'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Tooltip,{title:\"View\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();viewBlob(item);},children:/*#__PURE__*/_jsx(ViewIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Download\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();downloadBlob(item);},children:/*#__PURE__*/_jsx(DownloadIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Select this file\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();onSelectBlob({containerName:selectedContainer,path:currentPath,blobName:item.name,blobProperties:item.properties});},children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\"})})})]}),!readOnly&&/*#__PURE__*/_jsx(Tooltip,{title:\"More actions\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();handleContextMenu(e,item);},children:/*#__PURE__*/_jsx(MoreVertIcon,{fontSize:\"small\"})})})]})})]},item.name);})})]})}):/*#__PURE__*/// Container list\n_jsx(TableContainer,{component:Paper,sx:{flexGrow:1,overflow:'auto'},children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Container Name\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Last Modified\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Actions\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:containers.length===0?/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:3,align:\"center\",children:\"No containers found\"})}):containers.map(container=>{var _container$properties;return/*#__PURE__*/_jsxs(TableRow,{hover:true,onClick:()=>loadBlobs(container.name,''),sx:{cursor:'pointer','&:hover':{backgroundColor:'action.hover'}},onContextMenu:e=>handleContextMenu(e,{...container,type:'container'}),children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(ListItemIcon,{sx:{minWidth:36},children:/*#__PURE__*/_jsx(ContainerIcon,{color:\"primary\"})}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{fontWeight:500},children:container.name})]})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:formatDate((_container$properties=container.properties)===null||_container$properties===void 0?void 0:_container$properties.lastModified)})}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'flex-end',alignItems:'center'},children:[/*#__PURE__*/_jsx(Tooltip,{title:\"Browse container\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();loadBlobs(container.name,'');},children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\"})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Select container\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",color:\"primary\",onClick:e=>{e.stopPropagation();onSelectContainer(container.name);},children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\"})})}),!readOnly&&/*#__PURE__*/_jsx(Tooltip,{title:\"More actions\",children:/*#__PURE__*/_jsx(IconButton,{size:\"small\",onClick:e=>{e.stopPropagation();handleContextMenu(e,{...container,type:'container'});},children:/*#__PURE__*/_jsx(MoreVertIcon,{fontSize:\"small\"})})})]})})]},container.name);})})]})}),/*#__PURE__*/_jsxs(Menu,{open:Boolean(contextMenuPos),onClose:handleContextMenuClose,anchorReference:\"anchorPosition\",anchorPosition:contextMenuPos?{top:contextMenuPos.y,left:contextMenuPos.x}:undefined,children:[selectedItem&&selectedItem.type==='container'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{loadBlobs(selectedItem.name,'');handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\",color:\"primary\"})}),\"Browse container\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{onSelectContainer(selectedItem.name);handleContextMenuClose();},divider:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\",color:\"primary\"})}),\"Select container\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete container\"]})]}),selectedItem&&selectedItem.type==='directory'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{navigateTo(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FolderOpenIcon,{fontSize:\"small\",color:\"primary\"})}),\"Open folder\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete folder\"]})]}),selectedItem&&selectedItem.type==='blob'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{viewBlob(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(ViewIcon,{fontSize:\"small\"})}),\"View\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{downloadBlob(selectedItem);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DownloadIcon,{fontSize:\"small\"})}),\"Download\"]}),/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{onSelectBlob({containerName:selectedContainer,path:currentPath,blobName:selectedItem.name,blobProperties:selectedItem.properties});handleContextMenuClose();},divider:true,children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(CheckCircleIcon,{fontSize:\"small\",color:\"primary\"})}),\"Select this file\"]}),!readOnly&&/*#__PURE__*/_jsxs(MenuItem,{onClick:()=>{setItemToDelete(selectedItem);setConfirmDeleteDialogOpen(true);handleContextMenuClose();},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(DeleteIcon,{fontSize:\"small\",color:\"error\"})}),\"Delete\"]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:newContainerDialogOpen,onClose:()=>setNewContainerDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create New Container\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Enter a name for the new container. Container names must be lowercase letters, numbers, or hyphens.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"container-name\",label:\"Container Name\",type:\"text\",fullWidth:true,value:newContainerName,onChange:e=>setNewContainerName(e.target.value),error:Boolean(error),helperText:error,disabled:loading})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNewContainerDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:createContainer,color:\"primary\",disabled:loading||!newContainerName,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Create'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:newFolderDialogOpen,onClose:()=>setNewFolderDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Create New Folder\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(DialogContentText,{children:\"Enter a name for the new folder.\"}),/*#__PURE__*/_jsx(TextField,{autoFocus:true,margin:\"dense\",id:\"folder-name\",label:\"Folder Name\",type:\"text\",fullWidth:true,value:newFolderName,onChange:e=>setNewFolderName(e.target.value),error:Boolean(error),helperText:error,disabled:loading})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setNewFolderDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:createFolder,color:\"primary\",disabled:loading||!newFolderName,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Create'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:confirmDeleteDialogOpen,onClose:()=>setConfirmDeleteDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Delete\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Are you sure you want to delete the \",(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='container'?'container':(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='directory'?'folder':'file',\":\",/*#__PURE__*/_jsx(Box,{component:\"span\",sx:{fontWeight:'bold',display:'block',mt:1},children:itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.name}),(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='container'&&/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:{mt:2},children:\"This will delete all blobs in the container!\"}),(itemToDelete===null||itemToDelete===void 0?void 0:itemToDelete.type)==='directory'&&/*#__PURE__*/_jsx(Typography,{color:\"error\",sx:{mt:2},children:\"This will delete all contents of the folder!\"})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setConfirmDeleteDialogOpen(false),disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:deleteItem,color:\"error\",disabled:loading,children:loading?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Delete'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:fileUploadDialogOpen,onClose:()=>{if(!loading){setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);}},fullWidth:true,maxWidth:\"md\",children:[/*#__PURE__*/_jsx(DialogTitle,{children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',justifyContent:'space-between'},children:[\"Upload Files to Azure Blob Storage\",/*#__PURE__*/_jsx(IconButton,{onClick:()=>{if(!loading){setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);}},children:/*#__PURE__*/_jsx(CloseIcon,{})})]})}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Upload Location:\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:1.5,mb:2,bgcolor:'background.default'},children:/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(ContainerIcon,{color:\"primary\",sx:{mr:1}}),/*#__PURE__*/_jsxs(Typography,{sx:{fontWeight:'medium'},children:[selectedContainer,currentPath?`/${currentPath}`:'']})]})}),/*#__PURE__*/_jsxs(Box,{sx:{border:'2px dashed',borderColor:'divider',borderRadius:1,p:3,mb:3,textAlign:'center',transition:'all 0.2s ease','&:hover':{borderColor:'primary.main',bgcolor:'action.hover'},position:'relative'},onDragOver:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor=theme=>theme.palette.primary.main;e.currentTarget.style.backgroundColor=theme=>theme.palette.action.hover;},onDragLeave:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor='';e.currentTarget.style.backgroundColor='';},onDrop:e=>{e.preventDefault();e.stopPropagation();e.currentTarget.style.borderColor='';e.currentTarget.style.backgroundColor='';if(e.dataTransfer.files&&e.dataTransfer.files.length>0){// Process all dropped files\nprocessFileSelection(e.dataTransfer.files);}},children:[/*#__PURE__*/_jsx(UploadIcon,{color:\"primary\",sx:{fontSize:40,mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Drag & Drop Files Here\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",paragraph:true,children:\"or\"}),/*#__PURE__*/_jsxs(Button,{variant:\"contained\",component:\"label\",startIcon:/*#__PURE__*/_jsx(UploadIcon,{}),children:[\"Browse Files\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",hidden:true,multiple:true,onChange:e=>{if(e.target.files&&e.target.files.length>0){processFileSelection(e.target.files);}}})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",sx:{display:'block',mt:2},children:\"Supported file types: CSV, JSON, XML, PDF, Images, Text files\"})]}),selectedFile&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"File Preview\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,mb:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:(()=>{const FileCard=require(\"../../common/FileCard\").default;const{generateFileMetadata}=require(\"../../../utils/fileTypeUtils\");// Generate metadata for the file\nconst fileMetadata=generateFileMetadata(selectedFile);return/*#__PURE__*/_jsx(FileCard,{file:selectedFile,showActions:false,showPreview:false,variant:\"outlined\"});})()}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"File Details\"}),/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"File name:\"}),/*#__PURE__*/_jsx(\"span\",{style:{fontWeight:'medium'},children:selectedFile.name})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Size:\"}),/*#__PURE__*/_jsx(\"span\",{children:formatFileSize(selectedFile.size)})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Type:\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedFile.type||'Unknown'})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsx(\"span\",{children:\"Last modified:\"}),/*#__PURE__*/_jsx(\"span\",{children:new Date(selectedFile.lastModified).toLocaleString()})]})]}),(()=>{const{isPreviewSupported,getFileTypeDescription}=require(\"../../../utils/fileTypeUtils\");const mimeType=selectedFile.type;const isSupported=isPreviewSupported(mimeType);return/*#__PURE__*/_jsx(Box,{sx:{mb:2},children:isSupported?/*#__PURE__*/_jsxs(Alert,{severity:\"success\",icon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),children:[\"This file type (\",getFileTypeDescription(mimeType),\") is fully supported.\"]}):/*#__PURE__*/_jsxs(Alert,{severity:\"warning\",children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Limited Support\"}),\"This file type may have limited preview capabilities in the system.\"]})});})(),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"outlined\",color:\"error\",startIcon:/*#__PURE__*/_jsx(CloseIcon,{}),onClick:()=>setSelectedFile(null),sx:{mt:1},children:\"Remove File\"})]})]})}),uploadProgress>0&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2,mb:2},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle2\",gutterBottom:true,display:\"flex\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Upload Progress\"}),/*#__PURE__*/_jsxs(\"span\",{children:[uploadProgress,\"%\"]})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:uploadProgress,sx:{height:10,borderRadius:5,mb:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:uploadProgress<100?`Uploading ${selectedFile.name}...`:`Successfully uploaded ${selectedFile.name}`}),filesToUpload.length>1&&/*#__PURE__*/_jsxs(Box,{sx:{mt:1,display:'flex',alignItems:'center',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",children:[\"File \",currentUploadIndex+1,\" of \",filesToUpload.length]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[Array.from({length:Math.min(filesToUpload.length,5)}).map((_,index)=>{// Calculate status for this dot\nlet color='grey.300';// default - not started\nif(index<currentUploadIndex){color='success.main';// completed\n}else if(index===currentUploadIndex){color=uploadProgress===100?'success.main':'primary.main';// in progress\n}return/*#__PURE__*/_jsx(Box,{sx:{width:8,height:8,borderRadius:'50%',bgcolor:color,mx:0.5}},index);}),filesToUpload.length>5&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"textSecondary\",sx:{ml:1},children:[\"+\",filesToUpload.length-5,\" more\"]})]})]})]}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",gutterBottom:true,children:\"Upload Options\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:uploadOptions.overwriteExisting,onChange:()=>setUploadOptions(prev=>({...prev,overwriteExisting:!prev.overwriteExisting})),name:\"overwriteExisting\"}),label:\"Overwrite if file already exists\"}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,{checked:uploadOptions.calculateMD5,onChange:()=>setUploadOptions(prev=>({...prev,calculateMD5:!prev.calculateMD5})),name:\"calculateMD5\"}),label:\"Calculate and store content MD5 (for integrity verification)\"}),filesToUpload.length>1&&/*#__PURE__*/_jsxs(Box,{sx:{mt:2,p:1,bgcolor:'info.lightest',borderRadius:1},children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",gutterBottom:true,sx:{fontWeight:'medium',color:'info.main',display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(InfoIcon,{fontSize:\"small\",sx:{mr:0.5}}),\"Batch Upload Information\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[filesToUpload.length,\" files selected for upload (\",formatFileSize(filesToUpload.reduce((total,file)=>total+file.size,0)),\")\"]}),/*#__PURE__*/_jsx(Button,{size:\"small\",variant:\"text\",color:\"primary\",onClick:()=>{setFilesToUpload([]);setSelectedFile(null);},sx:{mt:1},startIcon:/*#__PURE__*/_jsx(CloseIcon,{fontSize:\"small\"}),children:\"Clear Batch Selection\"})]})]})]})]}),/*#__PURE__*/_jsxs(DialogActions,{sx:{px:3,py:2},children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{setFileUploadDialogOpen(false);setSelectedFile(null);setUploadProgress(0);},disabled:loading,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:uploadFile,variant:\"contained\",color:\"primary\",disabled:loading||!selectedFile||uploadProgress>0,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(UploadIcon,{}),children:loading?'Uploading...':filesToUpload.length>1?`Upload ${filesToUpload.length} Files`:'Upload File'})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:fileViewerOpen,onClose:()=>setFileViewerOpen(false),fullWidth:true,maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(DialogContent,{dividers:true,sx:{p:0},children:renderFilePreview(fileViewUrl,fileViewType)}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setFileViewerOpen(false),children:\"Close\"}),selectedItem&&selectedItem.type==='blob'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{downloadBlob(selectedItem);},startIcon:/*#__PURE__*/_jsx(DownloadIcon,{}),children:\"Download\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{onSelectBlob({containerName:selectedContainer,path:currentPath,blobName:selectedItem.name,blobProperties:selectedItem.properties});setFileViewerOpen(false);},variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(CheckCircleIcon,{}),children:\"Select This File\"})]})]})]})]});};export default AzureBlobContainerBrowser;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","Button","Card","CardContent","CardHeader","CircularProgress","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","Grid","IconButton","InputAdornment","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Menu","MenuItem","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Tooltip","Typography","Alert","AlertTitle","FormControlLabel","Checkbox","LinearProgress","AddCircleOutline","AddIcon","ArrowUpward","UpIcon","CloudUpload","UploadIcon","Delete","DeleteIcon","Download","DownloadIcon","Folder","FolderIcon","FolderOpen","FolderOpenIcon","InsertDriveFile","FileIcon","MoreVert","MoreVertIcon","Refresh","RefreshIcon","Search","SearchIcon","Visibility","ViewIcon","CreateNewFolder","CreateFolderIcon","CloudCircle","ContainerIcon","CheckCircle","CheckCircleIcon","Close","CloseIcon","Info","InfoIcon","Warning","WarningIcon","ErrorOutline","ErrorOutlineIcon","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","toLocaleString","AzureBlobContainerBrowser","_ref","config","onSelectContainer","onSelectBlob","readOnly","selectedContainer","selectedPath","containers","setContainers","blobs","setBlobs","currentPath","setCurrentPath","pathHistory","setPathHistory","loading","setLoading","containerLoading","setContainerLoading","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearching","setIsSearching","newContainerDialogOpen","setNewContainerDialogOpen","newContainerName","setNewContainerName","newFolderDialogOpen","setNewFolderDialogOpen","newFolderName","setNewFolderName","confirmDeleteDialogOpen","setConfirmDeleteDialogOpen","itemToDelete","setItemToDelete","fileUploadDialogOpen","setFileUploadDialogOpen","selectedFile","setSelectedFile","filesToUpload","setFilesToUpload","currentUploadIndex","setCurrentUploadIndex","uploadProgress","setUploadProgress","uploadOptions","setUploadOptions","overwriteExisting","calculateMD5","contextMenuPos","setContextMenuPos","selectedItem","setSelectedItem","fileViewerOpen","setFileViewerOpen","fileViewUrl","setFileViewUrl","fileViewType","setFileViewType","error","setError","loadContainers","console","response","Promise","resolve","setTimeout","status","name","properties","lastModified","toISOString","some","c","loadBlobs","message","err","containerName","path","arguments","length","undefined","mockBlobs","contentLength","now","contentType","type","prevHistory","navigateTo","item","fullPath","blobName","blobProperties","navigateUp","previousPath","slice","searchBlobs","allPossibleBlobs","searchLower","toLowerCase","results","filter","blob","includes","clearSearch","createContainer","container","prevContainers","createFolder","folder","prevBlobs","deleteItem","b","processFileSelection","files","fileArray","Array","from","uploadSingleFile","file","progress","uploadProgressInterval","setInterval","random","clearInterval","min","baseUploadTime","sizeBasedTime","size","uploadFile","successCount","success","downloadBlob","alert","viewBlob","_item$properties","handleContextMenu","event","preventDefault","x","clientX","y","clientY","handleContextMenuClose","renderFilePreview","url","_selectedItem$propert","_selectedItem$propert2","FilePreview","require","default","fileObj","getDisplayName","generateSimulatedContent","_selectedItem$propert3","_selectedItem$propert4","JSON","stringify","content","mimeType","filename","onDownload","maxHeight","fullWidth","getIconColorForFileType","startsWith","parts","split","sx","display","flexDirection","height","children","alignItems","mb","flexGrow","overflow","flexWrap","variant","flexShrink","whiteSpace","title","component","onClick","cursor","color","textDecoration","ml","textOverflow","Boolean","map","segment","index","array","pathUpToSegment","join","disabled","placeholder","value","onChange","e","target","InputProps","startAdornment","position","endAdornment","onKeyPress","key","justifyContent","py","align","colSpan","_item$properties2","_item$properties3","_item$properties4","_item$properties5","hover","backgroundColor","onContextMenu","minWidth","fontWeight","fontFamily","stopPropagation","fontSize","_container$properties","open","onClose","anchorReference","anchorPosition","top","left","divider","autoFocus","margin","id","label","helperText","mt","maxWidth","gutterBottom","p","bgcolor","mr","border","borderColor","borderRadius","textAlign","transition","onDragOver","currentTarget","style","theme","palette","primary","main","action","onDragLeave","onDrop","dataTransfer","paragraph","startIcon","hidden","multiple","spacing","xs","md","FileCard","generateFileMetadata","fileMetadata","showActions","showPreview","isPreviewSupported","getFileTypeDescription","isSupported","severity","icon","_","width","mx","control","checked","prev","reduce","total","px","dividers"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/azure/AzureBlobContainerBrowser.jsx"],"sourcesContent":["/**\n * Azure Blob Container Browser Component\n *\n * A component for browsing and selecting Azure Blob containers and blobs.\n * Supports container creation, browsing, searching, and file operations.\n *\n * @component\n */\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  Grid,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  Tooltip,\n  Typography,\n  Alert,\n  AlertTitle,\n  FormControlLabel,\n  Checkbox,\n  LinearProgress,\n} from '@mui/material';\nimport {\n  AddCircleOutline as AddIcon,\n  ArrowUpward as UpIcon,\n  CloudUpload as UploadIcon,\n  Delete as DeleteIcon,\n  Download as DownloadIcon,\n  Folder as FolderIcon,\n  FolderOpen as FolderOpenIcon,\n  InsertDriveFile as FileIcon,\n  MoreVert as MoreVertIcon,\n  Refresh as RefreshIcon,\n  Search as SearchIcon,\n  Visibility as ViewIcon,\n  CreateNewFolder as CreateFolderIcon,\n  CloudCircle as ContainerIcon,\n  CheckCircle as CheckCircleIcon,\n  Close as CloseIcon,\n  Info as InfoIcon,\n  Warning as WarningIcon,\n  ErrorOutline as ErrorOutlineIcon,\n} from '@mui/icons-material';\n\n/**\n * Format file size to human-readable format\n * @param {number} bytes - Size in bytes\n * @returns {string} Formatted size string\n */\nconst formatFileSize = (bytes) => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n/**\n * Format date to readable string\n * @param {string} dateString - ISO date string\n * @returns {string} Formatted date string\n */\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Unknown';\n  \n  const date = new Date(dateString);\n  return date.toLocaleString();\n};\n\n/**\n * Azure Blob Container Browser Component\n */\nconst AzureBlobContainerBrowser = ({\n  config,\n  onSelectContainer,\n  onSelectBlob,\n  readOnly = false,\n  selectedContainer = '',\n  selectedPath = '',\n}) => {\n  // State for containers and blobs\n  const [containers, setContainers] = useState([]);\n  const [blobs, setBlobs] = useState([]);\n  const [currentPath, setCurrentPath] = useState(selectedPath || '');\n  const [pathHistory, setPathHistory] = useState([]);\n  \n  // State for loading indicators\n  const [loading, setLoading] = useState(false);\n  const [containerLoading, setContainerLoading] = useState(false);\n  \n  // Search state\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  \n  // Dialog states\n  const [newContainerDialogOpen, setNewContainerDialogOpen] = useState(false);\n  const [newContainerName, setNewContainerName] = useState('');\n  const [newFolderDialogOpen, setNewFolderDialogOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [confirmDeleteDialogOpen, setConfirmDeleteDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [fileUploadDialogOpen, setFileUploadDialogOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filesToUpload, setFilesToUpload] = useState([]);\n  const [currentUploadIndex, setCurrentUploadIndex] = useState(0);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadOptions, setUploadOptions] = useState({\n    overwriteExisting: true,\n    calculateMD5: false\n  });\n  \n  // Context menu state\n  const [contextMenuPos, setContextMenuPos] = useState(null);\n  const [selectedItem, setSelectedItem] = useState(null);\n  \n  // File viewer state\n  const [fileViewerOpen, setFileViewerOpen] = useState(false);\n  const [fileViewUrl, setFileViewUrl] = useState('');\n  const [fileViewType, setFileViewType] = useState('');\n  \n  // Error state\n  const [error, setError] = useState(null);\n  \n  /**\n   * Load containers from Azure\n   */\n  const loadContainers = useCallback(async () => {\n    if (!config) return;\n    \n    setContainerLoading(true);\n    setError(null);\n    \n    try {\n      // Simulated API call for now - in real implementation, this would call an API\n      // using the config parameters\n      console.log('Loading containers with config:', config);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        resolve({\n          status: 'success',\n          containers: [\n            { name: 'container1', properties: { lastModified: new Date().toISOString() } },\n            { name: 'container2', properties: { lastModified: new Date().toISOString() } },\n            { name: 'datasets', properties: { lastModified: new Date().toISOString() } },\n            { name: 'exports', properties: { lastModified: new Date().toISOString() } },\n            { name: 'imports', properties: { lastModified: new Date().toISOString() } },\n          ]\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        setContainers(response.containers);\n        \n        // If a container is already selected, keep it selected\n        if (selectedContainer && response.containers.some(c => c.name === selectedContainer)) {\n          loadBlobs(selectedContainer, selectedPath || '');\n        }\n      } else {\n        setError(response.message || 'Failed to load containers');\n      }\n    } catch (err) {\n      console.error('Error loading containers:', err);\n      setError(err.message || 'An error occurred while loading containers');\n    } finally {\n      setContainerLoading(false);\n    }\n  }, [config, selectedContainer, selectedPath]);\n  \n  /**\n   * Load blobs from a container\n   */\n  const loadBlobs = useCallback(async (containerName, path = '') => {\n    if (!config || !containerName) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Loading blobs from container: ${containerName}, path: ${path}`);\n      \n      // Simulate API response with mock data based on path\n      const response = await new Promise(resolve => setTimeout(() => {\n        // Generate different mock responses based on the path\n        let mockBlobs = [];\n        \n        if (path === '') {\n          // Root directory\n          mockBlobs = [\n            {\n              name: 'folder1/',\n              properties: {\n                contentLength: 0,\n                lastModified: new Date(Date.now() - 86400000).toISOString(),\n                contentType: 'application/directory'\n              },\n              type: 'directory'\n            },\n            {\n              name: 'folder2/',\n              properties: {\n                contentLength: 0,\n                lastModified: new Date(Date.now() - 172800000).toISOString(),\n                contentType: 'application/directory'\n              },\n              type: 'directory'\n            },\n            {\n              name: 'data/',\n              properties: {\n                contentLength: 0,\n                lastModified: new Date(Date.now() - 259200000).toISOString(),\n                contentType: 'application/directory'\n              },\n              type: 'directory'\n            },\n            {\n              name: 'sample.csv',\n              properties: {\n                contentLength: 1024,\n                lastModified: new Date(Date.now() - 345600000).toISOString(),\n                contentType: 'text/csv'\n              },\n              type: 'blob'\n            },\n            {\n              name: 'readme.txt',\n              properties: {\n                contentLength: 512,\n                lastModified: new Date(Date.now() - 432000000).toISOString(),\n                contentType: 'text/plain'\n              },\n              type: 'blob'\n            }\n          ];\n        } else if (path === 'folder1/') {\n          // Folder 1 contents\n          mockBlobs = [\n            {\n              name: 'folder1/subfolder/',\n              properties: {\n                contentLength: 0,\n                lastModified: new Date(Date.now() - 518400000).toISOString(),\n                contentType: 'application/directory'\n              },\n              type: 'directory'\n            },\n            {\n              name: 'folder1/data1.json',\n              properties: {\n                contentLength: 2048,\n                lastModified: new Date(Date.now() - 604800000).toISOString(),\n                contentType: 'application/json'\n              },\n              type: 'blob'\n            }\n          ];\n        } else if (path === 'folder1/subfolder/') {\n          // Subfolder contents\n          mockBlobs = [\n            {\n              name: 'folder1/subfolder/deep.xml',\n              properties: {\n                contentLength: 4096,\n                lastModified: new Date(Date.now() - 691200000).toISOString(),\n                contentType: 'application/xml'\n              },\n              type: 'blob'\n            }\n          ];\n        } else if (path === 'folder2/') {\n          // Folder 2 contents\n          mockBlobs = [\n            {\n              name: 'folder2/image.png',\n              properties: {\n                contentLength: 102400,\n                lastModified: new Date(Date.now() - 777600000).toISOString(),\n                contentType: 'image/png'\n              },\n              type: 'blob'\n            },\n            {\n              name: 'folder2/document.pdf',\n              properties: {\n                contentLength: 204800,\n                lastModified: new Date(Date.now() - 864000000).toISOString(),\n                contentType: 'application/pdf'\n              },\n              type: 'blob'\n            }\n          ];\n        } else if (path === 'data/') {\n          // Data folder contents\n          mockBlobs = [\n            {\n              name: 'data/dataset1.csv',\n              properties: {\n                contentLength: 5120,\n                lastModified: new Date(Date.now() - 950400000).toISOString(),\n                contentType: 'text/csv'\n              },\n              type: 'blob'\n            },\n            {\n              name: 'data/dataset2.csv',\n              properties: {\n                contentLength: 6144,\n                lastModified: new Date(Date.now() - 1036800000).toISOString(),\n                contentType: 'text/csv'\n              },\n              type: 'blob'\n            },\n            {\n              name: 'data/dataset3.xlsx',\n              properties: {\n                contentLength: 8192,\n                lastModified: new Date(Date.now() - 1123200000).toISOString(),\n                contentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n              },\n              type: 'blob'\n            }\n          ];\n        }\n        \n        resolve({\n          status: 'success',\n          blobs: mockBlobs,\n          containerName: containerName,\n          path: path\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Update current container and path\n        if (containerName !== selectedContainer) {\n          onSelectContainer(containerName);\n          setPathHistory([]);\n        }\n        \n        setBlobs(response.blobs);\n        setCurrentPath(path);\n        \n        // If this is a new path, add it to history\n        if (path !== currentPath) {\n          setPathHistory(prevHistory => {\n            // Add the previous path to history only if it's not empty\n            if (currentPath) {\n              return [...prevHistory, currentPath];\n            }\n            return prevHistory;\n          });\n        }\n      } else {\n        setError(response.message || 'Failed to load blobs');\n      }\n    } catch (err) {\n      console.error('Error loading blobs:', err);\n      setError(err.message || 'An error occurred while loading blobs');\n    } finally {\n      setLoading(false);\n      setIsSearching(false);\n    }\n  }, [config, currentPath, onSelectContainer, selectedContainer]);\n  \n  /**\n   * Navigate to a folder or blob\n   */\n  const navigateTo = useCallback((item) => {\n    if (item.type === 'directory') {\n      // Extract the folder path from the name\n      const fullPath = item.name;\n      \n      // Load blobs from the folder\n      loadBlobs(selectedContainer, fullPath);\n    } else if (item.type === 'blob') {\n      // Select the blob\n      onSelectBlob({\n        containerName: selectedContainer,\n        path: currentPath,\n        blobName: item.name,\n        blobProperties: item.properties\n      });\n    }\n  }, [currentPath, loadBlobs, onSelectBlob, selectedContainer]);\n  \n  /**\n   * Go up one level in the path\n   */\n  const navigateUp = useCallback(() => {\n    if (pathHistory.length > 0) {\n      // Get the previous path\n      const previousPath = pathHistory[pathHistory.length - 1];\n      \n      // Update the path history\n      setPathHistory(prevHistory => prevHistory.slice(0, -1));\n      \n      // Load blobs from the previous path\n      loadBlobs(selectedContainer, previousPath);\n    } else {\n      // If we're at the root of a container, go back to container list\n      setBlobs([]);\n      setCurrentPath('');\n      onSelectContainer('');\n    }\n  }, [loadBlobs, onSelectContainer, pathHistory, selectedContainer]);\n  \n  /**\n   * Search for blobs\n   */\n  const searchBlobs = useCallback(async () => {\n    if (!searchTerm || !selectedContainer) return;\n    \n    setIsSearching(true);\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Searching for \"${searchTerm}\" in container: ${selectedContainer}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        // Generate mock search results\n        const allPossibleBlobs = [\n          {\n            name: 'folder1/data1.json',\n            properties: {\n              contentLength: 2048,\n              lastModified: new Date(Date.now() - 604800000).toISOString(),\n              contentType: 'application/json'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'folder1/subfolder/deep.xml',\n            properties: {\n              contentLength: 4096,\n              lastModified: new Date(Date.now() - 691200000).toISOString(),\n              contentType: 'application/xml'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'folder2/image.png',\n            properties: {\n              contentLength: 102400,\n              lastModified: new Date(Date.now() - 777600000).toISOString(),\n              contentType: 'image/png'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'folder2/document.pdf',\n            properties: {\n              contentLength: 204800,\n              lastModified: new Date(Date.now() - 864000000).toISOString(),\n              contentType: 'application/pdf'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'data/dataset1.csv',\n            properties: {\n              contentLength: 5120,\n              lastModified: new Date(Date.now() - 950400000).toISOString(),\n              contentType: 'text/csv'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'data/dataset2.csv',\n            properties: {\n              contentLength: 6144,\n              lastModified: new Date(Date.now() - 1036800000).toISOString(),\n              contentType: 'text/csv'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'data/dataset3.xlsx',\n            properties: {\n              contentLength: 8192,\n              lastModified: new Date(Date.now() - 1123200000).toISOString(),\n              contentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'sample.csv',\n            properties: {\n              contentLength: 1024,\n              lastModified: new Date(Date.now() - 345600000).toISOString(),\n              contentType: 'text/csv'\n            },\n            type: 'blob'\n          },\n          {\n            name: 'readme.txt',\n            properties: {\n              contentLength: 512,\n              lastModified: new Date(Date.now() - 432000000).toISOString(),\n              contentType: 'text/plain'\n            },\n            type: 'blob'\n          }\n        ];\n        \n        // Filter by search term\n        const searchLower = searchTerm.toLowerCase();\n        const results = allPossibleBlobs.filter(blob => \n          blob.name.toLowerCase().includes(searchLower)\n        );\n        \n        resolve({\n          status: 'success',\n          blobs: results\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        setSearchResults(response.blobs);\n      } else {\n        setError(response.message || 'Failed to search blobs');\n      }\n    } catch (err) {\n      console.error('Error searching blobs:', err);\n      setError(err.message || 'An error occurred while searching blobs');\n    } finally {\n      setLoading(false);\n    }\n  }, [searchTerm, selectedContainer]);\n  \n  /**\n   * Clear search and return to regular browsing\n   */\n  const clearSearch = useCallback(() => {\n    setSearchTerm('');\n    setSearchResults([]);\n    setIsSearching(false);\n    \n    // Reload current path\n    if (selectedContainer) {\n      loadBlobs(selectedContainer, currentPath);\n    }\n  }, [currentPath, loadBlobs, selectedContainer]);\n  \n  /**\n   * Create a new container\n   */\n  const createContainer = useCallback(async () => {\n    if (!newContainerName) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Simulate API call\n      console.log(`Creating container: ${newContainerName}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        if (newContainerName.includes(' ')) {\n          resolve({\n            status: 'error',\n            message: 'Container name cannot contain spaces'\n          });\n        } else if (containers.some(c => c.name === newContainerName)) {\n          resolve({\n            status: 'error',\n            message: 'Container already exists'\n          });\n        } else {\n          resolve({\n            status: 'success',\n            container: {\n              name: newContainerName,\n              properties: {\n                lastModified: new Date().toISOString()\n              }\n            }\n          });\n        }\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Add new container to list\n        setContainers(prevContainers => [...prevContainers, response.container]);\n        \n        // Close dialog\n        setNewContainerDialogOpen(false);\n        setNewContainerName('');\n        \n        // Select the new container\n        onSelectContainer(response.container.name);\n        loadBlobs(response.container.name, '');\n      } else {\n        setError(response.message || 'Failed to create container');\n      }\n    } catch (err) {\n      console.error('Error creating container:', err);\n      setError(err.message || 'An error occurred while creating container');\n    } finally {\n      setLoading(false);\n    }\n  }, [containers, loadBlobs, newContainerName, onSelectContainer]);\n  \n  /**\n   * Create a new folder\n   */\n  const createFolder = useCallback(async () => {\n    if (!newFolderName || !selectedContainer) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Construct the full path\n      const fullPath = currentPath ? `${currentPath}${newFolderName}/` : `${newFolderName}/`;\n      \n      // Simulate API call\n      console.log(`Creating folder: ${fullPath} in container: ${selectedContainer}`);\n      \n      // Simulate API response\n      const response = await new Promise(resolve => setTimeout(() => {\n        resolve({\n          status: 'success',\n          folder: {\n            name: fullPath,\n            properties: {\n              contentLength: 0,\n              lastModified: new Date().toISOString(),\n              contentType: 'application/directory'\n            },\n            type: 'directory'\n          }\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        // Add new folder to list\n        setBlobs(prevBlobs => [...prevBlobs, response.folder]);\n        \n        // Close dialog\n        setNewFolderDialogOpen(false);\n        setNewFolderName('');\n      } else {\n        setError(response.message || 'Failed to create folder');\n      }\n    } catch (err) {\n      console.error('Error creating folder:', err);\n      setError(err.message || 'An error occurred while creating folder');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPath, newFolderName, selectedContainer]);\n  \n  /**\n   * Delete a container, folder, or blob\n   */\n  const deleteItem = useCallback(async () => {\n    if (!itemToDelete) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log(`Deleting ${itemToDelete.type}: ${itemToDelete.name}`);\n      \n      // Simulate API call\n      const response = await new Promise(resolve => setTimeout(() => {\n        resolve({\n          status: 'success'\n        });\n      }, 1000));\n      \n      if (response.status === 'success') {\n        if (itemToDelete.type === 'container') {\n          // Remove container from list\n          setContainers(prevContainers => \n            prevContainers.filter(c => c.name !== itemToDelete.name)\n          );\n          \n          // If this was the selected container, clear selection\n          if (selectedContainer === itemToDelete.name) {\n            onSelectContainer('');\n            setBlobs([]);\n            setCurrentPath('');\n          }\n        } else {\n          // Remove blob or folder from list\n          setBlobs(prevBlobs => \n            prevBlobs.filter(b => b.name !== itemToDelete.name)\n          );\n        }\n        \n        // Close dialog\n        setConfirmDeleteDialogOpen(false);\n        setItemToDelete(null);\n      } else {\n        setError(response.message || 'Failed to delete item');\n      }\n    } catch (err) {\n      console.error('Error deleting item:', err);\n      setError(err.message || 'An error occurred while deleting item');\n    } finally {\n      setLoading(false);\n    }\n  }, [itemToDelete, onSelectContainer, selectedContainer]);\n  \n  /**\n   * Process file selection for upload\n   */\n  const processFileSelection = useCallback((files) => {\n    if (!files || files.length === 0) return;\n    \n    // If it's a FileList (from input), convert to array\n    const fileArray = Array.from(files);\n    \n    if (fileArray.length === 1) {\n      // Single file selection - use the existing workflow\n      setSelectedFile(fileArray[0]);\n      setFilesToUpload([]);\n    } else {\n      // Multiple file selection\n      setFilesToUpload(fileArray);\n      setSelectedFile(fileArray[0]); // Show the first file in preview\n      setCurrentUploadIndex(0);\n    }\n  }, []);\n  \n  /**\n   * Upload a single file\n   */\n  const uploadSingleFile = useCallback(async (file) => {\n    if (!file || !selectedContainer) return false;\n    \n    try {\n      // Construct the full path\n      const fullPath = currentPath ? `${currentPath}${file.name}` : file.name;\n      \n      console.log(`Uploading file: ${fullPath} to container: ${selectedContainer}`);\n      \n      // Simulate upload progress with more realistic behavior\n      let progress = 0;\n      const uploadProgressInterval = setInterval(() => {\n        // Realistic upload progress simulation\n        // First 80% is linear, last 20% is slower to simulate server processing\n        if (progress < 80) {\n          progress += Math.random() * 5; // Random increment for realism\n        } else if (progress < 95) {\n          progress += Math.random() * 0.5; // Slower near the end\n        } else if (progress < 99) {\n          progress += 0.1; // Very slow for the last bit\n        }\n        \n        if (progress >= 100) {\n          clearInterval(uploadProgressInterval);\n          progress = 100;\n        }\n        \n        setUploadProgress(Math.min(Math.floor(progress), 100));\n      }, 200);\n      \n      // Simulate API response with file validation and upload behavior\n      const response = await new Promise(resolve => {\n        // Calculate simulated upload time based on file size for realism\n        // Larger files take longer to upload\n        const baseUploadTime = 1000; // Minimum 1 second\n        const sizeBasedTime = Math.min(file.size / 10000, 5000); // Up to 5 seconds more for large files\n        \n        setTimeout(() => {\n          clearInterval(uploadProgressInterval);\n          setUploadProgress(100);\n          \n          // In a real implementation, we would check for errors\n          // like size limits, permission issues, etc.\n          resolve({\n            status: 'success',\n            blob: {\n              name: fullPath,\n              properties: {\n                contentLength: file.size,\n                lastModified: new Date().toISOString(),\n                contentType: file.type || 'application/octet-stream'\n              },\n              type: 'blob'\n            }\n          });\n        }, baseUploadTime + sizeBasedTime);\n      });\n      \n      if (response.status === 'success') {\n        // Add new file to list if we're in the current path\n        setBlobs(prevBlobs => [...prevBlobs, response.blob]);\n        return true;\n      } else {\n        setError(response.message || `Failed to upload file: ${file.name}`);\n        return false;\n      }\n    } catch (err) {\n      console.error(`Error uploading file ${file.name}:`, err);\n      setError(err.message || `An error occurred while uploading file: ${file.name}`);\n      return false;\n    }\n  }, [currentPath, selectedContainer]);\n  \n  /**\n   * Upload files (single file or batch upload)\n   */\n  const uploadFile = useCallback(async () => {\n    if (!selectedContainer) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (filesToUpload.length > 0) {\n        // Batch upload workflow\n        let successCount = 0;\n        \n        // Process each file in sequence\n        for (let i = 0; i < filesToUpload.length; i++) {\n          setCurrentUploadIndex(i);\n          setSelectedFile(filesToUpload[i]); // Update preview to current file\n          setUploadProgress(0);\n          \n          const success = await uploadSingleFile(filesToUpload[i]);\n          if (success) {\n            successCount++;\n          }\n          \n          // Short pause between files\n          if (i < filesToUpload.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, 500));\n          }\n        }\n        \n        // Show completion message\n        console.log(`Uploaded ${successCount} of ${filesToUpload.length} files successfully`);\n        \n        // Close dialog after batch upload\n        if (successCount > 0) {\n          setTimeout(() => {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setFilesToUpload([]);\n            setUploadProgress(0);\n          }, 1500);\n        }\n        \n      } else if (selectedFile) {\n        // Single file upload workflow\n        const success = await uploadSingleFile(selectedFile);\n        \n        // Close dialog after successful upload\n        if (success) {\n          setTimeout(() => {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setUploadProgress(0);\n          }, 1500);\n        }\n      }\n    } catch (err) {\n      console.error('Error in upload process:', err);\n      setError(err.message || 'An unexpected error occurred during upload');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentPath, selectedContainer, selectedFile, filesToUpload, uploadSingleFile]);\n  \n  /**\n   * Download a blob\n   */\n  const downloadBlob = useCallback((item) => {\n    if (!item || !selectedContainer) return;\n    \n    console.log(`Downloading blob: ${item.name} from container: ${selectedContainer}`);\n    \n    // In a real implementation, this would create a download link using the blob URL\n    // For now, we'll just simulate it\n    alert(`Simulated download of file: ${item.name}`);\n  }, [selectedContainer]);\n  \n  /**\n   * View/preview a blob\n   */\n  const viewBlob = useCallback((item) => {\n    if (!item || !selectedContainer) return;\n    \n    console.log(`Viewing blob: ${item.name} from container: ${selectedContainer}`);\n    \n    // In a real implementation, this would create a URL for the blob content\n    // For now, we'll use a placeholder\n    setFileViewUrl(`https://example.com/preview/${selectedContainer}/${item.name}`);\n    \n    // Set the file type based on contentType or extension\n    const contentType = item.properties?.contentType || '';\n    setFileViewType(contentType);\n    \n    // Open the viewer\n    setFileViewerOpen(true);\n  }, [selectedContainer]);\n  \n  /**\n   * Handle context menu opening\n   */\n  const handleContextMenu = useCallback((event, item) => {\n    event.preventDefault();\n    \n    // Skip if in read-only mode\n    if (readOnly) return;\n    \n    setContextMenuPos({ x: event.clientX, y: event.clientY });\n    setSelectedItem(item);\n  }, [readOnly]);\n  \n  /**\n   * Handle context menu closing\n   */\n  const handleContextMenuClose = useCallback(() => {\n    setContextMenuPos(null);\n    setSelectedItem(null);\n  }, []);\n  \n  // Load containers on mount\n  useEffect(() => {\n    if (config) {\n      loadContainers();\n    }\n  }, [config, loadContainers]);\n  \n  // File content render functions with enhanced preview\n  const renderFilePreview = (url, contentType) => {\n    // Import FilePreview component for advanced file previewing\n    const FilePreview = require('../../common/FilePreview').default;\n    \n    // Generate a mock file object with the selected item's data\n    const fileObj = selectedItem ? {\n      name: getDisplayName(selectedItem.name, selectedItem.type),\n      type: contentType,\n      size: selectedItem.properties?.contentLength || 0,\n      lastModified: selectedItem.properties?.lastModified\n    } : null;\n    \n    // Generate simulated content for text files\n    const generateSimulatedContent = () => {\n      if (contentType === 'text/plain') {\n        return `This is a simulated preview of a plain text file.\\n\\nFilename: ${selectedItem.name}\\nSize: ${formatFileSize(selectedItem.properties?.contentLength || 0)}\\nLast Modified: ${formatDate(selectedItem.properties?.lastModified)}\\n\\nIn a production environment, this would fetch the actual file content from the Azure Blob storage.`;\n      }\n      \n      if (contentType === 'text/csv') {\n        return `id,name,email,department\\n1,\"John Smith\",john.smith@example.com,Marketing\\n2,\"Jane Doe\",jane.doe@example.com,Engineering\\n3,\"Robert Johnson\",robert.johnson@example.com,Finance\\n4,\"Sarah Williams\",sarah.williams@example.com,Human Resources\\n5,\"Michael Brown\",michael.brown@example.com,Sales`;\n      }\n      \n      if (contentType === 'application/json') {\n        return JSON.stringify({\n          \"id\": 12345,\n          \"name\": \"Sample JSON Data\",\n          \"items\": [\n            { \"id\": 1, \"value\": \"First item\" },\n            { \"id\": 2, \"value\": \"Second item\" },\n            { \"id\": 3, \"value\": \"Third item\" }\n          ],\n          \"metadata\": {\n            \"created\": new Date().toISOString(),\n            \"version\": \"1.0.0\",\n            \"source\": \"Azure Blob Storage\"\n          }\n        }, null, 2);\n      }\n      \n      if (contentType === 'application/xml' || contentType === 'text/xml') {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<root>\\n  <item id=\"1\">\\n    <name>First Item</name>\\n    <value>100</value>\\n  </item>\\n  <item id=\"2\">\\n    <name>Second Item</name>\\n    <value>200</value>\\n  </item>\\n  <metadata>\\n    <created>${new Date().toISOString()}</created>\\n    <source>Azure Blob Storage</source>\\n  </metadata>\\n</root>`;\n      }\n      \n      // Default text content\n      return `This is a simulated preview of content type: ${contentType}\\n\\nIn a production environment, this would display the actual file content.`;\n    };\n    \n    // Generate content for text-based files\n    const content = (contentType === 'text/plain' || \n                     contentType === 'text/csv' || \n                     contentType === 'application/json' || \n                     contentType === 'application/xml' ||\n                     contentType === 'text/xml') \n      ? generateSimulatedContent() \n      : null;\n    \n    return (\n      <FilePreview\n        file={fileObj}\n        url={url}\n        content={content}\n        mimeType={contentType}\n        filename={fileObj?.name}\n        onDownload={() => downloadBlob(selectedItem)}\n        maxHeight=\"600px\"\n        fullWidth={true}\n      />\n    );\n  };\n  \n  // Get color for file icon based on content type\n  const getIconColorForFileType = (contentType) => {\n    if (contentType.startsWith('image/')) {\n      return 'success.main'; // Green for images\n    } else if (contentType.startsWith('text/')) {\n      return 'info.main'; // Blue for text files\n    } else if (contentType.includes('spreadsheet') || contentType.includes('excel')) {\n      return 'success.dark'; // Dark green for spreadsheets\n    } else if (contentType.includes('pdf')) {\n      return 'error.main'; // Red for PDFs\n    } else if (contentType.includes('zip') || contentType.includes('compressed')) {\n      return 'warning.dark'; // Dark yellow for archives\n    } else if (contentType.includes('json') || contentType.includes('xml')) {\n      return 'secondary.main'; // Purple for data files\n    } else {\n      return 'info.main'; // Default blue\n    }\n  };\n\n  // Item name display function (truncates long paths)\n  const getDisplayName = (name, type) => {\n    if (type === 'container') {\n      return name;\n    } else if (type === 'directory') {\n      // For directories, extract the last folder name\n      const parts = name.split('/');\n      return parts[parts.length - 2] || name; // Account for trailing slash\n    } else {\n      // For blobs, extract filename from potentially nested path\n      const parts = name.split('/');\n      return parts[parts.length - 1] || name;\n    }\n  };\n  \n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n      {/* Top bar with actions */}\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1, overflow: 'hidden' }}>\n          {/* Breadcrumb navigation */}\n          <Box sx={{ display: 'flex', alignItems: 'center', flexWrap: 'nowrap', overflow: 'hidden' }}>\n            <Typography \n              variant=\"h6\" \n              sx={{ \n                flexShrink: 0,\n                whiteSpace: 'nowrap'\n              }}\n            >\n              {selectedContainer ? (\n                <>\n                  <Tooltip title=\"Back to containers\">\n                    <Box \n                      component=\"span\" \n                      onClick={() => onSelectContainer('')}\n                      sx={{ \n                        cursor: 'pointer', \n                        color: 'primary.main',\n                        '&:hover': { textDecoration: 'underline' } \n                      }}\n                    >\n                      Containers\n                    </Box>\n                  </Tooltip>\n                  {' / '}\n                  <Tooltip title={`Container: ${selectedContainer}`}>\n                    <strong>{selectedContainer}</strong>\n                  </Tooltip>\n                </>\n              ) : (\n                'Azure Blob Containers'\n              )}\n            </Typography>\n            \n            {/* Path breadcrumb navigation */}\n            {selectedContainer && currentPath && (\n              <Box \n                sx={{ \n                  display: 'flex', \n                  alignItems: 'center', \n                  ml: 1,\n                  overflow: 'hidden',\n                  flexWrap: 'nowrap'\n                }}\n              >\n                <Typography \n                  component=\"span\" \n                  variant=\"body2\" \n                  sx={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    color: 'text.secondary',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    whiteSpace: 'nowrap'\n                  }}\n                >\n                  {' / '}\n                  {currentPath.split('/').filter(Boolean).map((segment, index, array) => {\n                    // Create a path up to this segment\n                    const pathUpToSegment = array.slice(0, index + 1).join('/') + '/';\n                    \n                    return (\n                      <React.Fragment key={index}>\n                        {index > 0 && ' / '}\n                        <Tooltip title={`Navigate to ${segment}`}>\n                          <Box \n                            component=\"span\" \n                            onClick={() => loadBlobs(selectedContainer, pathUpToSegment)}\n                            sx={{ \n                              cursor: 'pointer', \n                              color: 'primary.main',\n                              flexShrink: 0,\n                              '&:hover': { textDecoration: 'underline' } \n                            }}\n                          >\n                            {segment}\n                          </Box>\n                        </Tooltip>\n                      </React.Fragment>\n                    );\n                  })}\n                </Typography>\n              </Box>\n            )}\n          </Box>\n        </Box>\n        \n        <Box sx={{ display: 'flex', alignItems: 'center', ml: 2 }}>\n          {selectedContainer && (\n            <Tooltip title=\"Go up\">\n              <IconButton \n                onClick={navigateUp} \n                disabled={loading}\n                size=\"small\"\n              >\n                <UpIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n          \n          <Tooltip title=\"Refresh\">\n            <IconButton \n              onClick={() => selectedContainer ? loadBlobs(selectedContainer, currentPath) : loadContainers()} \n              disabled={loading}\n              size=\"small\"\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n          \n          {!readOnly && (\n            <>\n              {selectedContainer ? (\n                <Tooltip title=\"Upload File\">\n                  <IconButton \n                    onClick={() => setFileUploadDialogOpen(true)} \n                    disabled={loading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <UploadIcon />\n                  </IconButton>\n                </Tooltip>\n              ) : (\n                <Tooltip title=\"New Container\">\n                  <IconButton \n                    onClick={() => setNewContainerDialogOpen(true)} \n                    disabled={loading || containerLoading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <AddIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n              \n              {selectedContainer && (\n                <Tooltip title=\"New Folder\">\n                  <IconButton \n                    onClick={() => setNewFolderDialogOpen(true)} \n                    disabled={loading}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    <CreateFolderIcon />\n                  </IconButton>\n                </Tooltip>\n              )}\n            </>\n          )}\n        </Box>\n      </Box>\n      \n      {/* Search bar */}\n      {selectedContainer && (\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <TextField\n            fullWidth\n            placeholder=\"Search blobs...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            disabled={loading}\n            size=\"small\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n              endAdornment: isSearching && (\n                <InputAdornment position=\"end\">\n                  <Button \n                    size=\"small\" \n                    onClick={clearSearch}\n                    disabled={loading}\n                  >\n                    Clear\n                  </Button>\n                </InputAdornment>\n              )\n            }}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter' && searchTerm) {\n                searchBlobs();\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            onClick={searchBlobs}\n            disabled={loading || !searchTerm}\n            sx={{ ml: 1 }}\n          >\n            Search\n          </Button>\n        </Box>\n      )}\n      \n      {/* Error message */}\n      {error && (\n        <Typography color=\"error\" sx={{ mb: 2 }}>\n          Error: {error}\n        </Typography>\n      )}\n      \n      {/* Content area */}\n      {(containerLoading || loading) ? (\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', py: 4 }}>\n          <CircularProgress />\n        </Box>\n      ) : selectedContainer ? (\n        // Blob list\n        <TableContainer component={Paper} sx={{ flexGrow: 1, overflow: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell align=\"right\">Size</TableCell>\n                <TableCell align=\"right\">Last Modified</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(isSearching ? searchResults : blobs).length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={4} align=\"center\">\n                    {isSearching ? 'No search results' : 'No items in this location'}\n                  </TableCell>\n                </TableRow>\n              ) : (isSearching ? searchResults : blobs).map((item) => (\n                <TableRow \n                  key={item.name}\n                  hover\n                  onClick={() => navigateTo(item)}\n                  sx={{ \n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: 'action.hover',\n                    },\n                  }}\n                  onContextMenu={(e) => handleContextMenu(e, item)}\n                >\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <ListItemIcon sx={{ minWidth: 36 }}>\n                        {item.type === 'directory' ? (\n                          <FolderIcon color=\"primary\" />\n                        ) : (\n                          <FileIcon \n                            sx={{ \n                              color: getIconColorForFileType(item.properties?.contentType || '')\n                            }} \n                          />\n                        )}\n                      </ListItemIcon>\n                      <Box>\n                        <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                          {getDisplayName(item.name, item.type)}\n                        </Typography>\n                        {item.type === 'blob' && item.properties?.contentType && (\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {item.properties.contentType}\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {item.type === 'directory' ? (\n                      '-'\n                    ) : (\n                      <Typography \n                        variant=\"body2\" \n                        sx={{ \n                          fontFamily: 'monospace', \n                          fontWeight: 500,\n                          color: 'text.secondary' \n                        }}\n                      >\n                        {formatFileSize(item.properties?.contentLength || 0)}\n                      </Typography>\n                    )}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {formatDate(item.properties?.lastModified)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                      {item.type === 'blob' && (\n                        <>\n                          <Tooltip title=\"View\">\n                            <IconButton \n                              size=\"small\" \n                              onClick={(e) => {\n                                e.stopPropagation();\n                                viewBlob(item);\n                              }}\n                            >\n                              <ViewIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Download\">\n                            <IconButton \n                              size=\"small\" \n                              onClick={(e) => {\n                                e.stopPropagation();\n                                downloadBlob(item);\n                              }}\n                            >\n                              <DownloadIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                          <Tooltip title=\"Select this file\">\n                            <IconButton \n                              size=\"small\" \n                              color=\"primary\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                onSelectBlob({\n                                  containerName: selectedContainer,\n                                  path: currentPath,\n                                  blobName: item.name,\n                                  blobProperties: item.properties\n                                });\n                              }}\n                            >\n                              <CheckCircleIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        </>\n                      )}\n                      {!readOnly && (\n                        <Tooltip title=\"More actions\">\n                          <IconButton \n                            size=\"small\" \n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleContextMenu(e, item);\n                            }}\n                          >\n                            <MoreVertIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        // Container list\n        <TableContainer component={Paper} sx={{ flexGrow: 1, overflow: 'auto' }}>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Container Name</TableCell>\n                <TableCell align=\"right\">Last Modified</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {containers.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={3} align=\"center\">\n                    No containers found\n                  </TableCell>\n                </TableRow>\n              ) : containers.map((container) => (\n                <TableRow \n                  key={container.name}\n                  hover\n                  onClick={() => loadBlobs(container.name, '')}\n                  sx={{ \n                    cursor: 'pointer',\n                    '&:hover': {\n                      backgroundColor: 'action.hover',\n                    },\n                  }}\n                  onContextMenu={(e) => handleContextMenu(e, { ...container, type: 'container' })}\n                >\n                  <TableCell>\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <ListItemIcon sx={{ minWidth: 36 }}>\n                        <ContainerIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <Typography variant=\"body2\" sx={{ fontWeight: 500 }}>\n                        {container.name}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {formatDate(container.properties?.lastModified)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center' }}>\n                      <Tooltip title=\"Browse container\">\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            loadBlobs(container.name, '');\n                          }}\n                        >\n                          <FolderOpenIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      <Tooltip title=\"Select container\">\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            onSelectContainer(container.name);\n                          }}\n                        >\n                          <CheckCircleIcon fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                      {!readOnly && (\n                        <Tooltip title=\"More actions\">\n                          <IconButton \n                            size=\"small\" \n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleContextMenu(e, { ...container, type: 'container' });\n                            }}\n                          >\n                            <MoreVertIcon fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      )}\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n      \n      {/* Context menu */}\n      <Menu\n        open={Boolean(contextMenuPos)}\n        onClose={handleContextMenuClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextMenuPos\n            ? { top: contextMenuPos.y, left: contextMenuPos.x }\n            : undefined\n        }\n      >\n        {selectedItem && selectedItem.type === 'container' && (\n          <div>\n            <MenuItem onClick={() => {\n              loadBlobs(selectedItem.name, '');\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <FolderOpenIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Browse container\n            </MenuItem>\n            <MenuItem \n              onClick={() => {\n                onSelectContainer(selectedItem.name);\n                handleContextMenuClose();\n              }}\n              divider\n            >\n              <ListItemIcon>\n                <CheckCircleIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Select container\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete container\n              </MenuItem>\n            )}\n          </div>\n        )}\n        \n        {selectedItem && selectedItem.type === 'directory' && (\n          <div>\n            <MenuItem onClick={() => {\n              navigateTo(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <FolderOpenIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Open folder\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete folder\n              </MenuItem>\n            )}\n          </div>\n        )}\n        \n        {selectedItem && selectedItem.type === 'blob' && (\n          <div>\n            <MenuItem onClick={() => {\n              viewBlob(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <ViewIcon fontSize=\"small\" />\n              </ListItemIcon>\n              View\n            </MenuItem>\n            <MenuItem onClick={() => {\n              downloadBlob(selectedItem);\n              handleContextMenuClose();\n            }}>\n              <ListItemIcon>\n                <DownloadIcon fontSize=\"small\" />\n              </ListItemIcon>\n              Download\n            </MenuItem>\n            <MenuItem \n              onClick={() => {\n                onSelectBlob({\n                  containerName: selectedContainer,\n                  path: currentPath,\n                  blobName: selectedItem.name,\n                  blobProperties: selectedItem.properties\n                });\n                handleContextMenuClose();\n              }}\n              divider\n            >\n              <ListItemIcon>\n                <CheckCircleIcon fontSize=\"small\" color=\"primary\" />\n              </ListItemIcon>\n              Select this file\n            </MenuItem>\n            {!readOnly && (\n              <MenuItem onClick={() => {\n                setItemToDelete(selectedItem);\n                setConfirmDeleteDialogOpen(true);\n                handleContextMenuClose();\n              }}>\n                <ListItemIcon>\n                  <DeleteIcon fontSize=\"small\" color=\"error\" />\n                </ListItemIcon>\n                Delete\n              </MenuItem>\n            )}\n          </div>\n        )}\n      </Menu>\n      \n      {/* New Container Dialog */}\n      <Dialog open={newContainerDialogOpen} onClose={() => setNewContainerDialogOpen(false)}>\n        <DialogTitle>Create New Container</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for the new container. Container names must be lowercase letters, numbers, or hyphens.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"container-name\"\n            label=\"Container Name\"\n            type=\"text\"\n            fullWidth\n            value={newContainerName}\n            onChange={(e) => setNewContainerName(e.target.value)}\n            error={Boolean(error)}\n            helperText={error}\n            disabled={loading}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNewContainerDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={createContainer} \n            color=\"primary\" \n            disabled={loading || !newContainerName}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* New Folder Dialog */}\n      <Dialog open={newFolderDialogOpen} onClose={() => setNewFolderDialogOpen(false)}>\n        <DialogTitle>Create New Folder</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Enter a name for the new folder.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"folder-name\"\n            label=\"Folder Name\"\n            type=\"text\"\n            fullWidth\n            value={newFolderName}\n            onChange={(e) => setNewFolderName(e.target.value)}\n            error={Boolean(error)}\n            helperText={error}\n            disabled={loading}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setNewFolderDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={createFolder} \n            color=\"primary\" \n            disabled={loading || !newFolderName}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Confirm Delete Dialog */}\n      <Dialog open={confirmDeleteDialogOpen} onClose={() => setConfirmDeleteDialogOpen(false)}>\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are you sure you want to delete the {itemToDelete?.type === 'container' ? 'container' : itemToDelete?.type === 'directory' ? 'folder' : 'file'}:\n            <Box component=\"span\" sx={{ fontWeight: 'bold', display: 'block', mt: 1 }}>\n              {itemToDelete?.name}\n            </Box>\n            {itemToDelete?.type === 'container' && (\n              <Typography color=\"error\" sx={{ mt: 2 }}>\n                This will delete all blobs in the container!\n              </Typography>\n            )}\n            {itemToDelete?.type === 'directory' && (\n              <Typography color=\"error\" sx={{ mt: 2 }}>\n                This will delete all contents of the folder!\n              </Typography>\n            )}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setConfirmDeleteDialogOpen(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button \n            onClick={deleteItem} \n            color=\"error\" \n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} /> : 'Delete'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Enhanced File Upload Dialog */}\n      <Dialog \n        open={fileUploadDialogOpen} \n        onClose={() => {\n          if (!loading) {\n            setFileUploadDialogOpen(false);\n            setSelectedFile(null);\n            setUploadProgress(0);\n          }\n        }}\n        fullWidth\n        maxWidth=\"md\"\n      >\n        <DialogTitle>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n            Upload Files to Azure Blob Storage\n            <IconButton onClick={() => {\n              if (!loading) {\n                setFileUploadDialogOpen(false);\n                setSelectedFile(null);\n                setUploadProgress(0);\n              }\n            }}>\n              <CloseIcon />\n            </IconButton>\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Upload Location:\n          </Typography>\n          <Paper variant=\"outlined\" sx={{ p: 1.5, mb: 2, bgcolor: 'background.default' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <ContainerIcon color=\"primary\" sx={{ mr: 1 }} />\n              <Typography sx={{ fontWeight: 'medium' }}>\n                {selectedContainer}{currentPath ? `/${currentPath}` : ''}\n              </Typography>\n            </Box>\n          </Paper>\n          \n          {/* Enhanced File Drop Zone */}\n          <Box\n            sx={{\n              border: '2px dashed',\n              borderColor: 'divider',\n              borderRadius: 1,\n              p: 3,\n              mb: 3,\n              textAlign: 'center',\n              transition: 'all 0.2s ease',\n              '&:hover': {\n                borderColor: 'primary.main',\n                bgcolor: 'action.hover'\n              },\n              position: 'relative',\n            }}\n            onDragOver={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = theme => theme.palette.primary.main;\n              e.currentTarget.style.backgroundColor = theme => theme.palette.action.hover;\n            }}\n            onDragLeave={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = '';\n              e.currentTarget.style.backgroundColor = '';\n            }}\n            onDrop={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              e.currentTarget.style.borderColor = '';\n              e.currentTarget.style.backgroundColor = '';\n              \n              if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n                // Process all dropped files\n                processFileSelection(e.dataTransfer.files);\n              }\n            }}\n          >\n            <UploadIcon color=\"primary\" sx={{ fontSize: 40, mb: 2 }} />\n            <Typography variant=\"h6\" gutterBottom>\n              Drag & Drop Files Here\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\n              or\n            </Typography>\n            <Button\n              variant=\"contained\"\n              component=\"label\"\n              startIcon={<UploadIcon />}\n            >\n              Browse Files\n              <input\n                type=\"file\"\n                hidden\n                multiple\n                onChange={(e) => {\n                  if (e.target.files && e.target.files.length > 0) {\n                    processFileSelection(e.target.files);\n                  }\n                }}\n              />\n            </Button>\n            <Typography variant=\"caption\" color=\"textSecondary\" sx={{ display: 'block', mt: 2 }}>\n              Supported file types: CSV, JSON, XML, PDF, Images, Text files\n            </Typography>\n          </Box>\n          \n          {/* File Preview & Validation Section */}\n          {selectedFile && (\n            <Box>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                File Preview\n              </Typography>\n              <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={12} md={6}>\n                    {/* Import the FileCard component for file preview */}\n                    {(() => {\n                      const FileCard = require('../../common/FileCard').default;\n                      const { generateFileMetadata } = require('../../../utils/fileTypeUtils');\n                      \n                      // Generate metadata for the file\n                      const fileMetadata = generateFileMetadata(selectedFile);\n                      \n                      return (\n                        <FileCard\n                          file={selectedFile}\n                          showActions={false}\n                          showPreview={false}\n                          variant=\"outlined\"\n                        />\n                      );\n                    })()}\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                      File Details\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>File name:</span> \n                        <span style={{ fontWeight: 'medium' }}>{selectedFile.name}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Size:</span> \n                        <span>{formatFileSize(selectedFile.size)}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Type:</span> \n                        <span>{selectedFile.type || 'Unknown'}</span>\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <span>Last modified:</span> \n                        <span>{new Date(selectedFile.lastModified).toLocaleString()}</span>\n                      </Typography>\n                    </Box>\n                    \n                    {/* File Type Validation */}\n                    {(() => {\n                      const { isPreviewSupported, getFileTypeDescription } = require('../../../utils/fileTypeUtils');\n                      const mimeType = selectedFile.type;\n                      const isSupported = isPreviewSupported(mimeType);\n                      \n                      return (\n                        <Box sx={{ mb: 2 }}>\n                          {isSupported ? (\n                            <Alert severity=\"success\" icon={<CheckCircleIcon />}>\n                              This file type ({getFileTypeDescription(mimeType)}) is fully supported.\n                            </Alert>\n                          ) : (\n                            <Alert severity=\"warning\">\n                              <AlertTitle>Limited Support</AlertTitle>\n                              This file type may have limited preview capabilities in the system.\n                            </Alert>\n                          )}\n                        </Box>\n                      );\n                    })()}\n                    \n                    <Button\n                      fullWidth\n                      variant=\"outlined\"\n                      color=\"error\"\n                      startIcon={<CloseIcon />}\n                      onClick={() => setSelectedFile(null)}\n                      sx={{ mt: 1 }}\n                    >\n                      Remove File\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n              \n              {/* Upload Progress Tracking */}\n              {uploadProgress > 0 && (\n                <Box sx={{ mt: 2, mb: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom display=\"flex\" justifyContent=\"space-between\">\n                    <span>Upload Progress</span>\n                    <span>{uploadProgress}%</span>\n                  </Typography>\n                  <LinearProgress \n                    variant=\"determinate\" \n                    value={uploadProgress} \n                    sx={{ \n                      height: 10, \n                      borderRadius: 5,\n                      mb: 1\n                    }} \n                  />\n                  <Typography variant=\"caption\" color=\"textSecondary\">\n                    {uploadProgress < 100 ? \n                      `Uploading ${selectedFile.name}...` : \n                      `Successfully uploaded ${selectedFile.name}`\n                    }\n                  </Typography>\n                  \n                  {/* Batch upload status indicator */}\n                  {filesToUpload.length > 1 && (\n                    <Box sx={{ mt: 1, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        File {currentUploadIndex + 1} of {filesToUpload.length}\n                      </Typography>\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                        {Array.from({ length: Math.min(filesToUpload.length, 5) }).map((_, index) => {\n                          // Calculate status for this dot\n                          let color = 'grey.300'; // default - not started\n                          if (index < currentUploadIndex) {\n                            color = 'success.main'; // completed\n                          } else if (index === currentUploadIndex) {\n                            color = uploadProgress === 100 ? 'success.main' : 'primary.main'; // in progress\n                          }\n                          \n                          return (\n                            <Box \n                              key={index} \n                              sx={{ \n                                width: 8, \n                                height: 8, \n                                borderRadius: '50%', \n                                bgcolor: color,\n                                mx: 0.5\n                              }} \n                            />\n                          );\n                        })}\n                        {filesToUpload.length > 5 && (\n                          <Typography variant=\"caption\" color=\"textSecondary\" sx={{ ml: 1 }}>\n                            +{filesToUpload.length - 5} more\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  )}\n                </Box>\n              )}\n              \n              {/* Upload Options */}\n              <Box sx={{ mt: 3 }}>\n                <Typography variant=\"subtitle2\" gutterBottom>\n                  Upload Options\n                </Typography>\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={uploadOptions.overwriteExisting} \n                      onChange={() => setUploadOptions(prev => ({\n                        ...prev,\n                        overwriteExisting: !prev.overwriteExisting\n                      }))} \n                      name=\"overwriteExisting\"\n                    />\n                  }\n                  label=\"Overwrite if file already exists\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={uploadOptions.calculateMD5} \n                      onChange={() => setUploadOptions(prev => ({\n                        ...prev,\n                        calculateMD5: !prev.calculateMD5\n                      }))} \n                      name=\"calculateMD5\"\n                    />\n                  }\n                  label=\"Calculate and store content MD5 (for integrity verification)\"\n                />\n\n                {/* Batch upload info */}\n                {filesToUpload.length > 1 && (\n                  <Box sx={{ mt: 2, p: 1, bgcolor: 'info.lightest', borderRadius: 1 }}>\n                    <Typography variant=\"body2\" gutterBottom sx={{ fontWeight: 'medium', color: 'info.main', display: 'flex', alignItems: 'center' }}>\n                      <InfoIcon fontSize=\"small\" sx={{ mr: 0.5 }} /> \n                      Batch Upload Information\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {filesToUpload.length} files selected for upload ({\n                        formatFileSize(filesToUpload.reduce((total, file) => total + file.size, 0))\n                      })\n                    </Typography>\n                    <Button\n                      size=\"small\"\n                      variant=\"text\"\n                      color=\"primary\"\n                      onClick={() => {\n                        setFilesToUpload([]);\n                        setSelectedFile(null);\n                      }}\n                      sx={{ mt: 1 }}\n                      startIcon={<CloseIcon fontSize=\"small\" />}\n                    >\n                      Clear Batch Selection\n                    </Button>\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions sx={{ px: 3, py: 2 }}>\n          <Button \n            onClick={() => {\n              setFileUploadDialogOpen(false);\n              setSelectedFile(null);\n              setUploadProgress(0);\n            }} \n            disabled={loading}\n          >\n            Cancel\n          </Button>\n          <Button \n            onClick={uploadFile} \n            variant=\"contained\"\n            color=\"primary\" \n            disabled={loading || !selectedFile || uploadProgress > 0}\n            startIcon={loading ? <CircularProgress size={20} /> : <UploadIcon />}\n          >\n            {loading \n              ? 'Uploading...' \n              : filesToUpload.length > 1 \n                ? `Upload ${filesToUpload.length} Files` \n                : 'Upload File'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      \n      {/* Enhanced File Viewer Dialog */}\n      <Dialog\n        open={fileViewerOpen}\n        onClose={() => setFileViewerOpen(false)}\n        fullWidth\n        maxWidth=\"lg\"\n      >\n        <DialogContent dividers sx={{ p: 0 }}>\n          {renderFilePreview(fileViewUrl, fileViewType)}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setFileViewerOpen(false)}>Close</Button>\n          {selectedItem && selectedItem.type === 'blob' && (\n            <>\n              <Button \n                onClick={() => {\n                  downloadBlob(selectedItem);\n                }} \n                startIcon={<DownloadIcon />}\n              >\n                Download\n              </Button>\n              <Button \n                onClick={() => {\n                  onSelectBlob({\n                    containerName: selectedContainer,\n                    path: currentPath,\n                    blobName: selectedItem.name,\n                    blobProperties: selectedItem.properties\n                  });\n                  setFileViewerOpen(false);\n                }} \n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<CheckCircleIcon />}\n              >\n                Select This File\n              </Button>\n            </>\n          )}\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nAzureBlobContainerBrowser.propTypes = {\n  config: PropTypes.object.isRequired,\n  onSelectContainer: PropTypes.func.isRequired,\n  onSelectBlob: PropTypes.func.isRequired,\n  readOnly: PropTypes.bool,\n  selectedContainer: PropTypes.string,\n  selectedPath: PropTypes.string,\n};\n\nexport default AzureBlobContainerBrowser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}