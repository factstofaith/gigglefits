{"ast":null,"code":"/**\n * Test S3 Configuration Component\n * \n * A simple test component to verify the implementation of the S3Configuration component.\n */import React,{useState}from'react';import{Box,Container,Paper,Typography,Divider,Grid,Button,Switch,FormControlLabel}from'@mui/material';// Import the component to test\nimport S3Configuration from\"../S3Configuration\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TestS3Configuration=()=>{// State to store the configuration\nconst[config,setConfig]=useState({credentials:null,region:'us-east-1',bucket:'',path:'',selectedObject:null});// UI State\nconst[readOnly,setReadOnly]=useState(false);// Handle configuration change\nconst handleConfigChange=newConfig=>{console.log('Configuration changed:',newConfig);setConfig(newConfig);};// Toggle read-only mode\nconst toggleReadOnly=()=>{setReadOnly(!readOnly);};return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{my:4},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"S3 Configuration Component Test\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",color:\"text.secondary\",paragraph:true,children:\"This page allows testing the S3Configuration component in isolation.\"}),/*#__PURE__*/_jsx(Box,{sx:{mb:3,display:'flex',justifyContent:'flex-end'},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:readOnly,onChange:toggleReadOnly,name:\"readOnly\"}),label:\"Read-only mode\"})}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsx(S3Configuration,{onChange:handleConfigChange,value:config,readOnly:readOnly}),/*#__PURE__*/_jsx(Divider,{sx:{my:3}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Current Configuration:\"}),/*#__PURE__*/_jsx(Paper,{variant:\"outlined\",sx:{p:2,bgcolor:'background.default'},children:/*#__PURE__*/_jsx(\"pre\",{style:{margin:0,overflow:'auto'},children:JSON.stringify(config,null,2)})})]})});};export default TestS3Configuration;","map":{"version":3,"names":["React","useState","Box","Container","Paper","Typography","Divider","Grid","Button","Switch","FormControlLabel","S3Configuration","jsx","_jsx","jsxs","_jsxs","TestS3Configuration","config","setConfig","credentials","region","bucket","path","selectedObject","readOnly","setReadOnly","handleConfigChange","newConfig","console","log","toggleReadOnly","maxWidth","sx","my","children","p","variant","gutterBottom","color","paragraph","mb","display","justifyContent","control","checked","onChange","name","label","value","bgcolor","style","margin","overflow","JSON","stringify"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/integration/test/TestS3Configuration.jsx"],"sourcesContent":["/**\n * Test S3 Configuration Component\n * \n * A simple test component to verify the implementation of the S3Configuration component.\n */\n\nimport React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  Typography,\n  Divider,\n  Grid,\n  Button,\n  Switch,\n  FormControlLabel,\n} from '@mui/material';\n\n// Import the component to test\nimport S3Configuration from '../S3Configuration';\n\nconst TestS3Configuration = () => {\n  // State to store the configuration\n  const [config, setConfig] = useState({\n    credentials: null,\n    region: 'us-east-1',\n    bucket: '',\n    path: '',\n    selectedObject: null,\n  });\n  \n  // UI State\n  const [readOnly, setReadOnly] = useState(false);\n  \n  // Handle configuration change\n  const handleConfigChange = (newConfig) => {\n    console.log('Configuration changed:', newConfig);\n    setConfig(newConfig);\n  };\n  \n  // Toggle read-only mode\n  const toggleReadOnly = () => {\n    setReadOnly(!readOnly);\n  };\n  \n  return (\n    <Container maxWidth=\"lg\" sx={{ my: 4 }}>\n      <Paper sx={{ p: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          S3 Configuration Component Test\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          This page allows testing the S3Configuration component in isolation.\n        </Typography>\n        \n        <Box sx={{ mb: 3, display: 'flex', justifyContent: 'flex-end' }}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={readOnly}\n                onChange={toggleReadOnly}\n                name=\"readOnly\"\n              />\n            }\n            label=\"Read-only mode\"\n          />\n        </Box>\n        \n        <Divider sx={{ mb: 3 }} />\n        \n        {/* Component under test */}\n        <S3Configuration\n          onChange={handleConfigChange}\n          value={config}\n          readOnly={readOnly}\n        />\n        \n        <Divider sx={{ my: 3 }} />\n        \n        {/* Debug view of the configuration */}\n        <Typography variant=\"h6\" gutterBottom>\n          Current Configuration:\n        </Typography>\n        <Paper variant=\"outlined\" sx={{ p: 2, bgcolor: 'background.default' }}>\n          <pre style={{ margin: 0, overflow: 'auto' }}>\n            {JSON.stringify(config, null, 2)}\n          </pre>\n        </Paper>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default TestS3Configuration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}