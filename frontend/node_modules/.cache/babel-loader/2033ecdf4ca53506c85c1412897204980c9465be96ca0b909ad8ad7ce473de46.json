{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useUser}from\"../../contexts/UserContext\";/**\n * RequireAuth component - Protects routes that require authentication\n * Redirects to login if user is not authenticated\n */import{jsx as _jsx}from\"react/jsx-runtime\";const RequireAuth=_ref=>{let{children}=_ref;const{state:user}=useUser();const location=useLocation();if(!user||!user.isAuthenticated){// Redirect to login page but save the attempted location\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}return children;};export default RequireAuth;","map":{"version":3,"names":["React","Navigate","useLocation","useUser","jsx","_jsx","RequireAuth","_ref","children","state","user","location","isAuthenticated","to","from","replace"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/components/auth/RequireAuth.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useUser } from '../../contexts/UserContext';\n\n/**\n * RequireAuth component - Protects routes that require authentication\n * Redirects to login if user is not authenticated\n */\nconst RequireAuth = ({ children }) => {\n  const { state: user } = useUser();\n  const location = useLocation();\n\n  if (!user || !user.isAuthenticated) {\n    // Redirect to login page but save the attempted location\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  return children;\n};\n\nexport default RequireAuth;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,kCAEhB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,yBAIA,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/B,KAAM,CAAEE,KAAK,CAAEC,IAAK,CAAC,CAAGP,OAAO,CAAC,CAAC,CACjC,KAAM,CAAAQ,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAE9B,GAAI,CAACQ,IAAI,EAAI,CAACA,IAAI,CAACE,eAAe,CAAE,CAClC;AACA,mBAAOP,IAAA,CAACJ,QAAQ,EAACY,EAAE,CAAC,QAAQ,CAACJ,KAAK,CAAE,CAAEK,IAAI,CAAEH,QAAS,CAAE,CAACI,OAAO,MAAE,CAAC,CACpE,CAEA,MAAO,CAAAP,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}