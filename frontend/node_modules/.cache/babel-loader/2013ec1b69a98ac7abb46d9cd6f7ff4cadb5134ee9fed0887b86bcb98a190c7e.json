{"ast":null,"code":"/**\n * ErrorBoundary Component\n * \n * A class component that catches JavaScript errors in its child component tree.\n * Displays a fallback UI to prevent the entire app from crashing.\n */\n\nimport React, { Component } from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.resetError = () => {\n      this.setState({\n        hasError: false,\n        error: null,\n        errorInfo: null\n      });\n    };\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI\n    return {\n      hasError: true,\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    this.setState({\n      errorInfo\n    });\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log error in development\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n  }\n  render() {\n    const {\n      hasError,\n      error,\n      errorInfo\n    } = this.state;\n    const {\n      fallback,\n      children\n    } = this.props;\n    if (hasError) {\n      // You can render any custom fallback UI\n      if (fallback) {\n        return typeof fallback === 'function' ? fallback(error, errorInfo, this.resetError) : fallback;\n      }\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"error-boundary-fallback\",\n        children: [/*#__PURE__*/_jsx(\"h2\", {\n          children: \"Something went wrong.\"\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: this.resetError,\n          children: \"Try again\"\n        }), process.env.NODE_ENV !== 'production' && /*#__PURE__*/_jsxs(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap',\n            marginTop: '16px'\n          },\n          children: [/*#__PURE__*/_jsx(\"summary\", {\n            children: \"Error details\"\n          }), error && error.toString(), /*#__PURE__*/_jsx(\"br\", {}), errorInfo && errorInfo.componentStack]\n        })]\n      });\n    }\n    return children;\n  }\n}\nexport default ErrorBoundary;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}