{"ast":null,"code":"/**\n * Accessibility Focus Hook\n * \n * A custom hook for managing focus in an accessible way.\n * Part of the zero technical debt accessibility implementation.\n * \n * @module hooks/a11y/useA11yFocus\n */import{useCallback,useRef,useEffect}from'react';/**\n * Custom hook for managing focus in an accessible way\n * \n * @param {Object} options - Configuration options\n * @param {boolean} [options.trapFocus=false] - Whether to trap focus within a container\n * @param {boolean} [options.autoFocus=false] - Whether to auto-focus the first focusable element\n * @param {boolean} [options.restoreFocus=true] - Whether to restore focus when unmounting\n * @returns {Object} Object containing focus management functions\n */const useA11yFocus=function(){let{trapFocus=false,autoFocus=false,restoreFocus=true}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};// Reference to the container element\nconst containerRef=useRef(null);// Reference to the element to restore focus to\nconst previousFocusRef=useRef(null);// Reference to the first and last focusable elements\nconst firstFocusableRef=useRef(null);const lastFocusableRef=useRef(null);/**\n   * Get all focusable elements within the container\n   */const getFocusableElements=useCallback(()=>{if(!containerRef.current)return[];// Selector for all potentially focusable elements\nconst focusableSelector=['a[href]:not([tabindex=\"-1\"])','button:not([disabled]):not([tabindex=\"-1\"])','input:not([disabled]):not([tabindex=\"-1\"])','select:not([disabled]):not([tabindex=\"-1\"])','textarea:not([disabled]):not([tabindex=\"-1\"])','area[href]:not([tabindex=\"-1\"])','[contentEditable=true]:not([tabindex=\"-1\"])','[tabindex]:not([tabindex=\"-1\"])'].join(',');return Array.from(containerRef.current.querySelectorAll(focusableSelector));},[]);/**\n   * Update the first and last focusable elements refs\n   */const updateFocusableRefs=useCallback(()=>{const focusableElements=getFocusableElements();if(focusableElements.length>0){firstFocusableRef.current=focusableElements[0];lastFocusableRef.current=focusableElements[focusableElements.length-1];}else{firstFocusableRef.current=null;lastFocusableRef.current=null;}},[getFocusableElements]);/**\n   * Set the container element reference\n   */const setContainerRef=useCallback(element=>{if(!element)return;containerRef.current=element;updateFocusableRefs();},[updateFocusableRefs]);/**\n   * Focus a specific element\n   */const focusElement=useCallback(element=>{if(!element||typeof element.focus!=='function')return;try{element.focus();}catch(e){console.error('Error focusing element:',e);}},[]);/**\n   * Focus the first focusable element in the container\n   */const focusFirstElement=useCallback(()=>{if(firstFocusableRef.current){focusElement(firstFocusableRef.current);return true;}return false;},[focusElement]);/**\n   * Focus the last focusable element in the container\n   */const focusLastElement=useCallback(()=>{if(lastFocusableRef.current){focusElement(lastFocusableRef.current);return true;}return false;},[focusElement]);/**\n   * Save the currently focused element\n   */const saveFocus=useCallback(()=>{previousFocusRef.current=document.activeElement;},[]);/**\n   * Restore focus to the previously focused element\n   */const restorePreviousFocus=useCallback(()=>{if(previousFocusRef.current&&typeof previousFocusRef.current.focus==='function'){try{previousFocusRef.current.focus();}catch(e){console.error('Error restoring focus:',e);}}},[]);/**\n   * Handle tab key to trap focus within the container\n   */const handleTabKey=useCallback(event=>{if(!trapFocus||!containerRef.current)return;// Update focusable elements in case the DOM has changed\nupdateFocusableRefs();// Handle shift+tab\nif(event.shiftKey&&document.activeElement===firstFocusableRef.current){event.preventDefault();focusLastElement();}// Handle tab\nelse if(!event.shiftKey&&document.activeElement===lastFocusableRef.current){event.preventDefault();focusFirstElement();}},[trapFocus,updateFocusableRefs,focusFirstElement,focusLastElement]);/**\n   * Set up key event listeners for focus trapping\n   */useEffect(()=>{if(!trapFocus||!containerRef.current)return;// Update focusable elements\nupdateFocusableRefs();// Set up event listener for keydown\nconst handleKeyDown=event=>{if(event.key==='Tab'){handleTabKey(event);}};// Add the event listener\ncontainerRef.current.addEventListener('keydown',handleKeyDown);// Clean up event listener\nreturn()=>{if(containerRef.current){containerRef.current.removeEventListener('keydown',handleKeyDown);}};},[trapFocus,handleTabKey,updateFocusableRefs]);/**\n   * Set up auto-focus and restore focus on unmount\n   */useEffect(()=>{// Save the currently focused element\nif(restoreFocus){saveFocus();}// Auto-focus the first element if requested\nif(autoFocus){updateFocusableRefs();focusFirstElement();}// Restore focus when unmounting\nreturn()=>{if(restoreFocus){restorePreviousFocus();}};},[autoFocus,restoreFocus,saveFocus,updateFocusableRefs,focusFirstElement,restorePreviousFocus]);return{containerRef,setContainerRef,focusFirstElement,focusLastElement,focusElement,saveFocus,restorePreviousFocus,updateFocusableRefs};};export default useA11yFocus;","map":{"version":3,"names":["useCallback","useRef","useEffect","useA11yFocus","trapFocus","autoFocus","restoreFocus","arguments","length","undefined","containerRef","previousFocusRef","firstFocusableRef","lastFocusableRef","getFocusableElements","current","focusableSelector","join","Array","from","querySelectorAll","updateFocusableRefs","focusableElements","setContainerRef","element","focusElement","focus","e","console","error","focusFirstElement","focusLastElement","saveFocus","document","activeElement","restorePreviousFocus","handleTabKey","event","shiftKey","preventDefault","handleKeyDown","key","addEventListener","removeEventListener"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/frontend/src/hooks/a11y/useA11yFocus.js"],"sourcesContent":["/**\n * Accessibility Focus Hook\n * \n * A custom hook for managing focus in an accessible way.\n * Part of the zero technical debt accessibility implementation.\n * \n * @module hooks/a11y/useA11yFocus\n */\n\nimport { useCallback, useRef, useEffect } from 'react';\n\n/**\n * Custom hook for managing focus in an accessible way\n * \n * @param {Object} options - Configuration options\n * @param {boolean} [options.trapFocus=false] - Whether to trap focus within a container\n * @param {boolean} [options.autoFocus=false] - Whether to auto-focus the first focusable element\n * @param {boolean} [options.restoreFocus=true] - Whether to restore focus when unmounting\n * @returns {Object} Object containing focus management functions\n */\nconst useA11yFocus = ({\n  trapFocus = false,\n  autoFocus = false,\n  restoreFocus = true\n} = {}) => {\n  // Reference to the container element\n  const containerRef = useRef(null);\n  \n  // Reference to the element to restore focus to\n  const previousFocusRef = useRef(null);\n  \n  // Reference to the first and last focusable elements\n  const firstFocusableRef = useRef(null);\n  const lastFocusableRef = useRef(null);\n  \n  /**\n   * Get all focusable elements within the container\n   */\n  const getFocusableElements = useCallback(() => {\n    if (!containerRef.current) return [];\n    \n    // Selector for all potentially focusable elements\n    const focusableSelector = [\n      'a[href]:not([tabindex=\"-1\"])',\n      'button:not([disabled]):not([tabindex=\"-1\"])',\n      'input:not([disabled]):not([tabindex=\"-1\"])',\n      'select:not([disabled]):not([tabindex=\"-1\"])',\n      'textarea:not([disabled]):not([tabindex=\"-1\"])',\n      'area[href]:not([tabindex=\"-1\"])',\n      '[contentEditable=true]:not([tabindex=\"-1\"])',\n      '[tabindex]:not([tabindex=\"-1\"])'\n    ].join(',');\n    \n    return Array.from(containerRef.current.querySelectorAll(focusableSelector));\n  }, []);\n  \n  /**\n   * Update the first and last focusable elements refs\n   */\n  const updateFocusableRefs = useCallback(() => {\n    const focusableElements = getFocusableElements();\n    \n    if (focusableElements.length > 0) {\n      firstFocusableRef.current = focusableElements[0];\n      lastFocusableRef.current = focusableElements[focusableElements.length - 1];\n    } else {\n      firstFocusableRef.current = null;\n      lastFocusableRef.current = null;\n    }\n  }, [getFocusableElements]);\n  \n  /**\n   * Set the container element reference\n   */\n  const setContainerRef = useCallback((element) => {\n    if (!element) return;\n    \n    containerRef.current = element;\n    updateFocusableRefs();\n  }, [updateFocusableRefs]);\n  \n  /**\n   * Focus a specific element\n   */\n  const focusElement = useCallback((element) => {\n    if (!element || typeof element.focus !== 'function') return;\n    \n    try {\n      element.focus();\n    } catch (e) {\n      console.error('Error focusing element:', e);\n    }\n  }, []);\n  \n  /**\n   * Focus the first focusable element in the container\n   */\n  const focusFirstElement = useCallback(() => {\n    if (firstFocusableRef.current) {\n      focusElement(firstFocusableRef.current);\n      return true;\n    }\n    return false;\n  }, [focusElement]);\n  \n  /**\n   * Focus the last focusable element in the container\n   */\n  const focusLastElement = useCallback(() => {\n    if (lastFocusableRef.current) {\n      focusElement(lastFocusableRef.current);\n      return true;\n    }\n    return false;\n  }, [focusElement]);\n  \n  /**\n   * Save the currently focused element\n   */\n  const saveFocus = useCallback(() => {\n    previousFocusRef.current = document.activeElement;\n  }, []);\n  \n  /**\n   * Restore focus to the previously focused element\n   */\n  const restorePreviousFocus = useCallback(() => {\n    if (previousFocusRef.current && typeof previousFocusRef.current.focus === 'function') {\n      try {\n        previousFocusRef.current.focus();\n      } catch (e) {\n        console.error('Error restoring focus:', e);\n      }\n    }\n  }, []);\n  \n  /**\n   * Handle tab key to trap focus within the container\n   */\n  const handleTabKey = useCallback((event) => {\n    if (!trapFocus || !containerRef.current) return;\n    \n    // Update focusable elements in case the DOM has changed\n    updateFocusableRefs();\n    \n    // Handle shift+tab\n    if (event.shiftKey && document.activeElement === firstFocusableRef.current) {\n      event.preventDefault();\n      focusLastElement();\n    }\n    // Handle tab\n    else if (!event.shiftKey && document.activeElement === lastFocusableRef.current) {\n      event.preventDefault();\n      focusFirstElement();\n    }\n  }, [trapFocus, updateFocusableRefs, focusFirstElement, focusLastElement]);\n  \n  /**\n   * Set up key event listeners for focus trapping\n   */\n  useEffect(() => {\n    if (!trapFocus || !containerRef.current) return;\n    \n    // Update focusable elements\n    updateFocusableRefs();\n    \n    // Set up event listener for keydown\n    const handleKeyDown = (event) => {\n      if (event.key === 'Tab') {\n        handleTabKey(event);\n      }\n    };\n    \n    // Add the event listener\n    containerRef.current.addEventListener('keydown', handleKeyDown);\n    \n    // Clean up event listener\n    return () => {\n      if (containerRef.current) {\n        containerRef.current.removeEventListener('keydown', handleKeyDown);\n      }\n    };\n  }, [trapFocus, handleTabKey, updateFocusableRefs]);\n  \n  /**\n   * Set up auto-focus and restore focus on unmount\n   */\n  useEffect(() => {\n    // Save the currently focused element\n    if (restoreFocus) {\n      saveFocus();\n    }\n    \n    // Auto-focus the first element if requested\n    if (autoFocus) {\n      updateFocusableRefs();\n      focusFirstElement();\n    }\n    \n    // Restore focus when unmounting\n    return () => {\n      if (restoreFocus) {\n        restorePreviousFocus();\n      }\n    };\n  }, [autoFocus, restoreFocus, saveFocus, updateFocusableRefs, focusFirstElement, restorePreviousFocus]);\n  \n  return {\n    containerRef,\n    setContainerRef,\n    focusFirstElement,\n    focusLastElement,\n    focusElement,\n    saveFocus,\n    restorePreviousFocus,\n    updateFocusableRefs\n  };\n};\n\nexport default useA11yFocus;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}