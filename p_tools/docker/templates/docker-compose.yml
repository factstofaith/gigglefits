# TAP Integration Platform Docker Compose Configuration
# Standardized with proper container health checks, networking, and volume management

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ${FRONTEND_DOCKERFILE:-Dockerfile.dev}
      args:
        - NPM_INSTALL_FLAGS=--legacy-peer-deps
    image: tap-frontend:${ENV:-local}
    container_name: tap-frontend-${ENV:-dev}
    ports:
      - "${FRONTEND_PORT:-3456}:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
      - REACT_APP_VERSION=${REACT_APP_VERSION:-1.0.0}
      - REACT_APP_ENVIRONMENT=${NODE_ENV:-development}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING:-true}
      - WDS_SOCKET_HOST=${WDS_SOCKET_HOST:-localhost}
      - WDS_SOCKET_PORT=${FRONTEND_PORT:-3456}
      - WEBPACK_DEV_SERVER=${WEBPACK_DEV_SERVER:-true}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - tap-network
    restart: "${RESTART_POLICY:-unless-stopped}"

  backend:
    build:
      context: ./backend
      dockerfile: ${BACKEND_DOCKERFILE:-Dockerfile.dev}
      args:
        - EXTRA_PACKAGES=${BACKEND_EXTRA_PACKAGES:-pydantic-settings psutil httpx}
    image: tap-backend:${ENV:-local}
    container_name: tap-backend-${ENV:-dev}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
      - backend_venv:/app/.venv
      - backend_data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:3456}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///data/local_dev.sqlite}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-local_development_secret_change_in_production}
      - ENVIRONMENT=${NODE_ENV:-development}
      - APP_ENVIRONMENT=${NODE_ENV:-development}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - DEBUG=${DEBUG:-true}
      - DEBUG_MODE=${DEBUG_MODE:-true}
      - SETUP_INVITATION_SYSTEM=${SETUP_INVITATION_SYSTEM:-false}
      - DB_SSL_REQUIRED=${DB_SSL_REQUIRED:-false}
      - WORKERS=${BACKEND_WORKERS:-1}
      - AUTOMIGRATE=${AUTOMIGRATE:-false}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - tap-network
    restart: "${RESTART_POLICY:-unless-stopped}"

networks:
  tap-network:
    name: tap-network-${ENV:-dev}
    driver: bridge

volumes:
  frontend_node_modules:
    name: tap-frontend-node-modules-${ENV:-dev}
  backend_venv:
    name: tap-backend-venv-${ENV:-dev}
  backend_data:
    name: tap-backend-data-${ENV:-dev}