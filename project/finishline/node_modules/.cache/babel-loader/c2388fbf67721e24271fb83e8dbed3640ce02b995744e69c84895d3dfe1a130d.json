{"ast":null,"code":"/**\n * Modal\n * \n * A standardized modal/dialog component for displaying content in an overlay.\n * \n * @module components/common/Modal\n */\n\nimport React, { forwardRef, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\n/**\n * Standardized modal/dialog component\n * \n * @param {Object} props - Component props\n * @param {boolean} props.open - Whether the modal is open\n * @param {function} props.onClose - Function to call when the modal is closed\n * @param {node} props.children - Modal content\n * @param {string} [props.title] - Modal title\n * @param {node} [props.footer] - Modal footer content\n * @param {boolean} [props.closeOnBackdropClick=true] - Whether clicking the backdrop closes the modal\n * @param {boolean} [props.closeOnEscape=true] - Whether pressing the Escape key closes the modal\n * @param {string} [props.size='medium'] - Modal size\n * @param {boolean} [props.fullWidth=false] - Whether the modal should take full width\n * @param {string} [props.className] - Additional CSS class names\n * @param {string} [props.backdropClassName] - Additional CSS class names for the backdrop\n * @param {React.Ref} ref - Forwarded ref\n * @returns {React.ReactPortal|null} The modal component\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    open,\n    onClose,\n    children,\n    title,\n    footer,\n    closeOnBackdropClick = true,\n    closeOnEscape = true,\n    size = 'medium',\n    fullWidth = false,\n    className = '',\n    backdropClassName = '',\n    ...rest\n  } = _ref;\n  const modalRef = useRef(null);\n  const modalElement = document.getElementById('modal-root') || document.body;\n\n  // Size styles\n  const sizeMap = {\n    small: {\n      width: '400px',\n      maxWidth: '90%'\n    },\n    medium: {\n      width: '600px',\n      maxWidth: '90%'\n    },\n    large: {\n      width: '800px',\n      maxWidth: '90%'\n    },\n    xlarge: {\n      width: '1100px',\n      maxWidth: '90%'\n    }\n  };\n\n  // Focus the modal when it opens\n  useEffect(() => {\n    if (open) {\n      // Create a focus trap within the modal\n      const handleFocus = e => {\n        if (modalRef.current && !modalRef.current.contains(e.target)) {\n          modalRef.current.focus();\n        }\n      };\n\n      // Get first focusable element in the modal\n      const focusableElement = modalRef.current?.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n\n      // Focus on the first focusable element, or the modal itself if none is found\n      if (focusableElement) {\n        focusableElement.focus();\n      } else if (modalRef.current) {\n        modalRef.current.focus();\n      }\n      document.addEventListener('focus', handleFocus, true);\n\n      // Disable body scrolling\n      document.body.style.overflow = 'hidden';\n      document.body.style.paddingRight = '15px'; // Compensate for scrollbar disappearing\n\n      return () => {\n        document.removeEventListener('focus', handleFocus, true);\n        document.body.style.overflow = '';\n        document.body.style.paddingRight = '';\n      };\n    }\n  }, [open]);\n\n  // Handle escape key press\n  useEffect(() => {\n    if (!open || !closeOnEscape) return;\n    const handleKeyDown = e => {\n      if (e.key === 'Escape' && onClose) {\n        onClose();\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose, closeOnEscape]);\n\n  // Handle backdrop click\n  const handleBackdropClick = e => {\n    if (closeOnBackdropClick && e.target === e.currentTarget && onClose) {\n      onClose();\n    }\n  };\n\n  // Don't render if not open\n  if (!open) return null;\n\n  // Backdrop styles\n  const backdropStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000,\n    backdropFilter: 'blur(2px)'\n  };\n\n  // Modal styles\n  const modalStyle = {\n    backgroundColor: '#ffffff',\n    borderRadius: '4px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '90vh',\n    width: fullWidth ? '90%' : sizeMap[size]?.width || sizeMap.medium.width,\n    maxWidth: sizeMap[size]?.maxWidth || '90%',\n    position: 'relative',\n    outline: 'none',\n    overflow: 'hidden'\n  };\n\n  // Header styles\n  const headerStyle = {\n    padding: '16px 24px',\n    borderBottom: '1px solid #e0e0e0',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  };\n\n  // Title styles\n  const titleStyle = {\n    margin: 0,\n    fontSize: '18px',\n    fontWeight: 500,\n    color: '#212121',\n    flex: 1\n  };\n\n  // Close button styles\n  const closeButtonStyle = {\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderRadius: '50%',\n    width: '32px',\n    height: '32px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'background-color 0.2s',\n    padding: 0,\n    color: '#757575'\n  };\n\n  // Content styles\n  const contentStyle = {\n    padding: '24px',\n    overflowY: 'auto',\n    flexGrow: 1\n  };\n\n  // Footer styles\n  const footerStyle = {\n    padding: '16px 24px',\n    borderTop: '1px solid #e0e0e0',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    gap: '8px'\n  };\n  return /*#__PURE__*/createPortal(/*#__PURE__*/_jsx(\"div\", {\n    className: `tap-modal-backdrop ${backdropClassName}`,\n    style: backdropStyle,\n    onClick: handleBackdropClick,\n    role: \"presentation\",\n    \"data-testid\": \"tap-modal-backdrop\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      ref: node => {\n        // Handle both refs\n        modalRef.current = node;\n        if (typeof ref === 'function') {\n          ref(node);\n        } else if (ref) {\n          ref.current = node;\n        }\n      },\n      role: \"dialog\",\n      \"aria-modal\": \"true\",\n      \"aria-labelledby\": title ? 'modal-title' : undefined,\n      className: `tap-modal tap-modal--${size} ${fullWidth ? 'tap-modal--fullwidth' : ''} ${className}`,\n      style: modalStyle,\n      tabIndex: -1,\n      \"data-testid\": \"tap-modal\",\n      ...rest,\n      children: [(title || onClose) && /*#__PURE__*/_jsxs(\"div\", {\n        className: \"tap-modal__header\",\n        style: headerStyle,\n        children: [title && /*#__PURE__*/_jsx(\"h2\", {\n          id: \"modal-title\",\n          className: \"tap-modal__title\",\n          style: titleStyle,\n          children: title\n        }), onClose && /*#__PURE__*/_jsx(\"button\", {\n          type: \"button\",\n          onClick: onClose,\n          \"aria-label\": \"Close\",\n          className: \"tap-modal__close\",\n          style: closeButtonStyle,\n          \"data-testid\": \"tap-modal-close-button\",\n          children: /*#__PURE__*/_jsx(\"svg\", {\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsx(\"path\", {\n              d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\n              fill: \"currentColor\"\n            })\n          })\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"tap-modal__content\",\n        style: contentStyle,\n        children: children\n      }), footer && /*#__PURE__*/_jsx(\"div\", {\n        className: \"tap-modal__footer\",\n        style: footerStyle,\n        children: footer\n      })]\n    })\n  }), modalElement);\n});\n\n// Display name for debugging\nModal.displayName = 'Modal';\n\n// Prop types\nModal.propTypes = {\n  /** Whether the modal is open */\n  open: PropTypes.bool.isRequired,\n  /** Function to call when the modal is closed */\n  onClose: PropTypes.func.isRequired,\n  /** Modal content */\n  children: PropTypes.node.isRequired,\n  /** Modal title */\n  title: PropTypes.string,\n  /** Modal footer content */\n  footer: PropTypes.node,\n  /** Whether clicking the backdrop closes the modal */\n  closeOnBackdropClick: PropTypes.bool,\n  /** Whether pressing the Escape key closes the modal */\n  closeOnEscape: PropTypes.bool,\n  /** Modal size */\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n  /** Whether the modal should take full width */\n  fullWidth: PropTypes.bool,\n  /** Additional CSS class names */\n  className: PropTypes.string,\n  /** Additional CSS class names for the backdrop */\n  backdropClassName: PropTypes.string\n};\nexport default Modal;","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","PropTypes","createPortal","jsx","_jsx","jsxs","_jsxs","Modal","_ref","ref","open","onClose","children","title","footer","closeOnBackdropClick","closeOnEscape","size","fullWidth","className","backdropClassName","rest","modalRef","modalElement","document","getElementById","body","sizeMap","small","width","maxWidth","medium","large","xlarge","handleFocus","e","current","contains","target","focus","focusableElement","querySelector","addEventListener","style","overflow","paddingRight","removeEventListener","handleKeyDown","key","handleBackdropClick","currentTarget","backdropStyle","position","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","backdropFilter","modalStyle","borderRadius","boxShadow","flexDirection","maxHeight","outline","headerStyle","padding","borderBottom","titleStyle","margin","fontSize","fontWeight","color","flex","closeButtonStyle","border","height","cursor","transition","contentStyle","overflowY","flexGrow","footerStyle","borderTop","gap","onClick","role","node","undefined","tabIndex","id","type","viewBox","fill","xmlns","d","displayName","propTypes","bool","isRequired","func","string","oneOf"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/project/finishline/src/components/common/Modal.jsx"],"sourcesContent":["/**\n * Modal\n * \n * A standardized modal/dialog component for displaying content in an overlay.\n * \n * @module components/common/Modal\n */\n\nimport React, { forwardRef, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\n/**\n * Standardized modal/dialog component\n * \n * @param {Object} props - Component props\n * @param {boolean} props.open - Whether the modal is open\n * @param {function} props.onClose - Function to call when the modal is closed\n * @param {node} props.children - Modal content\n * @param {string} [props.title] - Modal title\n * @param {node} [props.footer] - Modal footer content\n * @param {boolean} [props.closeOnBackdropClick=true] - Whether clicking the backdrop closes the modal\n * @param {boolean} [props.closeOnEscape=true] - Whether pressing the Escape key closes the modal\n * @param {string} [props.size='medium'] - Modal size\n * @param {boolean} [props.fullWidth=false] - Whether the modal should take full width\n * @param {string} [props.className] - Additional CSS class names\n * @param {string} [props.backdropClassName] - Additional CSS class names for the backdrop\n * @param {React.Ref} ref - Forwarded ref\n * @returns {React.ReactPortal|null} The modal component\n */\nconst Modal = forwardRef(({\n  open,\n  onClose,\n  children,\n  title,\n  footer,\n  closeOnBackdropClick = true,\n  closeOnEscape = true,\n  size = 'medium',\n  fullWidth = false,\n  className = '',\n  backdropClassName = '',\n  ...rest\n}, ref) => {\n  const modalRef = useRef(null);\n  const modalElement = document.getElementById('modal-root') || document.body;\n  \n  // Size styles\n  const sizeMap = {\n    small: {\n      width: '400px',\n      maxWidth: '90%',\n    },\n    medium: {\n      width: '600px',\n      maxWidth: '90%',\n    },\n    large: {\n      width: '800px',\n      maxWidth: '90%',\n    },\n    xlarge: {\n      width: '1100px',\n      maxWidth: '90%',\n    },\n  };\n  \n  // Focus the modal when it opens\n  useEffect(() => {\n    if (open) {\n      // Create a focus trap within the modal\n      const handleFocus = (e) => {\n        if (modalRef.current && !modalRef.current.contains(e.target)) {\n          modalRef.current.focus();\n        }\n      };\n      \n      // Get first focusable element in the modal\n      const focusableElement = modalRef.current?.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n      \n      // Focus on the first focusable element, or the modal itself if none is found\n      if (focusableElement) {\n        focusableElement.focus();\n      } else if (modalRef.current) {\n        modalRef.current.focus();\n      }\n      \n      document.addEventListener('focus', handleFocus, true);\n      \n      // Disable body scrolling\n      document.body.style.overflow = 'hidden';\n      document.body.style.paddingRight = '15px'; // Compensate for scrollbar disappearing\n      \n      return () => {\n        document.removeEventListener('focus', handleFocus, true);\n        document.body.style.overflow = '';\n        document.body.style.paddingRight = '';\n      };\n    }\n  }, [open]);\n  \n  // Handle escape key press\n  useEffect(() => {\n    if (!open || !closeOnEscape) return;\n    \n    const handleKeyDown = (e) => {\n      if (e.key === 'Escape' && onClose) {\n        onClose();\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose, closeOnEscape]);\n  \n  // Handle backdrop click\n  const handleBackdropClick = (e) => {\n    if (closeOnBackdropClick && e.target === e.currentTarget && onClose) {\n      onClose();\n    }\n  };\n  \n  // Don't render if not open\n  if (!open) return null;\n  \n  // Backdrop styles\n  const backdropStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 1000,\n    backdropFilter: 'blur(2px)',\n  };\n  \n  // Modal styles\n  const modalStyle = {\n    backgroundColor: '#ffffff',\n    borderRadius: '4px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.15)',\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: '90vh',\n    width: fullWidth ? '90%' : sizeMap[size]?.width || sizeMap.medium.width,\n    maxWidth: sizeMap[size]?.maxWidth || '90%',\n    position: 'relative',\n    outline: 'none',\n    overflow: 'hidden',\n  };\n  \n  // Header styles\n  const headerStyle = {\n    padding: '16px 24px',\n    borderBottom: '1px solid #e0e0e0',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  };\n  \n  // Title styles\n  const titleStyle = {\n    margin: 0,\n    fontSize: '18px',\n    fontWeight: 500,\n    color: '#212121',\n    flex: 1,\n  };\n  \n  // Close button styles\n  const closeButtonStyle = {\n    backgroundColor: 'transparent',\n    border: 'none',\n    borderRadius: '50%',\n    width: '32px',\n    height: '32px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    cursor: 'pointer',\n    transition: 'background-color 0.2s',\n    padding: 0,\n    color: '#757575',\n  };\n  \n  // Content styles\n  const contentStyle = {\n    padding: '24px',\n    overflowY: 'auto',\n    flexGrow: 1,\n  };\n  \n  // Footer styles\n  const footerStyle = {\n    padding: '16px 24px',\n    borderTop: '1px solid #e0e0e0',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    gap: '8px',\n  };\n  \n  return createPortal(\n    <div \n      className={`tap-modal-backdrop ${backdropClassName}`}\n      style={backdropStyle}\n      onClick={handleBackdropClick}\n      role=\"presentation\"\n      data-testid=\"tap-modal-backdrop\"\n    >\n      <div\n        ref={(node) => {\n          // Handle both refs\n          modalRef.current = node;\n          if (typeof ref === 'function') {\n            ref(node);\n          } else if (ref) {\n            ref.current = node;\n          }\n        }}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={title ? 'modal-title' : undefined}\n        className={`tap-modal tap-modal--${size} ${fullWidth ? 'tap-modal--fullwidth' : ''} ${className}`}\n        style={modalStyle}\n        tabIndex={-1}\n        data-testid=\"tap-modal\"\n        {...rest}\n      >\n        {/* Modal Header */}\n        {(title || onClose) && (\n          <div className=\"tap-modal__header\" style={headerStyle}>\n            {title && (\n              <h2 id=\"modal-title\" className=\"tap-modal__title\" style={titleStyle}>\n                {title}\n              </h2>\n            )}\n            \n            {onClose && (\n              <button\n                type=\"button\"\n                onClick={onClose}\n                aria-label=\"Close\"\n                className=\"tap-modal__close\"\n                style={closeButtonStyle}\n                data-testid=\"tap-modal-close-button\"\n              >\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" fill=\"currentColor\" />\n                </svg>\n              </button>\n            )}\n          </div>\n        )}\n        \n        {/* Modal Content */}\n        <div className=\"tap-modal__content\" style={contentStyle}>\n          {children}\n        </div>\n        \n        {/* Modal Footer */}\n        {footer && (\n          <div className=\"tap-modal__footer\" style={footerStyle}>\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>,\n    modalElement\n  );\n});\n\n// Display name for debugging\nModal.displayName = 'Modal';\n\n// Prop types\nModal.propTypes = {\n  /** Whether the modal is open */\n  open: PropTypes.bool.isRequired,\n  \n  /** Function to call when the modal is closed */\n  onClose: PropTypes.func.isRequired,\n  \n  /** Modal content */\n  children: PropTypes.node.isRequired,\n  \n  /** Modal title */\n  title: PropTypes.string,\n  \n  /** Modal footer content */\n  footer: PropTypes.node,\n  \n  /** Whether clicking the backdrop closes the modal */\n  closeOnBackdropClick: PropTypes.bool,\n  \n  /** Whether pressing the Escape key closes the modal */\n  closeOnEscape: PropTypes.bool,\n  \n  /** Modal size */\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n  \n  /** Whether the modal should take full width */\n  fullWidth: PropTypes.bool,\n  \n  /** Additional CSS class names */\n  className: PropTypes.string,\n  \n  /** Additional CSS class names for the backdrop */\n  backdropClassName: PropTypes.string,\n};\n\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}