{"ast":null,"code":"/**\n * Table\n * \n * A standardized table component for displaying tabular data.\n * \n * @module components/common/Table\n */\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Standardized table component\n * \n * @param {Object} props - Component props\n * @param {Array} props.columns - Column definitions\n * @param {Array} props.data - Data to display\n * @param {Function} [props.onRowClick] - Callback when a row is clicked\n * @param {boolean} [props.hoverable=true] - Whether rows have hover effect\n * @param {boolean} [props.striped=false] - Whether rows are striped\n * @param {boolean} [props.bordered=false] - Whether table has borders\n * @param {string} [props.size='medium'] - Table size\n * @param {boolean} [props.loading=false] - Whether table is in loading state\n * @param {string} [props.loadingText='Loading...'] - Text to display while loading\n * @param {node} [props.emptyState] - Content to display when data is empty\n * @param {string} [props.className] - Additional CSS class names\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element} The table component\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/forwardRef(({\n  columns = [],\n  data = [],\n  onRowClick,\n  hoverable = true,\n  striped = false,\n  bordered = false,\n  size = 'medium',\n  loading = false,\n  loadingText = 'Loading...',\n  emptyState = 'No data to display',\n  className = '',\n  ...rest\n}, ref) => {\n  // Size styles\n  const sizeStyles = {\n    small: {\n      fontSize: '0.875rem',\n      padding: '0.5rem'\n    },\n    medium: {\n      fontSize: '1rem',\n      padding: '0.75rem'\n    },\n    large: {\n      fontSize: '1.125rem',\n      padding: '1rem'\n    }\n  };\n\n  // Cell padding based on size\n  const cellPadding = sizeStyles[size]?.padding || sizeStyles.medium.padding;\n\n  // Table wrapper styles\n  const wrapperStyle = {\n    position: 'relative',\n    width: '100%',\n    overflowX: 'auto',\n    borderRadius: '4px',\n    boxShadow: bordered ? 'none' : '0 2px 10px rgba(0, 0, 0, 0.08)'\n  };\n\n  // Loading overlay styles\n  const loadingOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n    fontSize: '1rem',\n    color: '#757575'\n  };\n\n  // Table styles\n  const tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0,\n    fontSize: sizeStyles[size]?.fontSize || sizeStyles.medium.fontSize\n  };\n\n  // Header cell styles\n  const headerCellStyle = {\n    padding: cellPadding,\n    textAlign: 'left',\n    fontWeight: 600,\n    color: '#212121',\n    backgroundColor: '#f5f5f5',\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    borderBottom: '1px solid #e0e0e0',\n    ...(bordered && {\n      border: '1px solid #e0e0e0'\n    })\n  };\n\n  // Body cell styles\n  const bodyCellStyle = {\n    padding: cellPadding,\n    textAlign: 'left',\n    color: '#212121',\n    borderBottom: '1px solid #e0e0e0',\n    ...(bordered && {\n      border: '1px solid #e0e0e0'\n    })\n  };\n\n  // Row styles based on variants\n  const getRowStyle = index => {\n    const baseStyle = {\n      backgroundColor: striped && index % 2 === 1 ? '#fafafa' : '#ffffff',\n      transition: hoverable ? 'background-color 0.2s' : 'none',\n      cursor: onRowClick ? 'pointer' : 'default'\n    };\n    return baseStyle;\n  };\n\n  // Row hover styles\n  const handleRowMouseEnter = e => {\n    if (hoverable) {\n      e.currentTarget.style.backgroundColor = '#f5f5f5';\n    }\n  };\n  const handleRowMouseLeave = (e, index) => {\n    if (hoverable) {\n      e.currentTarget.style.backgroundColor = striped && index % 2 === 1 ? '#fafafa' : '#ffffff';\n    }\n  };\n\n  // Handle row click\n  const handleRowClick = (row, index) => {\n    if (onRowClick) {\n      onRowClick(row, index);\n    }\n  };\n\n  // Empty state container styles\n  const emptyStateStyle = {\n    padding: '2rem',\n    textAlign: 'center',\n    color: '#757575',\n    backgroundColor: '#ffffff',\n    borderBottom: '1px solid #e0e0e0'\n  };\n\n  // Generate table content\n  const renderTableContent = () => {\n    if (loading) {\n      return /*#__PURE__*/_jsx(\"tr\", {\n        children: /*#__PURE__*/_jsx(\"td\", {\n          colSpan: columns.length,\n          style: {\n            ...bodyCellStyle,\n            textAlign: 'center',\n            padding: '2rem',\n            backgroundColor: '#ffffff',\n            borderBottom: 'none'\n          },\n          children: loadingText\n        })\n      });\n    }\n    if (data.length === 0) {\n      return /*#__PURE__*/_jsx(\"tr\", {\n        children: /*#__PURE__*/_jsx(\"td\", {\n          colSpan: columns.length,\n          style: emptyStateStyle,\n          children: emptyState\n        })\n      });\n    }\n    return data.map((row, rowIndex) => /*#__PURE__*/_jsx(\"tr\", {\n      style: getRowStyle(rowIndex),\n      onClick: () => handleRowClick(row, rowIndex),\n      onMouseEnter: handleRowMouseEnter,\n      onMouseLeave: e => handleRowMouseLeave(e, rowIndex),\n      className: `tap-table__row ${onRowClick ? 'tap-table__row--clickable' : ''}`,\n      \"data-testid\": `tap-table-row-${rowIndex}`,\n      children: columns.map((column, colIndex) => {\n        // Get cell value based on accessor\n        let cellValue;\n        if (typeof column.accessor === 'function') {\n          cellValue = column.accessor(row, rowIndex);\n        } else if (typeof column.accessor === 'string') {\n          cellValue = row[column.accessor];\n        } else {\n          cellValue = null;\n        }\n\n        // Apply cell formatter if provided\n        const displayValue = column.format ? column.format(cellValue, row) : cellValue;\n        return /*#__PURE__*/_jsx(\"td\", {\n          style: {\n            ...bodyCellStyle,\n            width: column.width,\n            maxWidth: column.maxWidth,\n            minWidth: column.minWidth,\n            textAlign: column.align || 'left'\n          },\n          className: `tap-table__cell ${column.className || ''}`,\n          \"data-testid\": `tap-table-cell-${rowIndex}-${colIndex}`,\n          children: displayValue\n        }, colIndex);\n      })\n    }, rowIndex));\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: `tap-table-wrapper ${className}`,\n    style: wrapperStyle,\n    \"data-testid\": \"tap-table-wrapper\",\n    children: [loading && /*#__PURE__*/_jsx(\"div\", {\n      style: loadingOverlayStyle,\n      className: \"tap-table__loading-overlay\",\n      children: loadingText\n    }), /*#__PURE__*/_jsxs(\"table\", {\n      ref: ref,\n      style: tableStyle,\n      className: `tap-table tap-table--${size} ${striped ? 'tap-table--striped' : ''} ${bordered ? 'tap-table--bordered' : ''} ${hoverable ? 'tap-table--hoverable' : ''}`,\n      \"data-testid\": \"tap-table\",\n      ...rest,\n      children: [/*#__PURE__*/_jsx(\"thead\", {\n        children: /*#__PURE__*/_jsx(\"tr\", {\n          children: columns.map((column, index) => /*#__PURE__*/_jsx(\"th\", {\n            style: {\n              ...headerCellStyle,\n              width: column.width,\n              maxWidth: column.maxWidth,\n              minWidth: column.minWidth,\n              textAlign: column.align || 'left'\n            },\n            className: `tap-table__header ${column.className || ''}`,\n            scope: \"col\",\n            \"data-testid\": `tap-table-header-${index}`,\n            children: column.header\n          }, index))\n        })\n      }), /*#__PURE__*/_jsx(\"tbody\", {\n        children: renderTableContent()\n      })]\n    })]\n  });\n});\n\n// Display name for debugging\nTable.displayName = 'Table';\n\n// Prop types\nTable.propTypes = {\n  /** Column definitions */\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    /** Column header text */\n    header: PropTypes.node.isRequired,\n    /** Data accessor (string key or function) */\n    accessor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    /** Optional formatter function */\n    format: PropTypes.func,\n    /** Column width (CSS value) */\n    width: PropTypes.string,\n    /** Column minimum width (CSS value) */\n    minWidth: PropTypes.string,\n    /** Column maximum width (CSS value) */\n    maxWidth: PropTypes.string,\n    /** Column text alignment */\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    /** Additional CSS class name */\n    className: PropTypes.string\n  })).isRequired,\n  /** Data to display */\n  data: PropTypes.array.isRequired,\n  /** Callback when a row is clicked */\n  onRowClick: PropTypes.func,\n  /** Whether rows have hover effect */\n  hoverable: PropTypes.bool,\n  /** Whether rows are striped */\n  striped: PropTypes.bool,\n  /** Whether table has borders */\n  bordered: PropTypes.bool,\n  /** Table size */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /** Whether table is in loading state */\n  loading: PropTypes.bool,\n  /** Text to display while loading */\n  loadingText: PropTypes.string,\n  /** Content to display when data is empty */\n  emptyState: PropTypes.node,\n  /** Additional CSS class names */\n  className: PropTypes.string\n};\nexport default Table;","map":{"version":3,"names":["React","forwardRef","PropTypes","jsx","_jsx","jsxs","_jsxs","Table","columns","data","onRowClick","hoverable","striped","bordered","size","loading","loadingText","emptyState","className","rest","ref","sizeStyles","small","fontSize","padding","medium","large","cellPadding","wrapperStyle","position","width","overflowX","borderRadius","boxShadow","loadingOverlayStyle","top","left","right","bottom","backgroundColor","display","alignItems","justifyContent","zIndex","color","tableStyle","borderCollapse","borderSpacing","headerCellStyle","textAlign","fontWeight","borderBottom","border","bodyCellStyle","getRowStyle","index","baseStyle","transition","cursor","handleRowMouseEnter","e","currentTarget","style","handleRowMouseLeave","handleRowClick","row","emptyStateStyle","renderTableContent","children","colSpan","length","map","rowIndex","onClick","onMouseEnter","onMouseLeave","column","colIndex","cellValue","accessor","displayValue","format","maxWidth","minWidth","align","scope","header","displayName","propTypes","arrayOf","shape","node","isRequired","oneOfType","string","func","oneOf","array","bool"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/project/finishline/src/components/common/Table.jsx"],"sourcesContent":["/**\n * Table\n * \n * A standardized table component for displaying tabular data.\n * \n * @module components/common/Table\n */\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Standardized table component\n * \n * @param {Object} props - Component props\n * @param {Array} props.columns - Column definitions\n * @param {Array} props.data - Data to display\n * @param {Function} [props.onRowClick] - Callback when a row is clicked\n * @param {boolean} [props.hoverable=true] - Whether rows have hover effect\n * @param {boolean} [props.striped=false] - Whether rows are striped\n * @param {boolean} [props.bordered=false] - Whether table has borders\n * @param {string} [props.size='medium'] - Table size\n * @param {boolean} [props.loading=false] - Whether table is in loading state\n * @param {string} [props.loadingText='Loading...'] - Text to display while loading\n * @param {node} [props.emptyState] - Content to display when data is empty\n * @param {string} [props.className] - Additional CSS class names\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element} The table component\n */\nconst Table = forwardRef(({\n  columns = [],\n  data = [],\n  onRowClick,\n  hoverable = true,\n  striped = false,\n  bordered = false,\n  size = 'medium',\n  loading = false,\n  loadingText = 'Loading...',\n  emptyState = 'No data to display',\n  className = '',\n  ...rest\n}, ref) => {\n  // Size styles\n  const sizeStyles = {\n    small: {\n      fontSize: '0.875rem',\n      padding: '0.5rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      padding: '0.75rem',\n    },\n    large: {\n      fontSize: '1.125rem',\n      padding: '1rem',\n    },\n  };\n  \n  // Cell padding based on size\n  const cellPadding = sizeStyles[size]?.padding || sizeStyles.medium.padding;\n  \n  // Table wrapper styles\n  const wrapperStyle = {\n    position: 'relative',\n    width: '100%',\n    overflowX: 'auto',\n    borderRadius: '4px',\n    boxShadow: bordered ? 'none' : '0 2px 10px rgba(0, 0, 0, 0.08)',\n  };\n  \n  // Loading overlay styles\n  const loadingOverlayStyle = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n    fontSize: '1rem',\n    color: '#757575',\n  };\n  \n  // Table styles\n  const tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse',\n    borderSpacing: 0,\n    fontSize: sizeStyles[size]?.fontSize || sizeStyles.medium.fontSize,\n  };\n  \n  // Header cell styles\n  const headerCellStyle = {\n    padding: cellPadding,\n    textAlign: 'left',\n    fontWeight: 600,\n    color: '#212121',\n    backgroundColor: '#f5f5f5',\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n    borderBottom: '1px solid #e0e0e0',\n    ...(bordered && { border: '1px solid #e0e0e0' }),\n  };\n  \n  // Body cell styles\n  const bodyCellStyle = {\n    padding: cellPadding,\n    textAlign: 'left',\n    color: '#212121',\n    borderBottom: '1px solid #e0e0e0',\n    ...(bordered && { border: '1px solid #e0e0e0' }),\n  };\n  \n  // Row styles based on variants\n  const getRowStyle = (index) => {\n    const baseStyle = {\n      backgroundColor: striped && index % 2 === 1 ? '#fafafa' : '#ffffff',\n      transition: hoverable ? 'background-color 0.2s' : 'none',\n      cursor: onRowClick ? 'pointer' : 'default',\n    };\n    \n    return baseStyle;\n  };\n  \n  // Row hover styles\n  const handleRowMouseEnter = (e) => {\n    if (hoverable) {\n      e.currentTarget.style.backgroundColor = '#f5f5f5';\n    }\n  };\n  \n  const handleRowMouseLeave = (e, index) => {\n    if (hoverable) {\n      e.currentTarget.style.backgroundColor = striped && index % 2 === 1 ? '#fafafa' : '#ffffff';\n    }\n  };\n  \n  // Handle row click\n  const handleRowClick = (row, index) => {\n    if (onRowClick) {\n      onRowClick(row, index);\n    }\n  };\n  \n  // Empty state container styles\n  const emptyStateStyle = {\n    padding: '2rem',\n    textAlign: 'center',\n    color: '#757575',\n    backgroundColor: '#ffffff',\n    borderBottom: '1px solid #e0e0e0',\n  };\n  \n  // Generate table content\n  const renderTableContent = () => {\n    if (loading) {\n      return (\n        <tr>\n          <td \n            colSpan={columns.length}\n            style={{\n              ...bodyCellStyle,\n              textAlign: 'center',\n              padding: '2rem',\n              backgroundColor: '#ffffff',\n              borderBottom: 'none',\n            }}\n          >\n            {loadingText}\n          </td>\n        </tr>\n      );\n    }\n    \n    if (data.length === 0) {\n      return (\n        <tr>\n          <td \n            colSpan={columns.length}\n            style={emptyStateStyle}\n          >\n            {emptyState}\n          </td>\n        </tr>\n      );\n    }\n    \n    return data.map((row, rowIndex) => (\n      <tr\n        key={rowIndex}\n        style={getRowStyle(rowIndex)}\n        onClick={() => handleRowClick(row, rowIndex)}\n        onMouseEnter={handleRowMouseEnter}\n        onMouseLeave={(e) => handleRowMouseLeave(e, rowIndex)}\n        className={`tap-table__row ${onRowClick ? 'tap-table__row--clickable' : ''}`}\n        data-testid={`tap-table-row-${rowIndex}`}\n      >\n        {columns.map((column, colIndex) => {\n          // Get cell value based on accessor\n          let cellValue;\n          if (typeof column.accessor === 'function') {\n            cellValue = column.accessor(row, rowIndex);\n          } else if (typeof column.accessor === 'string') {\n            cellValue = row[column.accessor];\n          } else {\n            cellValue = null;\n          }\n          \n          // Apply cell formatter if provided\n          const displayValue = column.format ? column.format(cellValue, row) : cellValue;\n          \n          return (\n            <td\n              key={colIndex}\n              style={{\n                ...bodyCellStyle,\n                width: column.width,\n                maxWidth: column.maxWidth,\n                minWidth: column.minWidth,\n                textAlign: column.align || 'left',\n              }}\n              className={`tap-table__cell ${column.className || ''}`}\n              data-testid={`tap-table-cell-${rowIndex}-${colIndex}`}\n            >\n              {displayValue}\n            </td>\n          );\n        })}\n      </tr>\n    ));\n  };\n  \n  return (\n    <div \n      className={`tap-table-wrapper ${className}`}\n      style={wrapperStyle}\n      data-testid=\"tap-table-wrapper\"\n    >\n      {loading && (\n        <div style={loadingOverlayStyle} className=\"tap-table__loading-overlay\">\n          {loadingText}\n        </div>\n      )}\n      \n      <table\n        ref={ref}\n        style={tableStyle}\n        className={`tap-table tap-table--${size} ${striped ? 'tap-table--striped' : ''} ${bordered ? 'tap-table--bordered' : ''} ${hoverable ? 'tap-table--hoverable' : ''}`}\n        data-testid=\"tap-table\"\n        {...rest}\n      >\n        <thead>\n          <tr>\n            {columns.map((column, index) => (\n              <th\n                key={index}\n                style={{\n                  ...headerCellStyle,\n                  width: column.width,\n                  maxWidth: column.maxWidth,\n                  minWidth: column.minWidth,\n                  textAlign: column.align || 'left',\n                }}\n                className={`tap-table__header ${column.className || ''}`}\n                scope=\"col\"\n                data-testid={`tap-table-header-${index}`}\n              >\n                {column.header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {renderTableContent()}\n        </tbody>\n      </table>\n    </div>\n  );\n});\n\n// Display name for debugging\nTable.displayName = 'Table';\n\n// Prop types\nTable.propTypes = {\n  /** Column definitions */\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      /** Column header text */\n      header: PropTypes.node.isRequired,\n      /** Data accessor (string key or function) */\n      accessor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n      /** Optional formatter function */\n      format: PropTypes.func,\n      /** Column width (CSS value) */\n      width: PropTypes.string,\n      /** Column minimum width (CSS value) */\n      minWidth: PropTypes.string,\n      /** Column maximum width (CSS value) */\n      maxWidth: PropTypes.string,\n      /** Column text alignment */\n      align: PropTypes.oneOf(['left', 'center', 'right']),\n      /** Additional CSS class name */\n      className: PropTypes.string,\n    })\n  ).isRequired,\n  \n  /** Data to display */\n  data: PropTypes.array.isRequired,\n  \n  /** Callback when a row is clicked */\n  onRowClick: PropTypes.func,\n  \n  /** Whether rows have hover effect */\n  hoverable: PropTypes.bool,\n  \n  /** Whether rows are striped */\n  striped: PropTypes.bool,\n  \n  /** Whether table has borders */\n  bordered: PropTypes.bool,\n  \n  /** Table size */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  \n  /** Whether table is in loading state */\n  loading: PropTypes.bool,\n  \n  /** Text to display while loading */\n  loadingText: PropTypes.string,\n  \n  /** Content to display when data is empty */\n  emptyState: PropTypes.node,\n  \n  /** Additional CSS class names */\n  className: PropTypes.string,\n};\n\nexport default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}