{"ast":null,"code":"/**\n * ComponentTemplate\n * \n * A standardized template for creating components with best practices.\n * Use this as a starting point for new components.\n * \n * @module components/common/ComponentTemplate\n */\n\nimport React, { forwardRef, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component description - what it does and when to use it\n * \n * @param {Object} props - Component props\n * @param {string} props.propName - Description of the prop\n * @param {Function} props.onChange - Callback when component value changes\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element} The component\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ComponentTemplate = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    // Required props\n    propName,\n    onChange,\n    // Optional props with defaults\n    variant = 'default',\n    disabled = false,\n    className = '',\n    // Rest props\n    ...rest\n  } = _ref;\n  // State\n  const [state, setState] = useState(null);\n\n  // Callbacks\n  const handleClick = useCallback(event => {\n    // Do something on click\n    if (onChange) {\n      onChange(event);\n    }\n  }, [onChange]);\n\n  // Effects\n  // useEffect(() => {\n  //   // Side effect logic\n  //   return () => {\n  //     // Cleanup logic\n  //   };\n  // }, [dependencies]);\n\n  // Render helpers\n  const getClassNames = () => {\n    return ['component-template', `component-template--${variant}`, disabled ? 'component-template--disabled' : '', className].filter(Boolean).join(' ');\n  };\n\n  // Render\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    className: getClassNames(),\n    onClick: handleClick,\n    \"data-testid\": \"component-template\",\n    ...rest,\n    children: propName\n  });\n});\n\n// Display name for debugging\nComponentTemplate.displayName = 'ComponentTemplate';\n\n// Prop types for documentation and validation\nComponentTemplate.propTypes = {\n  /** Description of the prop */\n  propName: PropTypes.string.isRequired,\n  /** Callback when component value changes */\n  onChange: PropTypes.func.isRequired,\n  /** Visual variant of the component */\n  variant: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  /** Whether the component is disabled */\n  disabled: PropTypes.bool,\n  /** Additional CSS class names */\n  className: PropTypes.string\n};\nexport default ComponentTemplate;","map":{"version":3,"names":["React","forwardRef","useState","useCallback","PropTypes","jsx","_jsx","ComponentTemplate","_ref","ref","propName","onChange","variant","disabled","className","rest","state","setState","handleClick","event","getClassNames","filter","Boolean","join","onClick","children","displayName","propTypes","string","isRequired","func","oneOf","bool"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/project/finishline/src/components/common/ComponentTemplate.jsx"],"sourcesContent":["/**\n * ComponentTemplate\n * \n * A standardized template for creating components with best practices.\n * Use this as a starting point for new components.\n * \n * @module components/common/ComponentTemplate\n */\n\nimport React, { forwardRef, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Component description - what it does and when to use it\n * \n * @param {Object} props - Component props\n * @param {string} props.propName - Description of the prop\n * @param {Function} props.onChange - Callback when component value changes\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element} The component\n */\nconst ComponentTemplate = forwardRef(({\n  // Required props\n  propName,\n  onChange,\n  \n  // Optional props with defaults\n  variant = 'default',\n  disabled = false,\n  className = '',\n  \n  // Rest props\n  ...rest\n}, ref) => {\n  // State\n  const [state, setState] = useState(null);\n  \n  // Callbacks\n  const handleClick = useCallback((event) => {\n    // Do something on click\n    if (onChange) {\n      onChange(event);\n    }\n  }, [onChange]);\n  \n  // Effects\n  // useEffect(() => {\n  //   // Side effect logic\n  //   return () => {\n  //     // Cleanup logic\n  //   };\n  // }, [dependencies]);\n  \n  // Render helpers\n  const getClassNames = () => {\n    return [\n      'component-template',\n      `component-template--${variant}`,\n      disabled ? 'component-template--disabled' : '',\n      className,\n    ].filter(Boolean).join(' ');\n  };\n  \n  // Render\n  return (\n    <div \n      ref={ref}\n      className={getClassNames()}\n      onClick={handleClick}\n      data-testid=\"component-template\"\n      {...rest}\n    >\n      {propName}\n    </div>\n  );\n});\n\n// Display name for debugging\nComponentTemplate.displayName = 'ComponentTemplate';\n\n// Prop types for documentation and validation\nComponentTemplate.propTypes = {\n  /** Description of the prop */\n  propName: PropTypes.string.isRequired,\n  \n  /** Callback when component value changes */\n  onChange: PropTypes.func.isRequired,\n  \n  /** Visual variant of the component */\n  variant: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  \n  /** Whether the component is disabled */\n  disabled: PropTypes.bool,\n  \n  /** Additional CSS class names */\n  className: PropTypes.string,\n};\n\nexport default ComponentTemplate;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAChE,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,GAAA,IAAAC,IAAA;AASA,MAAMC,iBAAiB,gBAAGN,UAAU,CAAC,CAAAO,IAAA,EAYlCC,GAAG,KAAK;EAAA,IAZ2B;IACpC;IACAC,QAAQ;IACRC,QAAQ;IAER;IACAC,OAAO,GAAG,SAAS;IACnBC,QAAQ,GAAG,KAAK;IAChBC,SAAS,GAAG,EAAE;IAEd;IACA,GAAGC;EACL,CAAC,GAAAP,IAAA;EACC;EACA,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,WAAW,GAAGf,WAAW,CAAEgB,KAAK,IAAK;IACzC;IACA,IAAIR,QAAQ,EAAE;MACZA,QAAQ,CAACQ,KAAK,CAAC;IACjB;EACF,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAO,CACL,oBAAoB,EACpB,uBAAuBR,OAAO,EAAE,EAChCC,QAAQ,GAAG,8BAA8B,GAAG,EAAE,EAC9CC,SAAS,CACV,CAACO,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAC7B,CAAC;;EAED;EACA,oBACEjB,IAAA;IACEG,GAAG,EAAEA,GAAI;IACTK,SAAS,EAAEM,aAAa,CAAC,CAAE;IAC3BI,OAAO,EAAEN,WAAY;IACrB,eAAY,oBAAoB;IAAA,GAC5BH,IAAI;IAAAU,QAAA,EAEPf;EAAQ,CACN,CAAC;AAEV,CAAC,CAAC;;AAEF;AACAH,iBAAiB,CAACmB,WAAW,GAAG,mBAAmB;;AAEnD;AACAnB,iBAAiB,CAACoB,SAAS,GAAG;EAC5B;EACAjB,QAAQ,EAAEN,SAAS,CAACwB,MAAM,CAACC,UAAU;EAErC;EACAlB,QAAQ,EAAEP,SAAS,CAAC0B,IAAI,CAACD,UAAU;EAEnC;EACAjB,OAAO,EAAER,SAAS,CAAC2B,KAAK,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;EAE7D;EACAlB,QAAQ,EAAET,SAAS,CAAC4B,IAAI;EAExB;EACAlB,SAAS,EAAEV,SAAS,CAACwB;AACvB,CAAC;AAED,eAAerB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}