{"ast":null,"code":"/**\n * Alert\n * \n * A standardized alert component for displaying messages and notifications.\n * \n * @module components/common/Alert\n */\n\nimport React, { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Standardized alert component for messages and notifications\n * \n * @param {Object} props - Component props\n * @param {string} props.message - Alert message\n * @param {string} [props.title] - Alert title\n * @param {string} [props.severity='info'] - Alert severity\n * @param {boolean} [props.closable=false] - Whether alert can be closed\n * @param {function} [props.onClose] - Callback when alert is closed\n * @param {boolean} [props.outlined=false] - Whether alert has outlined style\n * @param {boolean} [props.filled=false] - Whether alert has filled style\n * @param {node} [props.icon] - Custom icon\n * @param {string} [props.className] - Additional CSS class names\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element|null} The alert component or null if closed\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/forwardRef(({\n  message,\n  title,\n  severity = 'info',\n  closable = false,\n  onClose,\n  outlined = false,\n  filled = false,\n  icon,\n  className = '',\n  ...rest\n}, ref) => {\n  const [closed, setClosed] = useState(false);\n  if (closed) {\n    return null;\n  }\n\n  // Color mapping for different severities\n  const colorMap = {\n    info: {\n      light: '#e3f2fd',\n      main: '#2196f3',\n      dark: '#1565c0',\n      contrastText: '#000000'\n    },\n    success: {\n      light: '#e8f5e9',\n      main: '#4caf50',\n      dark: '#2e7d32',\n      contrastText: '#000000'\n    },\n    warning: {\n      light: '#fff8e1',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: '#000000'\n    },\n    error: {\n      light: '#ffebee',\n      main: '#f44336',\n      dark: '#c62828',\n      contrastText: '#ffffff'\n    }\n  };\n  const color = colorMap[severity] || colorMap.info;\n\n  // Generate default icons based on severity\n  const defaultIcon = () => {\n    const iconStyle = {\n      display: 'inline-block',\n      width: '24px',\n      height: '24px',\n      marginRight: '8px',\n      flexShrink: 0\n    };\n\n    // Simple SVG icons for each severity\n    const icons = {\n      info: /*#__PURE__*/_jsx(\"svg\", {\n        style: iconStyle,\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsx(\"path\", {\n          d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n        })\n      }),\n      success: /*#__PURE__*/_jsx(\"svg\", {\n        style: iconStyle,\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsx(\"path\", {\n          d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n        })\n      }),\n      warning: /*#__PURE__*/_jsx(\"svg\", {\n        style: iconStyle,\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsx(\"path\", {\n          d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n        })\n      }),\n      error: /*#__PURE__*/_jsx(\"svg\", {\n        style: iconStyle,\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsx(\"path\", {\n          d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n        })\n      })\n    };\n    return icons[severity] || icons.info;\n  };\n\n  // Style variants based on props\n  let backgroundColor = color.light;\n  let textColor = color.dark;\n  let borderColor = color.main;\n  if (filled) {\n    backgroundColor = color.main;\n    textColor = color.contrastText;\n    borderColor = 'transparent';\n  } else if (outlined) {\n    backgroundColor = 'transparent';\n    borderColor = color.main;\n  }\n\n  // Alert styles\n  const alertStyle = {\n    position: 'relative',\n    display: 'flex',\n    padding: '8px 16px',\n    marginBottom: '16px',\n    borderRadius: '4px',\n    fontSize: '14px',\n    backgroundColor,\n    color: textColor,\n    border: `1px solid ${borderColor}`,\n    boxSizing: 'border-box',\n    alignItems: 'center'\n  };\n\n  // Content wrapper styles\n  const contentStyle = {\n    flex: '1 1 auto'\n  };\n\n  // Title styles\n  const titleStyle = {\n    margin: '0 0 4px 0',\n    fontWeight: 'bold',\n    fontSize: '16px'\n  };\n\n  // Message styles\n  const messageStyle = {\n    margin: 0\n  };\n\n  // Close button styles\n  const closeButtonStyle = {\n    backgroundColor: 'transparent',\n    border: 'none',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4px',\n    marginLeft: '8px',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    color: 'inherit',\n    opacity: 0.7,\n    transition: 'opacity 0.2s',\n    ':hover': {\n      opacity: 1\n    }\n  };\n\n  // Handle close button click\n  const handleClose = () => {\n    setClosed(true);\n    if (onClose) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    style: alertStyle,\n    role: \"alert\",\n    className: `tap-alert tap-alert--${severity} ${outlined ? 'tap-alert--outlined' : ''} ${filled ? 'tap-alert--filled' : ''} ${className}`,\n    \"data-testid\": \"tap-alert\",\n    ...rest,\n    children: [icon || defaultIcon(), /*#__PURE__*/_jsxs(\"div\", {\n      style: contentStyle,\n      children: [title && /*#__PURE__*/_jsx(\"h4\", {\n        style: titleStyle,\n        children: title\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: messageStyle,\n        children: message\n      })]\n    }), closable && /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      onClick: handleClose,\n      style: closeButtonStyle,\n      \"aria-label\": \"Close\",\n      \"data-testid\": \"tap-alert-close-button\",\n      children: /*#__PURE__*/_jsx(\"svg\", {\n        width: \"16\",\n        height: \"16\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsx(\"path\", {\n          d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n        })\n      })\n    })]\n  });\n});\n\n// Display name for debugging\nAlert.displayName = 'Alert';\n\n// Prop types\nAlert.propTypes = {\n  /** Alert message */\n  message: PropTypes.string.isRequired,\n  /** Optional alert title */\n  title: PropTypes.string,\n  /** Alert severity */\n  severity: PropTypes.oneOf(['info', 'success', 'warning', 'error']),\n  /** Whether alert can be closed */\n  closable: PropTypes.bool,\n  /** Callback when alert is closed */\n  onClose: PropTypes.func,\n  /** Whether alert has outlined style */\n  outlined: PropTypes.bool,\n  /** Whether alert has filled style */\n  filled: PropTypes.bool,\n  /** Custom icon */\n  icon: PropTypes.node,\n  /** Additional CSS class names */\n  className: PropTypes.string\n};\nexport default Alert;","map":{"version":3,"names":["React","forwardRef","useState","PropTypes","jsx","_jsx","jsxs","_jsxs","Alert","message","title","severity","closable","onClose","outlined","filled","icon","className","rest","ref","closed","setClosed","colorMap","info","light","main","dark","contrastText","success","warning","error","color","defaultIcon","iconStyle","display","width","height","marginRight","flexShrink","icons","style","viewBox","fill","children","d","backgroundColor","textColor","borderColor","alertStyle","position","padding","marginBottom","borderRadius","fontSize","border","boxSizing","alignItems","contentStyle","flex","titleStyle","margin","fontWeight","messageStyle","closeButtonStyle","cursor","justifyContent","marginLeft","opacity","transition","handleClose","role","type","onClick","displayName","propTypes","string","isRequired","oneOf","bool","func","node"],"sources":["/home/ai-dev/Desktop/tap-integration-platform/project/finishline/src/components/common/Alert.jsx"],"sourcesContent":["/**\n * Alert\n * \n * A standardized alert component for displaying messages and notifications.\n * \n * @module components/common/Alert\n */\n\nimport React, { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Standardized alert component for messages and notifications\n * \n * @param {Object} props - Component props\n * @param {string} props.message - Alert message\n * @param {string} [props.title] - Alert title\n * @param {string} [props.severity='info'] - Alert severity\n * @param {boolean} [props.closable=false] - Whether alert can be closed\n * @param {function} [props.onClose] - Callback when alert is closed\n * @param {boolean} [props.outlined=false] - Whether alert has outlined style\n * @param {boolean} [props.filled=false] - Whether alert has filled style\n * @param {node} [props.icon] - Custom icon\n * @param {string} [props.className] - Additional CSS class names\n * @param {React.Ref} ref - Forwarded ref\n * @returns {JSX.Element|null} The alert component or null if closed\n */\nconst Alert = forwardRef(({\n  message,\n  title,\n  severity = 'info',\n  closable = false,\n  onClose,\n  outlined = false,\n  filled = false,\n  icon,\n  className = '',\n  ...rest\n}, ref) => {\n  const [closed, setClosed] = useState(false);\n\n  if (closed) {\n    return null;\n  }\n\n  // Color mapping for different severities\n  const colorMap = {\n    info: {\n      light: '#e3f2fd',\n      main: '#2196f3',\n      dark: '#1565c0',\n      contrastText: '#000000',\n    },\n    success: {\n      light: '#e8f5e9',\n      main: '#4caf50',\n      dark: '#2e7d32',\n      contrastText: '#000000',\n    },\n    warning: {\n      light: '#fff8e1',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: '#000000',\n    },\n    error: {\n      light: '#ffebee',\n      main: '#f44336',\n      dark: '#c62828',\n      contrastText: '#ffffff',\n    },\n  };\n\n  const color = colorMap[severity] || colorMap.info;\n\n  // Generate default icons based on severity\n  const defaultIcon = () => {\n    const iconStyle = {\n      display: 'inline-block',\n      width: '24px',\n      height: '24px',\n      marginRight: '8px',\n      flexShrink: 0,\n    };\n\n    // Simple SVG icons for each severity\n    const icons = {\n      info: (\n        <svg style={iconStyle} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n        </svg>\n      ),\n      success: (\n        <svg style={iconStyle} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n        </svg>\n      ),\n      warning: (\n        <svg style={iconStyle} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\" />\n        </svg>\n      ),\n      error: (\n        <svg style={iconStyle} viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\" />\n        </svg>\n      ),\n    };\n\n    return icons[severity] || icons.info;\n  };\n\n  // Style variants based on props\n  let backgroundColor = color.light;\n  let textColor = color.dark;\n  let borderColor = color.main;\n\n  if (filled) {\n    backgroundColor = color.main;\n    textColor = color.contrastText;\n    borderColor = 'transparent';\n  } else if (outlined) {\n    backgroundColor = 'transparent';\n    borderColor = color.main;\n  }\n\n  // Alert styles\n  const alertStyle = {\n    position: 'relative',\n    display: 'flex',\n    padding: '8px 16px',\n    marginBottom: '16px',\n    borderRadius: '4px',\n    fontSize: '14px',\n    backgroundColor,\n    color: textColor,\n    border: `1px solid ${borderColor}`,\n    boxSizing: 'border-box',\n    alignItems: 'center',\n  };\n\n  // Content wrapper styles\n  const contentStyle = {\n    flex: '1 1 auto',\n  };\n\n  // Title styles\n  const titleStyle = {\n    margin: '0 0 4px 0',\n    fontWeight: 'bold',\n    fontSize: '16px',\n  };\n\n  // Message styles\n  const messageStyle = {\n    margin: 0,\n  };\n\n  // Close button styles\n  const closeButtonStyle = {\n    backgroundColor: 'transparent',\n    border: 'none',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4px',\n    marginLeft: '8px',\n    borderRadius: '50%',\n    width: '24px',\n    height: '24px',\n    color: 'inherit',\n    opacity: 0.7,\n    transition: 'opacity 0.2s',\n    ':hover': {\n      opacity: 1,\n    },\n  };\n\n  // Handle close button click\n  const handleClose = () => {\n    setClosed(true);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={alertStyle}\n      role=\"alert\"\n      className={`tap-alert tap-alert--${severity} ${outlined ? 'tap-alert--outlined' : ''} ${filled ? 'tap-alert--filled' : ''} ${className}`}\n      data-testid=\"tap-alert\"\n      {...rest}\n    >\n      {icon || defaultIcon()}\n      \n      <div style={contentStyle}>\n        {title && <h4 style={titleStyle}>{title}</h4>}\n        <p style={messageStyle}>{message}</p>\n      </div>\n      \n      {closable && (\n        <button\n          type=\"button\"\n          onClick={handleClose}\n          style={closeButtonStyle}\n          aria-label=\"Close\"\n          data-testid=\"tap-alert-close-button\"\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n          </svg>\n        </button>\n      )}\n    </div>\n  );\n});\n\n// Display name for debugging\nAlert.displayName = 'Alert';\n\n// Prop types\nAlert.propTypes = {\n  /** Alert message */\n  message: PropTypes.string.isRequired,\n  \n  /** Optional alert title */\n  title: PropTypes.string,\n  \n  /** Alert severity */\n  severity: PropTypes.oneOf(['info', 'success', 'warning', 'error']),\n  \n  /** Whether alert can be closed */\n  closable: PropTypes.bool,\n  \n  /** Callback when alert is closed */\n  onClose: PropTypes.func,\n  \n  /** Whether alert has outlined style */\n  outlined: PropTypes.bool,\n  \n  /** Whether alert has filled style */\n  filled: PropTypes.bool,\n  \n  /** Custom icon */\n  icon: PropTypes.node,\n  \n  /** Additional CSS class names */\n  className: PropTypes.string,\n};\n\nexport default Alert;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}