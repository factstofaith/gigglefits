{
  "timestamp": "2025-03-31_08-45-50",
  "inventory": {
    "totalFiles": 353,
    "byExtension": {
      ".jsx": 123,
      ".js": 96,
      ".py": 134
    },
    "byDirectory": {
      ".": 4,
      "components/auth": 2,
      "components/codeQuality": 5,
      "components/common/__tests__": 12,
      "components/common": 26,
      "components/integration": 1,
      "components/integration/panels": 4,
      "components/layout": 4,
      "components/performance": 11,
      "contexts/__tests__": 5,
      "contexts": 7,
      "hooks/__tests__": 4,
      "hooks": 11,
      "pages": 2,
      "services/__tests__": 1,
      "services": 2,
      "stories/codeQuality": 5,
      "stories/components": 14,
      "stories/utils": 13,
      "tests/codeQuality": 9,
      "tests/components/common": 21,
      "tests/components/integration": 2,
      "tests/components/performance": 4,
      "tests/e2e": 1,
      "tests/templates": 3,
      "tests/utils": 13,
      "utils": 25,
      "utils/codeQuality": 5,
      "utils/monitoring": 3,
      "adapters/connectors": 8,
      "adapters/tests": 8,
      "api/performance": 14,
      "db/migrations": 8,
      "db/models": 8,
      "db/optimizations": 13,
      "db/schemas": 8,
      "db/tests": 8,
      "modules/controllers": 8,
      "modules/schemas": 8,
      "modules/services": 8,
      "modules/tests": 8,
      "test/api/performance": 14,
      "test/db/optimizations": 13
    },
    "largeFiles": [
      {
        "path": "api/performance/ratelimiter.py",
        "lines": 1133,
        "size": "38 KB"
      }
    ],
    "emptyFiles": [],
    "oldFiles": []
  },
  "unusedFiles": {
    "jsFiles": [
      "AppRoutes.jsx",
      "components/auth/RequireAdmin.jsx",
      "components/auth/RequireAuth.jsx",
      "components/codeQuality/CodeConsistencyMonitor.jsx",
      "components/codeQuality/CodeQualityDashboard.jsx",
      "components/codeQuality/DeprecationManager.jsx",
      "components/codeQuality/DevelopmentGuide.jsx",
      "components/codeQuality/ErrorPrevention.jsx",
      "components/common/A11yAlert.jsx",
      "components/common/A11yButton.jsx",
      "components/common/A11yCheckbox.jsx",
      "components/common/A11yDialog.jsx",
      "components/common/A11yForm.jsx",
      "components/common/A11yMenu.jsx",
      "components/common/A11yModal.jsx",
      "components/common/A11yRadio.jsx",
      "components/common/A11ySelect.jsx",
      "components/common/A11yTable.jsx",
      "components/common/A11yTabs.jsx",
      "components/common/A11yTooltip.jsx",
      "components/common/ErrorBoundary.jsx",
      "components/integration/IntegrationDetailView.jsx",
      "components/integration/panels/IntegrationActionPanel.jsx",
      "components/integration/panels/IntegrationConfigPanel.jsx",
      "components/integration/panels/IntegrationHistoryPanel.jsx",
      "components/integration/panels/IntegrationStatusPanel.jsx",
      "components/layout/Footer.jsx",
      "components/layout/MainLayout.jsx",
      "components/layout/Sidebar.jsx",
      "components/layout/TopBar.jsx",
      "components/performance/AccessibilityMonitor.jsx",
      "components/performance/ErrorTrackingSystem.jsx",
      "components/performance/LazyLoadedImage.jsx",
      "components/performance/OptimizedDataGrid.jsx",
      "components/performance/PerformanceBudgetMonitor.jsx",
      "components/performance/PerformanceDashboard.jsx",
      "components/performance/PerformanceMetricsDisplay.jsx",
      "components/performance/PerformanceMonitor.jsx",
      "components/performance/PerformanceTest.perf.jsx",
      "components/performance/RuntimePerformanceMonitor.jsx",
      "components/performance/VirtualizedList.jsx",
      "contexts/DatabaseMonitoringContext.js",
      "hooks/useDatabasePerformance.js",
      "hooks/useLazyComponent.js",
      "hooks/useNotification.js",
      "hooks/useOfflineStatus.js",
      "hooks/usePerformanceTracking.js",
      "hooks/useWebWorker.js",
      "pages/ErrorBoundaryPage.jsx",
      "pages/NotFoundPage.jsx",
      "setupTests.js",
      "stories/codeQuality/CodeConsistencyMonitor.stories.jsx",
      "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "stories/codeQuality/DeprecationManager.stories.jsx",
      "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "stories/codeQuality/ErrorPrevention.stories.jsx",
      "stories/components/A11yAlert.stories.jsx",
      "stories/components/A11yCheckbox.stories.jsx",
      "stories/components/A11yForm.stories.jsx",
      "stories/components/A11yMenu.stories.jsx",
      "stories/components/A11yModal.stories.jsx",
      "stories/components/A11yRadio.stories.jsx",
      "stories/components/A11ySelect.stories.jsx",
      "stories/components/A11yTable.stories.jsx",
      "stories/components/A11yTabs.stories.jsx",
      "stories/components/A11yTooltip.stories.jsx",
      "stories/components/AccessibilityMonitor.stories.jsx",
      "stories/components/ErrorTrackingSystem.stories.jsx",
      "stories/components/PerformanceBudgetMonitor.stories.jsx",
      "stories/components/RuntimePerformanceMonitor.stories.jsx",
      "stories/utils/bundleSizeOptimizer.stories.jsx",
      "stories/utils/ComponentAnalytics.stories.jsx",
      "stories/utils/criticalPathOptimizer.stories.jsx",
      "stories/utils/differentialLoader.stories.jsx",
      "stories/utils/dynamicImportSplitter.stories.jsx",
      "stories/utils/ModuleFederationConfig.stories.jsx",
      "stories/utils/offlineSupport.stories.jsx",
      "stories/utils/parallelBuildProcessor.stories.jsx",
      "stories/utils/productionOptimizer.stories.jsx",
      "stories/utils/ssrAdapter.stories.jsx",
      "stories/utils/StaticSiteGenerator.stories.jsx",
      "stories/utils/treeShakerEnhancer.stories.jsx",
      "stories/utils/webWorkerManager.stories.jsx",
      "tests/components/common/A11yAlert.visual.js",
      "tests/components/common/A11yCheckbox.visual.js",
      "tests/components/common/A11yForm.visual.js",
      "tests/components/common/A11yMenu.visual.js",
      "tests/components/common/A11yModal.visual.js",
      "tests/components/common/A11yRadio.visual.js",
      "tests/components/common/A11ySelect.visual.js",
      "tests/components/common/A11yTable.visual.js",
      "tests/components/common/A11yTabs.visual.js",
      "tests/components/common/A11yTooltip.visual.js",
      "tests/components/integration/IntegrationDetailView.visual.js",
      "tests/e2e/IntegrationWorkflow.e2e.js",
      "tests/templates/ComponentTestTemplate.jsx",
      "tests/templates/E2ETestTemplate.js",
      "tests/templates/VisualRegressionTestTemplate.js",
      "utils/a11yUtils.js",
      "utils/accessibilityTesting.js",
      "utils/bundleAnalyzer.js",
      "utils/bundleSizeOptimizer.js",
      "utils/codeQuality/codeOptimizer.js",
      "utils/codeQuality/consistencyEnforcer.js",
      "utils/codeQuality/standardFormatter.js",
      "utils/codeQuality/staticAnalyzer.js",
      "utils/codeQuality/typeValidator.js",
      "utils/codeSplitting.js",
      "utils/ComponentAnalytics.js",
      "utils/criticalPathOptimizer.js",
      "utils/differentialLoader.js",
      "utils/dynamicImportSplitter.js",
      "utils/e2eTesting.js",
      "utils/ModuleFederationConfig.js",
      "utils/monitoring/errorTracking.js",
      "utils/monitoring/performanceMonitoring.js",
      "utils/monitoring/usageAnalytics.js",
      "utils/offlineSupport.js",
      "utils/parallelBuildProcessor.js",
      "utils/productionOptimizer.js",
      "utils/ssrAdapter.js",
      "utils/StaticSiteGenerator.js",
      "utils/testingFramework.js",
      "utils/testUtils.js",
      "utils/themeUtils.js",
      "utils/treeShakerEnhancer.js",
      "utils/validation.js",
      "utils/visualRegressionTesting.js",
      "utils/webWorkerManager.js"
    ],
    "tsFiles": [],
    "pyFiles": [
      "adapters/connectors/apiconnector.py",
      "adapters/connectors/azureblobconnector.py",
      "adapters/connectors/baseconnector.py",
      "adapters/connectors/dataquality.py",
      "adapters/connectors/etlpipeline.py",
      "adapters/connectors/s3connector.py",
      "adapters/connectors/sharepointconnector.py",
      "adapters/connectors/transformationengine.py",
      "api/performance/apianalyticsdashboard.py",
      "api/performance/apirequestlogger.py",
      "api/performance/asyncrequesthandler.py",
      "api/performance/backgroundtaskprocessor.py",
      "api/performance/batchrequestprocessor.py",
      "api/performance/bottleneckdetector.py",
      "api/performance/cachemanager.py",
      "api/performance/endpointmetricscollector.py",
      "api/performance/partialresponsehandler.py",
      "api/performance/performancemonitor.py",
      "api/performance/queryoptimizationmiddleware.py",
      "api/performance/ratelimiter.py",
      "api/performance/responsecompression.py",
      "api/performance/streamingresponsehandler.py",
      "db/migrations/1743404316_basemodel.py",
      "db/migrations/1743404316_datasetmodel.py",
      "db/migrations/1743404316_entityrelationshipdiagram.py",
      "db/migrations/1743404316_integrationmodel.py",
      "db/migrations/1743404316_migrationframework.py",
      "db/migrations/1743404316_schemavalidator.py",
      "db/migrations/1743404316_tenantmodel.py",
      "db/migrations/1743404316_usermodel.py",
      "db/models/basemodel.py",
      "db/models/datasetmodel.py",
      "db/models/entityrelationshipdiagram.py",
      "db/models/integrationmodel.py",
      "db/models/migrationframework.py",
      "db/models/schemavalidator.py",
      "db/models/tenantmodel.py",
      "db/models/usermodel.py",
      "db/optimizations/alembicmigrationmanager.py",
      "db/optimizations/bulkoperationhandler.py",
      "db/optimizations/connectionpoolmanager.py",
      "db/optimizations/databasehealthmonitor.py",
      "db/optimizations/datavalidation.py",
      "db/optimizations/indexmanager.py",
      "db/optimizations/jsonfieldoptimizer.py",
      "db/optimizations/migrationdependencymanager.py",
      "db/optimizations/migrationframework.py",
      "db/optimizations/migrationrollbackmanager.py",
      "db/optimizations/migrationverification.py",
      "db/optimizations/queryoptimizer.py",
      "db/optimizations/transactionmanager.py",
      "db/schemas/basemodel.py",
      "db/schemas/datasetmodel.py",
      "db/schemas/entityrelationshipdiagram.py",
      "db/schemas/integrationmodel.py",
      "db/schemas/migrationframework.py",
      "db/schemas/schemavalidator.py",
      "db/schemas/tenantmodel.py",
      "db/schemas/usermodel.py",
      "modules/controllers/apiversioning_controller.py",
      "modules/controllers/baseservice_controller.py",
      "modules/controllers/datasetservice_controller.py",
      "modules/controllers/errorhandler_controller.py",
      "modules/controllers/integrationservice_controller.py",
      "modules/controllers/tenantservice_controller.py",
      "modules/controllers/transactionmanager_controller.py",
      "modules/controllers/userservice_controller.py",
      "modules/schemas/apiversioning.py",
      "modules/schemas/baseservice.py",
      "modules/schemas/datasetservice.py",
      "modules/schemas/errorhandler.py",
      "modules/schemas/integrationservice.py",
      "modules/schemas/tenantservice.py",
      "modules/schemas/transactionmanager.py",
      "modules/schemas/userservice.py",
      "modules/services/apiversioning_service.py",
      "modules/services/baseservice_service.py",
      "modules/services/datasetservice_service.py",
      "modules/services/errorhandler_service.py",
      "modules/services/integrationservice_service.py",
      "modules/services/tenantservice_service.py",
      "modules/services/transactionmanager_service.py",
      "modules/services/userservice_service.py"
    ]
  },
  "duplicateCode": [
    {
      "file1": "App.jsx",
      "file2": "utils/codeSplitting.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stat..."
    },
    {
      "file1": "App.jsx",
      "file2": "utils/codeSplitting.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }..."
    },
    {
      "file1": "components/auth/RequireAdmin.jsx",
      "file2": "components/auth/RequireAuth.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "// Show loading indicator while checking auth state\n  if (isLoading) {\n    return (\n      <div class..."
    },
    {
      "file1": "components/auth/RequireAdmin.jsx",
      "file2": "components/auth/RequireAuth.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "<div className=\"loading-spinner\"></div>\n        <p>Authenticating...</p>\n      </div>\n    );\n  }..."
    },
    {
      "file1": "components/codeQuality/CodeConsistencyMonitor.jsx",
      "file2": "components/codeQuality/CodeQualityDashboard.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "components/codeQuality/CodeConsistencyMonitor.jsx",
      "file2": "components/codeQuality/CodeQualityDashboard.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'rea..."
    },
    {
      "file1": "components/codeQuality/CodeConsistencyMonitor.jsx",
      "file2": "components/codeQuality/CodeQualityDashboard.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "});\n\n  useEffect(() => {\n    // Initialize component\n    setState(prev => ({ ...prev, initialized: t..."
    },
    {
      "file1": "components/codeQuality/CodeConsistencyMonitor.jsx",
      "file2": "components/codeQuality/CodeQualityDashboard.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "}, []);\n\n  // Memoized component logic\n  const handleAction = useCallback(() => {\n    // Action hand..."
    },
    {
      "file1": "components/codeQuality/CodeQualityDashboard.jsx",
      "file2": "components/codeQuality/DeprecationManager.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "components/codeQuality/CodeQualityDashboard.jsx",
      "file2": "components/codeQuality/DeprecationManager.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'rea..."
    },
    {
      "file1": "components/codeQuality/CodeQualityDashboard.jsx",
      "file2": "components/codeQuality/DeprecationManager.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "});\n\n  useEffect(() => {\n    // Initialize component\n    setState(prev => ({ ...prev, initialized: t..."
    },
    {
      "file1": "components/codeQuality/CodeQualityDashboard.jsx",
      "file2": "components/codeQuality/DeprecationManager.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "}, []);\n\n  // Memoized component logic\n  const handleAction = useCallback(() => {\n    // Action hand..."
    },
    {
      "file1": "components/codeQuality/DeprecationManager.jsx",
      "file2": "components/codeQuality/DevelopmentGuide.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "components/codeQuality/DeprecationManager.jsx",
      "file2": "components/codeQuality/DevelopmentGuide.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'rea..."
    },
    {
      "file1": "components/codeQuality/DeprecationManager.jsx",
      "file2": "components/codeQuality/DevelopmentGuide.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "});\n\n  useEffect(() => {\n    // Initialize component\n    setState(prev => ({ ...prev, initialized: t..."
    },
    {
      "file1": "components/codeQuality/DeprecationManager.jsx",
      "file2": "components/codeQuality/DevelopmentGuide.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "}, []);\n\n  // Memoized component logic\n  const handleAction = useCallback(() => {\n    // Action hand..."
    },
    {
      "file1": "components/codeQuality/DevelopmentGuide.jsx",
      "file2": "components/codeQuality/ErrorPrevention.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "components/codeQuality/DevelopmentGuide.jsx",
      "file2": "components/codeQuality/ErrorPrevention.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport React, { useState, useEffect, useCallback, useMemo } from 'rea..."
    },
    {
      "file1": "components/codeQuality/DevelopmentGuide.jsx",
      "file2": "components/codeQuality/ErrorPrevention.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "});\n\n  useEffect(() => {\n    // Initialize component\n    setState(prev => ({ ...prev, initialized: t..."
    },
    {
      "file1": "components/codeQuality/DevelopmentGuide.jsx",
      "file2": "components/codeQuality/ErrorPrevention.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "}, []);\n\n  // Memoized component logic\n  const handleAction = useCallback(() => {\n    // Action hand..."
    },
    {
      "file1": "components/common/__tests__/Checkbox.test.jsx",
      "file2": "components/common/__tests__/Select.test.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "// Controlled vs Uncontrolled tests\n  describe('controlled and uncontrolled behavior', () => {\n    i..."
    },
    {
      "file1": "components/common/__tests__/Checkbox.test.jsx",
      "file2": "components/common/__tests__/Modal.test.jsx",
      "lineNumber": 166,
      "length": 5,
      "preview": "});\n  });\n\n  // Ref forwarding\n  describe('refs', () => {..."
    },
    {
      "file1": "components/common/__tests__/Modal.test.jsx",
      "file2": "components/common/__tests__/Tooltip.test.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "// Mock createPortal to make it work with testing-library\njest.mock('react-dom', () => {\n  const ori..."
    },
    {
      "file1": "components/common/__tests__/Modal.test.jsx",
      "file2": "components/common/__tests__/Tooltip.test.jsx",
      "lineNumber": 16,
      "length": 5,
      "preview": "...original,\n    createPortal: (node) => node,\n  };\n});..."
    },
    {
      "file1": "components/common/__tests__/Modal.test.jsx",
      "file2": "components/common/__tests__/Select.test.jsx",
      "lineNumber": 116,
      "length": 5,
      "preview": "});\n  });\n\n  // Event handler tests\n  describe('event handlers', () => {..."
    },
    {
      "file1": "components/common/__tests__/Modal.test.jsx",
      "file2": "components/common/__tests__/Select.test.jsx",
      "lineNumber": 191,
      "length": 5,
      "preview": "});\n  });\n\n  // Accessibility tests\n  describe('accessibility', () => {..."
    },
    {
      "file1": "components/common/__tests__/Select.test.jsx",
      "file2": "components/common/__tests__/Tabs.test.jsx",
      "lineNumber": 126,
      "length": 5,
      "preview": "});\n\n    it('works as an uncontrolled component', () => {\n      const handleChange = jest.fn();\n    ..."
    },
    {
      "file1": "components/common/__tests__/Select.test.jsx",
      "file2": "components/common/__tests__/TextField.test.jsx",
      "lineNumber": 191,
      "length": 5,
      "preview": "});\n\n    it('does not call onChange when disabled', () => {\n      const handleChange = jest.fn();\n  ..."
    },
    {
      "file1": "components/common/__tests__/Select.test.jsx",
      "file2": "components/common/__tests__/Tabs.test.jsx",
      "lineNumber": 221,
      "length": 5,
      "preview": "});\n  });\n\n  // Accessibility tests\n  describe('accessibility', () => {..."
    },
    {
      "file1": "components/common/__tests__/Select.test.jsx",
      "file2": "components/common/__tests__/Table.test.jsx",
      "lineNumber": 276,
      "length": 5,
      "preview": "});\n  });\n\n  // Ref forwarding\n  describe('refs', () => {..."
    },
    {
      "file1": "components/common/__tests__/Tabs.test.jsx",
      "file2": "components/common/__tests__/TextField.test.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "// Controlled vs Uncontrolled tests\n  describe('controlled and uncontrolled behavior', () => {\n    i..."
    },
    {
      "file1": "components/common/__tests__/Tabs.test.jsx",
      "file2": "components/common/__tests__/Tooltip.test.jsx",
      "lineNumber": 201,
      "length": 5,
      "preview": "});\n\n  // Accessibility tests\n  describe('accessibility', () => {\n    it('has correct ARIA attribute..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yAlert.jsx",
      "file2": "components/common/A11yCheckbox.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yForm.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yForm.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yForm.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yCheckbox.jsx",
      "file2": "components/common/A11yForm.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 236,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 246,
      "length": 5,
      "preview": "ariaDescribedBy,\n    dataTestId,\n    ...other\n  } = props;..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "hooks/useForm.js",
      "lineNumber": 251,
      "length": 5,
      "preview": "// Form state\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = u..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "hooks/useForm.js",
      "lineNumber": 386,
      "length": 5,
      "preview": "} catch (error) {\n        console.error('Form submission error:', error);\n      } finally {\n        ..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 441,
      "length": 5,
      "preview": "/** Additional CSS class */\n  className: PropTypes.string,\n  /** Additional inline styles */\n  style..."
    },
    {
      "file1": "components/common/A11yForm.jsx",
      "file2": "components/common/A11yMenu.jsx",
      "lineNumber": 456,
      "length": 5,
      "preview": "ariaLabelledBy: PropTypes.string,\n  /** ID of element that describes this component */\n  ariaDescrib..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yMenu.jsx",
      "file2": "components/common/A11yModal.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yModal.jsx",
      "file2": "components/common/A11yRadio.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yRadio.jsx",
      "file2": "components/common/A11ySelect.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTable.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTable.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTable.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11ySelect.jsx",
      "file2": "components/common/A11yTable.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/A11yTable.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yTable.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 16,
      "length": 5,
      "preview": "*/\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'p..."
    },
    {
      "file1": "components/common/A11yTable.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 196,
      "length": 5,
      "preview": "children,\n    className,\n    style,\n    id,\n    ariaLabel,..."
    },
    {
      "file1": "components/common/A11yTable.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 391,
      "length": 5,
      "preview": "/** Additional CSS class */\n  className: PropTypes.string,\n  /** Additional inline styles */\n  style..."
    },
    {
      "file1": "components/common/A11yTable.jsx",
      "file2": "components/common/A11yTabs.jsx",
      "lineNumber": 396,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** ARIA label */\n  ariaLabel: PropTypes.string,\n  /** ID of element that la..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Fully accessible with ARIA attributes\n * - Keyboard navigation support\n * - Screen ..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Focus management\n */\n\nimport React, { forwardRef, useRef, useState, useEffect } from 'react';\nim..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "const {\n    children,\n    className,\n    style,\n    id,..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    dataTestId,\n    ...other..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "} = props;\n\n  // Using internal ref if none provided\n  const componentRef = useRef(null);\n  const re..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "return (\n    <div\n      ref={resolvedRef}\n      className={className}..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "style={style}\n      id={id}\n      aria-label={ariaLabel}\n      aria-labelledby={ariaLabelledBy}\n    ..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "data-testid={dataTestId}\n      {...other}\n    >\n      {children}\n    </div>..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "/** Additional inline styles */\n  style: PropTypes.object,\n  /** Element ID */\n  id: PropTypes.strin..."
    },
    {
      "file1": "components/common/A11yTabs.jsx",
      "file2": "components/common/A11yTooltip.jsx",
      "lineNumber": 66,
      "length": 5,
      "preview": "ariaLabel: PropTypes.string,\n  /** ID of element that labels this component */\n  ariaLabelledBy: Pro..."
    },
    {
      "file1": "components/common/Badge.jsx",
      "file2": "components/common/Tooltip.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "};\n  \n  // Size styles\n  const sizeMap = {\n    small: {..."
    },
    {
      "file1": "components/common/Button.jsx",
      "file2": "components/common/Card.jsx",
      "lineNumber": 231,
      "length": 5,
      "preview": "/** Additional CSS class names */\n  className: PropTypes.string,\n};..."
    },
    {
      "file1": "components/common/Checkbox.jsx",
      "file2": "components/common/Select.jsx",
      "lineNumber": 236,
      "length": 5,
      "preview": ">\n          {error || helperText}\n        </div>\n      )}\n    </div>..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "helperText,\n  error,\n  required = false,\n  disabled = false,\n  readOnly = false,..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "variant = 'outlined',\n  size = 'medium',\n  onChange,\n  onFocus,\n  onBlur,..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "fullWidth = false,\n  className = '',\n  ...rest\n}, ref) => {\n  // Use controlled or uncontrolled base..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "const isControlled = value !== undefined;\n  const [internalValue, setInternalValue] = useState(defau..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "// Variant styles\n  const getVariantStyles = () => {\n    const styles = {\n      outlined: {\n        ..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 86,
      "length": 5,
      "preview": "borderRadius: '4px',\n        backgroundColor: disabled ? '#f5f5f5' : '#ffffff',\n      },\n      fille..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "borderBottom: `1px solid ${error ? '#f44336' : isFocused ? '#1976d2' : '#c4c4c4'}`,\n        borderRa..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "border: 'none',\n        borderBottom: `1px solid ${error ? '#f44336' : isFocused ? '#1976d2' : '#c4c..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 101,
      "length": 5,
      "preview": "};\n    \n    return styles[variant] || styles.outlined;\n  };..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 106,
      "length": 5,
      "preview": "// Base container styles\n  const containerStyle = {\n    display: 'inline-flex',\n    flexDirection: '..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 111,
      "length": 5,
      "preview": "marginBottom: '16px',\n    width: fullWidth ? '100%' : 'auto',\n  };\n  \n  // Label styles..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 116,
      "length": 5,
      "preview": "const labelStyle = {\n    marginBottom: '6px',\n    fontSize: '14px',\n    color: error ? '#f44336' : d..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 121,
      "length": 5,
      "preview": "};\n  \n  // Helper text styles\n  const helperTextStyle = {\n    marginTop: '6px',..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 126,
      "length": 5,
      "preview": "fontSize: '12px',\n    color: error ? '#f44336' : '#757575',\n    minHeight: '18px',\n  };..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 156,
      "length": 5,
      "preview": "};\n  \n  // Handle changes\n  const handleChange = (e) => {\n    if (readOnly || disabled) return;..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 161,
      "length": 5,
      "preview": "if (!isControlled) {\n      setInternalValue(e.target.value);\n    }..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 171,
      "length": 5,
      "preview": "// Handle focus\n  const handleFocus = (e) => {\n    setIsFocused(true);\n    if (onFocus) {\n      onFo..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 176,
      "length": 5,
      "preview": "}\n  };\n  \n  // Handle blur\n  const handleBlur = (e) => {..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 181,
      "length": 5,
      "preview": "setIsFocused(false);\n    if (onBlur) {\n      onBlur(e);\n    }\n  };..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 316,
      "length": 5,
      "preview": "size: PropTypes.oneOf(['small', 'medium', 'large']),\n  \n  /** Change handler */\n  onChange: PropType..."
    },
    {
      "file1": "components/common/Select.jsx",
      "file2": "components/common/TextField.jsx",
      "lineNumber": 321,
      "length": 5,
      "preview": "/** Focus handler */\n  onFocus: PropTypes.func,\n  \n  /** Blur handler */\n  onBlur: PropTypes.func,..."
    },
    {
      "file1": "components/integration/panels/IntegrationActionPanel.jsx",
      "file2": "components/integration/panels/IntegrationConfigPanel.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// Memoize styles\n  const styles = useMemo(() => ({\n    container: {\n      padding: '20px',\n    },..."
    },
    {
      "file1": "components/integration/panels/IntegrationActionPanel.jsx",
      "file2": "components/integration/panels/IntegrationConfigPanel.jsx",
      "lineNumber": 131,
      "length": 5,
      "preview": "},\n  }), [theme]);\n\n  return (\n    <div style={styles.container}>..."
    },
    {
      "file1": "components/integration/panels/IntegrationConfigPanel.jsx",
      "file2": "components/integration/panels/IntegrationHistoryPanel.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Memoize styles\n  const styles = useMemo(() => ({\n    container: {\n      padding: '20px',\n    },..."
    },
    {
      "file1": "components/integration/panels/IntegrationConfigPanel.jsx",
      "file2": "components/integration/panels/IntegrationHistoryPanel.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "sectionTitle: {\n      fontSize: '18px',\n      fontWeight: 600,\n      marginBottom: '16px',\n      col..."
    },
    {
      "file1": "components/integration/panels/IntegrationConfigPanel.jsx",
      "file2": "components/integration/panels/IntegrationHistoryPanel.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "},\n    tableHeader: {\n      textAlign: 'left',\n      padding: '8px 16px',\n      borderBottom: `1px s..."
    },
    {
      "file1": "components/integration/panels/IntegrationConfigPanel.jsx",
      "file2": "components/layout/Sidebar.jsx",
      "lineNumber": 86,
      "length": 5,
      "preview": "color: theme.palette.text.secondary,\n    },\n  }), [theme]);\n\n  return (..."
    },
    {
      "file1": "components/integration/panels/IntegrationHistoryPanel.jsx",
      "file2": "components/integration/panels/IntegrationStatusPanel.jsx",
      "lineNumber": 106,
      "length": 5,
      "preview": "// Memoize styles\n  const styles = useMemo(() => ({\n    container: {\n      padding: '20px',\n    },..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/AccessibilityMonitor.jsx",
      "file2": "components/performance/ErrorTrackingSystem.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/ErrorTrackingSystem.jsx",
      "file2": "components/performance/LazyLoadedImage.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/LazyLoadedImage.jsx",
      "file2": "components/performance/OptimizedDataGrid.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/OptimizedDataGrid.jsx",
      "file2": "components/performance/PerformanceBudgetMonitor.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/PerformanceBudgetMonitor.jsx",
      "file2": "components/performance/PerformanceMetricsDisplay.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/PerformanceMetricsDisplay.jsx",
      "file2": "components/performance/RuntimePerformanceMonitor.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Performance optimized rendering\n * - Memoized sub-components\n * - Virtualized rende..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - SSR compatible\n */\n\nimport React, { memo, useState, useEffect, useRef, Suspense } from 'react';\n..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const [isReady, setIsReady] = useState(false);\n  \n  // Track render count for performance analysis\n ..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "trackRender({\n      renderCount: renderCount.current,\n      timestamp: Date.now()\n    });\n  });..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Component initialization\n  useEffect(() => {\n    // Initialization logic\n    setIsReady(true);..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "}, []);\n  \n  // Interaction handlers with performance tracking\n  const handleInteraction = () => {\n ..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "type: 'user-interaction',\n      timestamp: Date.now()\n    });\n    // Handle interaction logic\n  };..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 61,
      "length": 5,
      "preview": "// Optimize rendering based on ready state\n  if (!isReady) {\n    return (\n      <div className=\"load..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "id={id}\n          data-testid={dataTestId}\n          onClick={handleInteraction}\n          {...other..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "{children}\n        </div>\n      </Suspense>\n    </ErrorBoundary>\n  );..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "/** Child elements */\n  children: PropTypes.node,\n  /** Additional CSS class */\n  className: PropTyp..."
    },
    {
      "file1": "components/performance/RuntimePerformanceMonitor.jsx",
      "file2": "components/performance/VirtualizedList.jsx",
      "lineNumber": 96,
      "length": 5,
      "preview": "id: PropTypes.string,\n  /** Data test ID for testing */\n  dataTestId: PropTypes.string\n};..."
    },
    {
      "file1": "contexts/__tests__/AuthContext.test.jsx",
      "file2": "hooks/__tests__/useLocalStorage.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "delete store[key];\n    }),\n    clear: jest.fn(() => {\n      store = {};\n    }),..."
    },
    {
      "file1": "contexts/__tests__/ConfigContext.test.jsx",
      "file2": "hooks/__tests__/useLocalStorage.test.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "// Mock localStorage\nconst localStorageMock = (() => {\n  let store = {};\n  return {..."
    },
    {
      "file1": "contexts/__tests__/DialogContext.test.jsx",
      "file2": "contexts/__tests__/NotificationContext.test.jsx",
      "lineNumber": 176,
      "length": 5,
      "preview": "// Restore console.error\n      console.error = originalError;\n    });\n  });..."
    },
    {
      "file1": "contexts/__tests__/NotificationContext.test.jsx",
      "file2": "contexts/__tests__/ThemeContext.test.jsx",
      "lineNumber": 251,
      "length": 5,
      "preview": "// Restore console.error\n      console.error = originalError;\n    });\n  });..."
    },
    {
      "file1": "hooks/__tests__/useLocalStorage.test.js",
      "file2": "utils/testUtils.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "store[key] = value.toString();\n    }),\n    removeItem: jest.fn((key) => {\n      delete store[key];\n ..."
    },
    {
      "file1": "hooks/useLazyComponent.js",
      "file2": "hooks/useOfflineStatus.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import { useState, useEffect, useRef, useCallback } from 'react';\nimport { performance } from '../ut..."
    },
    {
      "file1": "hooks/useOfflineStatus.js",
      "file2": "hooks/useWebWorker.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import { useState, useEffect, useRef, useCallback } from 'react';\nimport { performance } from '../ut..."
    },
    {
      "file1": "pages/ErrorBoundaryPage.jsx",
      "file2": "pages/NotFoundPage.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const styles = useMemo(() => ({\n    container: {\n      display: 'flex',\n      flexDirection: 'column..."
    },
    {
      "file1": "pages/ErrorBoundaryPage.jsx",
      "file2": "pages/NotFoundPage.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "justifyContent: 'center',\n      padding: '48px 24px',\n      minHeight: 'calc(100vh - 200px)',\n      ..."
    },
    {
      "file1": "pages/ErrorBoundaryPage.jsx",
      "file2": "pages/NotFoundPage.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "fontSize: '32px',\n      fontWeight: 600,\n      marginBottom: '16px',\n      color: theme.palette.text..."
    },
    {
      "file1": "pages/ErrorBoundaryPage.jsx",
      "file2": "pages/NotFoundPage.jsx",
      "lineNumber": 81,
      "length": 5,
      "preview": "backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText,\n      ..."
    },
    {
      "file1": "stories/codeQuality/CodeConsistencyMonitor.stories.jsx",
      "file2": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "export const Default = Template.bind({});\nDefault.args = {\n  // Default props will be added during e..."
    },
    {
      "file1": "stories/codeQuality/CodeConsistencyMonitor.stories.jsx",
      "file2": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "export const WithData = Template.bind({});\nWithData.args = {\n  // Data example props will be added d..."
    },
    {
      "file1": "stories/codeQuality/CodeConsistencyMonitor.stories.jsx",
      "file2": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "export const WithError = Template.bind({});\nWithError.args = {\n  // Error state props will be added ..."
    },
    {
      "file1": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "file2": "stories/codeQuality/DeprecationManager.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "export const Default = Template.bind({});\nDefault.args = {\n  // Default props will be added during e..."
    },
    {
      "file1": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "file2": "stories/codeQuality/DeprecationManager.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "export const WithData = Template.bind({});\nWithData.args = {\n  // Data example props will be added d..."
    },
    {
      "file1": "stories/codeQuality/CodeQualityDashboard.stories.jsx",
      "file2": "stories/codeQuality/DeprecationManager.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "export const WithError = Template.bind({});\nWithError.args = {\n  // Error state props will be added ..."
    },
    {
      "file1": "stories/codeQuality/DeprecationManager.stories.jsx",
      "file2": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "export const Default = Template.bind({});\nDefault.args = {\n  // Default props will be added during e..."
    },
    {
      "file1": "stories/codeQuality/DeprecationManager.stories.jsx",
      "file2": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "export const WithData = Template.bind({});\nWithData.args = {\n  // Data example props will be added d..."
    },
    {
      "file1": "stories/codeQuality/DeprecationManager.stories.jsx",
      "file2": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "export const WithError = Template.bind({});\nWithError.args = {\n  // Error state props will be added ..."
    },
    {
      "file1": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "file2": "stories/codeQuality/ErrorPrevention.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "export const Default = Template.bind({});\nDefault.args = {\n  // Default props will be added during e..."
    },
    {
      "file1": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "file2": "stories/codeQuality/ErrorPrevention.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "export const WithData = Template.bind({});\nWithData.args = {\n  // Data example props will be added d..."
    },
    {
      "file1": "stories/codeQuality/DevelopmentGuide.stories.jsx",
      "file2": "stories/codeQuality/ErrorPrevention.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "export const WithError = Template.bind({});\nWithError.args = {\n  // Error state props will be added ..."
    },
    {
      "file1": "stories/components/A11yAlert.stories.jsx",
      "file2": "stories/components/A11yCheckbox.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yAlert.stories.jsx",
      "file2": "stories/components/A11yCheckbox.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yAlert.stories.jsx",
      "file2": "stories/components/A11yCheckbox.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yAlert.stories.jsx",
      "file2": "stories/components/A11yCheckbox.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yCheckbox.stories.jsx",
      "file2": "stories/components/A11yForm.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yCheckbox.stories.jsx",
      "file2": "stories/components/A11yForm.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yCheckbox.stories.jsx",
      "file2": "stories/components/A11yForm.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yCheckbox.stories.jsx",
      "file2": "stories/components/A11yForm.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yForm.stories.jsx",
      "file2": "stories/components/A11yMenu.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yForm.stories.jsx",
      "file2": "stories/components/A11yMenu.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yForm.stories.jsx",
      "file2": "stories/components/A11yMenu.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yForm.stories.jsx",
      "file2": "stories/components/A11yMenu.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yMenu.stories.jsx",
      "file2": "stories/components/A11yModal.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yMenu.stories.jsx",
      "file2": "stories/components/A11yModal.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yMenu.stories.jsx",
      "file2": "stories/components/A11yModal.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yMenu.stories.jsx",
      "file2": "stories/components/A11yModal.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yModal.stories.jsx",
      "file2": "stories/components/A11yRadio.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yModal.stories.jsx",
      "file2": "stories/components/A11yRadio.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yModal.stories.jsx",
      "file2": "stories/components/A11yRadio.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yModal.stories.jsx",
      "file2": "stories/components/A11yRadio.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yRadio.stories.jsx",
      "file2": "stories/components/A11ySelect.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yRadio.stories.jsx",
      "file2": "stories/components/A11ySelect.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yRadio.stories.jsx",
      "file2": "stories/components/A11ySelect.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yRadio.stories.jsx",
      "file2": "stories/components/A11ySelect.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11ySelect.stories.jsx",
      "file2": "stories/components/A11yTable.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11ySelect.stories.jsx",
      "file2": "stories/components/A11yTable.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11ySelect.stories.jsx",
      "file2": "stories/components/A11yTable.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11ySelect.stories.jsx",
      "file2": "stories/components/A11yTable.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yTable.stories.jsx",
      "file2": "stories/components/A11yTabs.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yTable.stories.jsx",
      "file2": "stories/components/A11yTabs.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yTable.stories.jsx",
      "file2": "stories/components/A11yTabs.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yTable.stories.jsx",
      "file2": "stories/components/A11yTabs.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yTabs.stories.jsx",
      "file2": "stories/components/A11yTooltip.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: true..."
    },
    {
      "file1": "stories/components/A11yTabs.stories.jsx",
      "file2": "stories/components/A11yTooltip.stories.jsx",
      "lineNumber": 31,
      "length": 5,
      "preview": "argTypes: {\n    // Define control types for component props\n    children: {\n      control: 'text',\n ..."
    },
    {
      "file1": "stories/components/A11yTabs.stories.jsx",
      "file2": "stories/components/A11yTooltip.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/A11yTabs.stories.jsx",
      "file2": "stories/components/A11yTooltip.stories.jsx",
      "lineNumber": 41,
      "length": 5,
      "preview": "},\n    style: {\n      control: 'object',\n      description: 'Additional inline styles'\n    }..."
    },
    {
      "file1": "stories/components/A11yTooltip.stories.jsx",
      "file2": "stories/components/AccessibilityMonitor.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "defaultValue: 'Component content'\n    },\n    className: {\n      control: 'text',\n      description: ..."
    },
    {
      "file1": "stories/components/AccessibilityMonitor.stories.jsx",
      "file2": "stories/components/ErrorTrackingSystem.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "argTypes: {\n    children: {\n      control: 'text',\n      description: 'Content of the component',\n  ..."
    },
    {
      "file1": "stories/components/AccessibilityMonitor.stories.jsx",
      "file2": "stories/components/ErrorTrackingSystem.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "},\n    className: {\n      control: 'text',\n      description: 'Additional CSS class'\n    }..."
    },
    {
      "file1": "stories/components/ErrorTrackingSystem.stories.jsx",
      "file2": "stories/components/PerformanceBudgetMonitor.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "argTypes: {\n    children: {\n      control: 'text',\n      description: 'Content of the component',\n  ..."
    },
    {
      "file1": "stories/components/ErrorTrackingSystem.stories.jsx",
      "file2": "stories/components/PerformanceBudgetMonitor.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "},\n    className: {\n      control: 'text',\n      description: 'Additional CSS class'\n    }..."
    },
    {
      "file1": "stories/components/PerformanceBudgetMonitor.stories.jsx",
      "file2": "stories/components/RuntimePerformanceMonitor.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "argTypes: {\n    children: {\n      control: 'text',\n      description: 'Content of the component',\n  ..."
    },
    {
      "file1": "stories/components/PerformanceBudgetMonitor.stories.jsx",
      "file2": "stories/components/RuntimePerformanceMonitor.stories.jsx",
      "lineNumber": 26,
      "length": 5,
      "preview": "},\n    className: {\n      control: 'text',\n      description: 'Additional CSS class'\n    }..."
    },
    {
      "file1": "stories/utils/bundleSizeOptimizer.stories.jsx",
      "file2": "stories/utils/ComponentAnalytics.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/bundleSizeOptimizer.stories.jsx",
      "file2": "stories/utils/ComponentAnalytics.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/ComponentAnalytics.stories.jsx",
      "file2": "stories/utils/criticalPathOptimizer.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/ComponentAnalytics.stories.jsx",
      "file2": "stories/utils/criticalPathOptimizer.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/criticalPathOptimizer.stories.jsx",
      "file2": "stories/utils/differentialLoader.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/criticalPathOptimizer.stories.jsx",
      "file2": "stories/utils/differentialLoader.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/differentialLoader.stories.jsx",
      "file2": "stories/utils/dynamicImportSplitter.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/differentialLoader.stories.jsx",
      "file2": "stories/utils/dynamicImportSplitter.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/dynamicImportSplitter.stories.jsx",
      "file2": "stories/utils/ModuleFederationConfig.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/dynamicImportSplitter.stories.jsx",
      "file2": "stories/utils/ModuleFederationConfig.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/ModuleFederationConfig.stories.jsx",
      "file2": "stories/utils/offlineSupport.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/ModuleFederationConfig.stories.jsx",
      "file2": "stories/utils/offlineSupport.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/offlineSupport.stories.jsx",
      "file2": "stories/utils/parallelBuildProcessor.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/offlineSupport.stories.jsx",
      "file2": "stories/utils/parallelBuildProcessor.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/parallelBuildProcessor.stories.jsx",
      "file2": "stories/utils/productionOptimizer.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/parallelBuildProcessor.stories.jsx",
      "file2": "stories/utils/productionOptimizer.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/productionOptimizer.stories.jsx",
      "file2": "stories/utils/ssrAdapter.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/productionOptimizer.stories.jsx",
      "file2": "stories/utils/ssrAdapter.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/ssrAdapter.stories.jsx",
      "file2": "stories/utils/StaticSiteGenerator.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/ssrAdapter.stories.jsx",
      "file2": "stories/utils/StaticSiteGenerator.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/StaticSiteGenerator.stories.jsx",
      "file2": "stories/utils/treeShakerEnhancer.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/StaticSiteGenerator.stories.jsx",
      "file2": "stories/utils/treeShakerEnhancer.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "stories/utils/treeShakerEnhancer.stories.jsx",
      "file2": "stories/utils/webWorkerManager.stories.jsx",
      "lineNumber": 21,
      "length": 5,
      "preview": "};\n\n// Example usage\nexport const BasicUsage = () => {\n  return (..."
    },
    {
      "file1": "stories/utils/treeShakerEnhancer.stories.jsx",
      "file2": "stories/utils/webWorkerManager.stories.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "});\n\n// Optimize your application\nconst result = optimizer.process(myData);`\n        }..."
    },
    {
      "file1": "tests/codeQuality/codeOptimization.test.js",
      "file2": "tests/codeQuality/codeOptimizer.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/codeOptimizer.test.js",
      "file2": "tests/codeQuality/consistencyEnforcer.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/consistencyEnforcer.test.js",
      "file2": "tests/codeQuality/patternConsistency.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/patternConsistency.test.js",
      "file2": "tests/codeQuality/standardFormatter.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/standardFormatter.test.js",
      "file2": "tests/codeQuality/staticAnalysis.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/staticAnalysis.test.js",
      "file2": "tests/codeQuality/staticAnalyzer.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/staticAnalyzer.test.js",
      "file2": "tests/codeQuality/typeValidation.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/codeQuality/typeValidation.test.js",
      "file2": "tests/codeQuality/typeValidator.test.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/reac..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yButton.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yAlert.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yAlert.visual.js",
      "file2": "tests/components/common/A11yCheckbox.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yButton.test.jsx",
      "file2": "tests/components/common/A11yCheckbox.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.test.jsx",
      "file2": "tests/components/common/A11yForm.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yCheckbox.visual.js",
      "file2": "tests/components/common/A11yForm.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yForm.test.jsx",
      "file2": "tests/components/common/A11yMenu.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yForm.visual.js",
      "file2": "tests/components/common/A11yMenu.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yMenu.test.jsx",
      "file2": "tests/components/common/A11yModal.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yMenu.visual.js",
      "file2": "tests/components/common/A11yModal.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yModal.test.jsx",
      "file2": "tests/components/common/A11yRadio.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yModal.visual.js",
      "file2": "tests/components/common/A11yRadio.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yRadio.test.jsx",
      "file2": "tests/components/common/A11ySelect.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yRadio.visual.js",
      "file2": "tests/components/common/A11ySelect.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11ySelect.test.jsx",
      "file2": "tests/components/common/A11yTable.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11ySelect.visual.js",
      "file2": "tests/components/common/A11yTable.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yTable.test.jsx",
      "file2": "tests/components/common/A11yTabs.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yTable.visual.js",
      "file2": "tests/components/common/A11yTabs.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 6,
      "length": 5,
      "preview": "* and proper behavior across different states.\n */\n\nimport React from 'react';\nimport { render, scre..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 36,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 51,
      "length": 5,
      "preview": "const component = screen.getByText('Accessible Content');\n      expect(component).toHaveAttribute('a..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 56,
      "length": 5,
      "preview": "});\n  });\n  \n  // Accessibility tests\n  describe('Accessibility', () => {..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 71,
      "length": 5,
      "preview": "// const tester = new AccessibilityTester();\n      // const sequence = new KeyboardTestSequence()\n  ..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 76,
      "length": 5,
      "preview": "// expect(results.passed).toBe(true);\n    });\n    \n    test('works with screen readers', () => {\n   ..."
    },
    {
      "file1": "tests/components/common/A11yTabs.test.jsx",
      "file2": "tests/components/common/A11yTooltip.test.jsx",
      "lineNumber": 91,
      "length": 5,
      "preview": "});\n  \n  // Behavior tests\n  describe('Behavior', () => {\n    test('handles user interactions correc..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "visualTesting = new VisualTesting({\n      snapshotsDir: '__snapshots__/visual/common',\n      diffDir..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n    \n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "afterAll(async () => {\n    await visualTesting.cleanup();\n  });\n  \n  test('renders correctly in all ..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "// Define component states to test\n    const states = new ComponentVisualState()\n      .addDefaultSt..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Add more states specific to this component\n      .getStates();\n    \n    // Test all states across..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "// Verify all screenshots match baseline\n    Object.entries(results).forEach(([stateName, viewportRe..."
    },
    {
      "file1": "tests/components/common/A11yTabs.visual.js",
      "file2": "tests/components/common/A11yTooltip.visual.js",
      "lineNumber": 51,
      "length": 5,
      "preview": "});\n  });\n  \n  test('renders with different themes', async () => {\n    // Test light theme..."
    },
    {
      "file1": "tests/components/integration/IntegrationDetailView.visual.js",
      "file2": "tests/templates/VisualRegressionTestTemplate.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "// Set up visual testing before tests\n  beforeAll(async () => {\n    // Configure visual testing\n    ..."
    },
    {
      "file1": "tests/components/integration/IntegrationDetailView.visual.js",
      "file2": "tests/templates/VisualRegressionTestTemplate.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "// Initialize visual testing\n    await visualTesting.initialize();\n  });..."
    },
    {
      "file1": "tests/components/integration/IntegrationDetailView.visual.js",
      "file2": "tests/templates/VisualRegressionTestTemplate.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Clean up after tests\n  afterAll(async () => {\n    await visualTesting.cleanup();\n  });..."
    },
    {
      "file1": "tests/components/performance/AccessibilityMonitor.test.js",
      "file2": "tests/components/performance/ErrorTrackingSystem.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/performance/AccessibilityMonitor.test.js",
      "file2": "tests/components/performance/ErrorTrackingSystem.test.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Performance tests\n  describe('Performance', () => {\n    test('optimizes rendering', () => {\n     ..."
    },
    {
      "file1": "tests/components/performance/AccessibilityMonitor.test.js",
      "file2": "tests/components/performance/ErrorTrackingSystem.test.js",
      "lineNumber": 41,
      "length": 5,
      "preview": "});\n    \n    test('tracks render metrics', () => {\n      // Performance tracking testing\n    });..."
    },
    {
      "file1": "tests/components/performance/AccessibilityMonitor.test.js",
      "file2": "tests/components/performance/ErrorTrackingSystem.test.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "});\n  \n  // Integration tests\n  describe('Integration', () => {\n    test('integrates correctly with ..."
    },
    {
      "file1": "tests/components/performance/ErrorTrackingSystem.test.js",
      "file2": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/performance/ErrorTrackingSystem.test.js",
      "file2": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Performance tests\n  describe('Performance', () => {\n    test('optimizes rendering', () => {\n     ..."
    },
    {
      "file1": "tests/components/performance/ErrorTrackingSystem.test.js",
      "file2": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "lineNumber": 41,
      "length": 5,
      "preview": "});\n    \n    test('tracks render metrics', () => {\n      // Performance tracking testing\n    });..."
    },
    {
      "file1": "tests/components/performance/ErrorTrackingSystem.test.js",
      "file2": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "});\n  \n  // Integration tests\n  describe('Integration', () => {\n    test('integrates correctly with ..."
    },
    {
      "file1": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "file2": "tests/components/performance/RuntimePerformanceMonitor.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "const component = screen.getByTestId('test-component');\n      expect(component).toHaveClass('custom-..."
    },
    {
      "file1": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "file2": "tests/components/performance/RuntimePerformanceMonitor.test.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "// Performance tests\n  describe('Performance', () => {\n    test('optimizes rendering', () => {\n     ..."
    },
    {
      "file1": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "file2": "tests/components/performance/RuntimePerformanceMonitor.test.js",
      "lineNumber": 41,
      "length": 5,
      "preview": "});\n    \n    test('tracks render metrics', () => {\n      // Performance tracking testing\n    });..."
    },
    {
      "file1": "tests/components/performance/PerformanceBudgetMonitor.test.js",
      "file2": "tests/components/performance/RuntimePerformanceMonitor.test.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "});\n  \n  // Integration tests\n  describe('Integration', () => {\n    test('integrates correctly with ..."
    },
    {
      "file1": "tests/components/performance/RuntimePerformanceMonitor.test.js",
      "file2": "tests/utils/bundleSizeOptimizer.test.js",
      "lineNumber": 46,
      "length": 5,
      "preview": "});\n  \n  // Integration tests\n  describe('Integration', () => {\n    test('integrates correctly with ..."
    },
    {
      "file1": "tests/e2e/IntegrationWorkflow.e2e.js",
      "file2": "tests/templates/E2ETestTemplate.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "async login(username, password) {\n    await this.fill('usernameInput', username);\n    await this.fil..."
    },
    {
      "file1": "tests/e2e/IntegrationWorkflow.e2e.js",
      "file2": "tests/templates/E2ETestTemplate.js",
      "lineNumber": 246,
      "length": 5,
      "preview": "// Initialize browser\n    await e2e.initialize();\n    \n    // Create page objects..."
    },
    {
      "file1": "tests/utils/bundleSizeOptimizer.test.js",
      "file2": "tests/utils/ComponentAnalytics.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/bundleSizeOptimizer.test.js",
      "file2": "tests/utils/ComponentAnalytics.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/bundleSizeOptimizer.test.js",
      "file2": "tests/utils/ComponentAnalytics.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/bundleSizeOptimizer.test.js",
      "file2": "tests/utils/ComponentAnalytics.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/ComponentAnalytics.test.js",
      "file2": "tests/utils/criticalPathOptimizer.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/ComponentAnalytics.test.js",
      "file2": "tests/utils/criticalPathOptimizer.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/ComponentAnalytics.test.js",
      "file2": "tests/utils/criticalPathOptimizer.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/ComponentAnalytics.test.js",
      "file2": "tests/utils/criticalPathOptimizer.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/criticalPathOptimizer.test.js",
      "file2": "tests/utils/differentialLoader.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/criticalPathOptimizer.test.js",
      "file2": "tests/utils/differentialLoader.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/criticalPathOptimizer.test.js",
      "file2": "tests/utils/differentialLoader.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/criticalPathOptimizer.test.js",
      "file2": "tests/utils/differentialLoader.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/differentialLoader.test.js",
      "file2": "tests/utils/dynamicImportSplitter.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/differentialLoader.test.js",
      "file2": "tests/utils/dynamicImportSplitter.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/differentialLoader.test.js",
      "file2": "tests/utils/dynamicImportSplitter.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/differentialLoader.test.js",
      "file2": "tests/utils/dynamicImportSplitter.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/dynamicImportSplitter.test.js",
      "file2": "tests/utils/ModuleFederationConfig.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/dynamicImportSplitter.test.js",
      "file2": "tests/utils/ModuleFederationConfig.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/dynamicImportSplitter.test.js",
      "file2": "tests/utils/ModuleFederationConfig.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/dynamicImportSplitter.test.js",
      "file2": "tests/utils/ModuleFederationConfig.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/ModuleFederationConfig.test.js",
      "file2": "tests/utils/offlineSupport.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/ModuleFederationConfig.test.js",
      "file2": "tests/utils/offlineSupport.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/ModuleFederationConfig.test.js",
      "file2": "tests/utils/offlineSupport.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/ModuleFederationConfig.test.js",
      "file2": "tests/utils/offlineSupport.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/offlineSupport.test.js",
      "file2": "tests/utils/parallelBuildProcessor.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/offlineSupport.test.js",
      "file2": "tests/utils/parallelBuildProcessor.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/offlineSupport.test.js",
      "file2": "tests/utils/parallelBuildProcessor.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/offlineSupport.test.js",
      "file2": "tests/utils/parallelBuildProcessor.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/parallelBuildProcessor.test.js",
      "file2": "tests/utils/productionOptimizer.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/parallelBuildProcessor.test.js",
      "file2": "tests/utils/productionOptimizer.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/parallelBuildProcessor.test.js",
      "file2": "tests/utils/productionOptimizer.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/parallelBuildProcessor.test.js",
      "file2": "tests/utils/productionOptimizer.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/productionOptimizer.test.js",
      "file2": "tests/utils/ssrAdapter.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/productionOptimizer.test.js",
      "file2": "tests/utils/ssrAdapter.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/productionOptimizer.test.js",
      "file2": "tests/utils/ssrAdapter.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/productionOptimizer.test.js",
      "file2": "tests/utils/ssrAdapter.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/ssrAdapter.test.js",
      "file2": "tests/utils/StaticSiteGenerator.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/ssrAdapter.test.js",
      "file2": "tests/utils/StaticSiteGenerator.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/ssrAdapter.test.js",
      "file2": "tests/utils/StaticSiteGenerator.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/ssrAdapter.test.js",
      "file2": "tests/utils/StaticSiteGenerator.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/StaticSiteGenerator.test.js",
      "file2": "tests/utils/treeShakerEnhancer.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/StaticSiteGenerator.test.js",
      "file2": "tests/utils/treeShakerEnhancer.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/StaticSiteGenerator.test.js",
      "file2": "tests/utils/treeShakerEnhancer.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/StaticSiteGenerator.test.js",
      "file2": "tests/utils/treeShakerEnhancer.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "tests/utils/treeShakerEnhancer.test.js",
      "file2": "tests/utils/webWorkerManager.test.js",
      "lineNumber": 16,
      "length": 5,
      "preview": "});\n    \n    test('handles edge cases appropriately', () => {\n      // Test edge cases\n    });..."
    },
    {
      "file1": "tests/utils/treeShakerEnhancer.test.js",
      "file2": "tests/utils/webWorkerManager.test.js",
      "lineNumber": 21,
      "length": 5,
      "preview": "});\n  \n  // Performance tests\n  describe('Performance', () => {\n    test('executes efficiently', () ..."
    },
    {
      "file1": "tests/utils/treeShakerEnhancer.test.js",
      "file2": "tests/utils/webWorkerManager.test.js",
      "lineNumber": 26,
      "length": 5,
      "preview": "// Test execution time\n    });\n    \n    test('scales with input size', () => {\n      // Test scaling..."
    },
    {
      "file1": "tests/utils/treeShakerEnhancer.test.js",
      "file2": "tests/utils/webWorkerManager.test.js",
      "lineNumber": 31,
      "length": 5,
      "preview": "});\n  });\n  \n  // Integration tests\n  describe('Integration', () => {..."
    },
    {
      "file1": "utils/bundleSizeOptimizer.js",
      "file2": "utils/ComponentAnalytics.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/bundleSizeOptimizer.js",
      "file2": "utils/ComponentAnalytics.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/bundleSizeOptimizer.js",
      "file2": "utils/ComponentAnalytics.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\n\n/..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 86,
      "length": 5,
      "preview": "data: null\n  });\n\n  const execute = useCallback((action, actionOptions = {}) => {\n    setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 91,
      "length": 5,
      "preview": "try {\n      // Determine which function to call based on the action\n      let result;\n      switch (..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 111,
      "length": 5,
      "preview": "default:\n          throw new Error(`Unknown action: ${action}`);\n      }\n      \n      setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 116,
      "length": 5,
      "preview": "...prev, \n        loading: false, \n        data: result,\n        error: null\n      }));..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 121,
      "length": 5,
      "preview": "return result;\n    } catch (error) {\n      setState(prev => ({ \n        ...prev,..."
    },
    {
      "file1": "utils/codeQuality/codeOptimizer.js",
      "file2": "utils/codeQuality/consistencyEnforcer.js",
      "lineNumber": 126,
      "length": 5,
      "preview": "loading: false, \n        error: error.message || 'An error occurred'\n      }));\n      \n      throw e..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\n\n/..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 86,
      "length": 5,
      "preview": "data: null\n  });\n\n  const execute = useCallback((action, actionOptions = {}) => {\n    setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 91,
      "length": 5,
      "preview": "try {\n      // Determine which function to call based on the action\n      let result;\n      switch (..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 111,
      "length": 5,
      "preview": "default:\n          throw new Error(`Unknown action: ${action}`);\n      }\n      \n      setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 116,
      "length": 5,
      "preview": "...prev, \n        loading: false, \n        data: result,\n        error: null\n      }));..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 121,
      "length": 5,
      "preview": "return result;\n    } catch (error) {\n      setState(prev => ({ \n        ...prev,..."
    },
    {
      "file1": "utils/codeQuality/consistencyEnforcer.js",
      "file2": "utils/codeQuality/standardFormatter.js",
      "lineNumber": 126,
      "length": 5,
      "preview": "loading: false, \n        error: error.message || 'An error occurred'\n      }));\n      \n      throw e..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\n\n/..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 86,
      "length": 5,
      "preview": "data: null\n  });\n\n  const execute = useCallback((action, actionOptions = {}) => {\n    setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 91,
      "length": 5,
      "preview": "try {\n      // Determine which function to call based on the action\n      let result;\n      switch (..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 111,
      "length": 5,
      "preview": "default:\n          throw new Error(`Unknown action: ${action}`);\n      }\n      \n      setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 116,
      "length": 5,
      "preview": "...prev, \n        loading: false, \n        data: result,\n        error: null\n      }));..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 121,
      "length": 5,
      "preview": "return result;\n    } catch (error) {\n      setState(prev => ({ \n        ...prev,..."
    },
    {
      "file1": "utils/codeQuality/standardFormatter.js",
      "file2": "utils/codeQuality/staticAnalyzer.js",
      "lineNumber": 126,
      "length": 5,
      "preview": "loading: false, \n        error: error.message || 'An error occurred'\n      }));\n      \n      throw e..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - Zero technical debt implementation\n * - Comprehensive error handling\n * - Performan..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "* - Detailed documentation\n */\nimport { useState, useEffect, useCallback, useMemo } from 'react';\n\n/..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 86,
      "length": 5,
      "preview": "data: null\n  });\n\n  const execute = useCallback((action, actionOptions = {}) => {\n    setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 91,
      "length": 5,
      "preview": "try {\n      // Determine which function to call based on the action\n      let result;\n      switch (..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 111,
      "length": 5,
      "preview": "default:\n          throw new Error(`Unknown action: ${action}`);\n      }\n      \n      setState(prev ..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 116,
      "length": 5,
      "preview": "...prev, \n        loading: false, \n        data: result,\n        error: null\n      }));..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 121,
      "length": 5,
      "preview": "return result;\n    } catch (error) {\n      setState(prev => ({ \n        ...prev,..."
    },
    {
      "file1": "utils/codeQuality/staticAnalyzer.js",
      "file2": "utils/codeQuality/typeValidator.js",
      "lineNumber": 126,
      "length": 5,
      "preview": "loading: false, \n        error: error.message || 'An error occurred'\n      }));\n      \n      throw e..."
    },
    {
      "file1": "utils/ComponentAnalytics.js",
      "file2": "utils/criticalPathOptimizer.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/ComponentAnalytics.js",
      "file2": "utils/criticalPathOptimizer.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/ComponentAnalytics.js",
      "file2": "utils/criticalPathOptimizer.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/criticalPathOptimizer.js",
      "file2": "utils/differentialLoader.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/criticalPathOptimizer.js",
      "file2": "utils/differentialLoader.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/criticalPathOptimizer.js",
      "file2": "utils/differentialLoader.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/differentialLoader.js",
      "file2": "utils/dynamicImportSplitter.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/differentialLoader.js",
      "file2": "utils/dynamicImportSplitter.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/differentialLoader.js",
      "file2": "utils/dynamicImportSplitter.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/dynamicImportSplitter.js",
      "file2": "utils/ModuleFederationConfig.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/dynamicImportSplitter.js",
      "file2": "utils/ModuleFederationConfig.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/dynamicImportSplitter.js",
      "file2": "utils/ModuleFederationConfig.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/e2eTesting.js",
      "file2": "utils/visualRegressionTesting.js",
      "lineNumber": 96,
      "length": 5,
      "preview": "/**\n   * Clean up resources\n   */\n  async cleanup() {..."
    },
    {
      "file1": "utils/e2eTesting.js",
      "file2": "utils/visualRegressionTesting.js",
      "lineNumber": 111,
      "length": 5,
      "preview": "await this.browser.close();\n      this.browser = null;\n    }\n  }..."
    },
    {
      "file1": "utils/ModuleFederationConfig.js",
      "file2": "utils/monitoring/errorTracking.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/ModuleFederationConfig.js",
      "file2": "utils/offlineSupport.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/ModuleFederationConfig.js",
      "file2": "utils/offlineSupport.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/monitoring/errorTracking.js",
      "file2": "utils/monitoring/performanceMonitoring.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* \n * Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compa..."
    },
    {
      "file1": "utils/monitoring/errorTracking.js",
      "file2": "utils/monitoring/usageAnalytics.js",
      "lineNumber": 71,
      "length": 5,
      "preview": "// Track initialization performance\n  const startTime = performance.now();\n  \n  // Merge default and..."
    },
    {
      "file1": "utils/monitoring/errorTracking.js",
      "file2": "utils/monitoring/usageAnalytics.js",
      "lineNumber": 156,
      "length": 5,
      "preview": "// Apply sampling rate\n    if (Math.random() * 100 > config.samplingRate) {\n      return null;\n    }..."
    },
    {
      "file1": "utils/monitoring/performanceMonitoring.js",
      "file2": "utils/monitoring/usageAnalytics.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/monitoring/performanceMonitoring.js",
      "file2": "utils/monitoring/usageAnalytics.js",
      "lineNumber": 376,
      "length": 5,
      "preview": "if (typeof window !== 'undefined' && config.storageKey) {\n      try {\n        localStorage.removeIte..."
    },
    {
      "file1": "utils/monitoring/usageAnalytics.js",
      "file2": "utils/offlineSupport.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/offlineSupport.js",
      "file2": "utils/parallelBuildProcessor.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/offlineSupport.js",
      "file2": "utils/parallelBuildProcessor.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/offlineSupport.js",
      "file2": "utils/parallelBuildProcessor.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/parallelBuildProcessor.js",
      "file2": "utils/productionOptimizer.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/parallelBuildProcessor.js",
      "file2": "utils/productionOptimizer.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/parallelBuildProcessor.js",
      "file2": "utils/productionOptimizer.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/productionOptimizer.js",
      "file2": "utils/ssrAdapter.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/productionOptimizer.js",
      "file2": "utils/ssrAdapter.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/productionOptimizer.js",
      "file2": "utils/ssrAdapter.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/ssrAdapter.js",
      "file2": "utils/StaticSiteGenerator.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/ssrAdapter.js",
      "file2": "utils/StaticSiteGenerator.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/ssrAdapter.js",
      "file2": "utils/StaticSiteGenerator.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/StaticSiteGenerator.js",
      "file2": "utils/treeShakerEnhancer.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/StaticSiteGenerator.js",
      "file2": "utils/treeShakerEnhancer.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/StaticSiteGenerator.js",
      "file2": "utils/treeShakerEnhancer.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    },
    {
      "file1": "utils/treeShakerEnhancer.js",
      "file2": "utils/webWorkerManager.js",
      "lineNumber": 6,
      "length": 5,
      "preview": "* Features:\n * - High performance implementation\n * - Optimized for production builds\n * - Compatibl..."
    },
    {
      "file1": "utils/treeShakerEnhancer.js",
      "file2": "utils/webWorkerManager.js",
      "lineNumber": 11,
      "length": 5,
      "preview": "*/\n\nimport { performance } from '../utils/performance';\n\n/**..."
    },
    {
      "file1": "utils/treeShakerEnhancer.js",
      "file2": "utils/webWorkerManager.js",
      "lineNumber": 36,
      "length": 5,
      "preview": "}\n  \n  return {\n    // Public methods and properties...\n  };..."
    }
  ],
  "unusedImports": [
    {
      "file": "hooks/useLazyComponent.js",
      "line": 7,
      "import": "useState",
      "statement": "import { useState, useEffect, useRef, useCallback } from 'react';"
    },
    {
      "file": "hooks/useLazyComponent.js",
      "line": 8,
      "import": "performance",
      "statement": "import { performance } from '../utils/performance';"
    },
    {
      "file": "hooks/useOfflineStatus.js",
      "line": 7,
      "import": "useState",
      "statement": "import { useState, useEffect, useRef, useCallback } from 'react';"
    },
    {
      "file": "hooks/useOfflineStatus.js",
      "line": 8,
      "import": "performance",
      "statement": "import { performance } from '../utils/performance';"
    },
    {
      "file": "hooks/useWebWorker.js",
      "line": 7,
      "import": "useState",
      "statement": "import { useState, useEffect, useRef, useCallback } from 'react';"
    },
    {
      "file": "hooks/useWebWorker.js",
      "line": 8,
      "import": "performance",
      "statement": "import { performance } from '../utils/performance';"
    },
    {
      "file": "tests/codeQuality/codeOptimization.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/codeOptimization.test.js",
      "line": 11,
      "import": "ImportOptimization",
      "statement": "import { ImportOptimization, UnusedCodeCleanup, FileRefactoring, CircularDependencyDetection, ComplexityReduction } from '../../utils/codeQuality/codeOptimization';"
    },
    {
      "file": "tests/codeQuality/codeOptimizer.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/codeOptimizer.test.js",
      "line": 11,
      "import": "optimizeImports",
      "statement": "import { optimizeImports, cleanupUnusedCode, refactorLargeFiles, detectCircularDependencies, simplifyLogicalComplexity } from '../../utils/codeQuality/codeOptimizer';"
    },
    {
      "file": "tests/codeQuality/consistencyEnforcer.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/consistencyEnforcer.test.js",
      "line": 11,
      "import": "enforceNamingConventions",
      "statement": "import { enforceNamingConventions, standardizeFileStructure, validateCodePatterns, detectPatternViolations, enforceArchitecturalConstraints } from '../../utils/codeQuality/consistencyEnforcer';"
    },
    {
      "file": "tests/codeQuality/patternConsistency.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/patternConsistency.test.js",
      "line": 11,
      "import": "NamingConventions",
      "statement": "import { NamingConventions, FileStructureStandardization, CodePatternValidation, PatternViolationDetection, ArchitecturalConstraints } from '../../utils/codeQuality/patternConsistency';"
    },
    {
      "file": "tests/codeQuality/standardFormatter.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/standardFormatter.test.js",
      "line": 11,
      "import": "formatCode",
      "statement": "import { formatCode, validateFormatting, generateFormattingReport, applyFormattingRules, syncFormattingConfig } from '../../utils/codeQuality/standardFormatter';"
    },
    {
      "file": "tests/codeQuality/staticAnalysis.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/staticAnalysis.test.js",
      "line": 11,
      "import": "ComplexityAnalysis",
      "statement": "import { ComplexityAnalysis, DuplicateCodeDetection, UnusedImportsAnalysis, BestPracticesValidation, QualityReportGeneration } from '../../utils/codeQuality/staticAnalysis';"
    },
    {
      "file": "tests/codeQuality/staticAnalyzer.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/staticAnalyzer.test.js",
      "line": 11,
      "import": "analyzeComplexity",
      "statement": "import { analyzeComplexity, detectDuplicateCode, analyzeUnusedImports, validateBestPractices, generateQualityReport } from '../../utils/codeQuality/staticAnalyzer';"
    },
    {
      "file": "tests/codeQuality/typeValidation.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/typeValidation.test.js",
      "line": 11,
      "import": "TypeDefinitionValidation",
      "statement": "import { TypeDefinitionValidation, TypeHelpersGeneration, PropTypesValidation, TypeConsistencyChecking, TypeRestrictionEnforcement } from '../../utils/codeQuality/typeValidation';"
    },
    {
      "file": "tests/codeQuality/typeValidator.test.js",
      "line": 7,
      "import": "render",
      "statement": "import { render, screen, fireEvent, waitFor } from '@testing-library/react';"
    },
    {
      "file": "tests/codeQuality/typeValidator.test.js",
      "line": 11,
      "import": "validateTypeDefinitions",
      "statement": "import { validateTypeDefinitions, generateTypeHelpers, validatePropTypes, checkTypeConsistency, enforceTypeRestrictions } from '../../utils/codeQuality/typeValidator';"
    }
  ]
}