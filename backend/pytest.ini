[pytest]
# General pytest configuration
testpaths = test
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Console output configuration
console_output_style = progress
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test markers for categorization
markers =
    unit: marks tests as unit tests (tests a single component in isolation)
    integration: marks tests as integration tests (tests integration between components)
    e2e: marks tests as end-to-end tests (tests complete user flows)
    api: marks tests as API tests (tests API endpoints)
    db: marks tests that require a database
    slow: marks tests that take a long time to run
    auth: marks tests related to authentication and authorization
    storage: marks tests related to storage functionality
    tenant: marks tests related to tenant functionality
    admin: marks tests related to admin functionality
    earnings: marks tests related to earnings functionality
    oauth: marks tests related to OAuth functionality
    mfa: marks tests related to MFA functionality
    security: marks tests related to security features

# Code coverage configuration
addopts = --strict-markers --showlocals --no-header --tb=native

# Environment configuration
env =
    D:TEST_MODE=true
    D:TEST_DATABASE_URL=sqlite:///test_db.sqlite

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning