# Optimized Backend Development Dockerfile for TAP Integration Platform
# Generated by docker-layer-optimizer-enhanced.js

FROM python:3.10-slim

WORKDIR /app

# Install curl for healthcheck and system dependencies
# Group all apt operations in a single layer and clean up cache
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    libpq-dev \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements.txt first for better layer caching
COPY requirements.txt .

# Install Python dependencies with no cache for smaller layers
RUN pip install --no-cache-dir -r requirements.txt

# Install development tools and monitoring utilities
RUN pip install --no-cache-dir \
    pytest \
    pytest-cov \
    black \
    isort \
    flake8 \
    psutil \
    pydantic-settings \
    httpx

# Set environment variables in a single layer
ENV SETUP_INVITATION_SYSTEM=false \
    DEBUG=true \
    DEBUG_MODE=true \
    LOG_LEVEL=debug \
    ENVIRONMENT=development \
    APP_ENVIRONMENT=development \
    DB_SSL_REQUIRED=false

# Create necessary directories
RUN mkdir -p /app/db/init /app/data

# Expose API port
EXPOSE 8000

# Create a health check script
RUN echo '#!/bin/bash\n\
curl -f http://localhost:8000/health || exit 1\n\
' > /app/healthcheck.sh && chmod +x /app/healthcheck.sh

# Create an entrypoint script for proper initialization
RUN echo '#!/bin/bash\n\
echo "Starting TAP Integration Platform Backend"\n\
echo "Environment: $APP_ENVIRONMENT"\n\
\n\
# Check if database directory exists, create if not\n\
mkdir -p /app/data\n\
\n\
# Run startup script\n\
if [ -f "/app/startup.sh" ]; then\n\
  echo "Running startup script..."\n\
  chmod +x /app/startup.sh\n\
  bash /app/startup.sh\n\
fi\n\
\n\
# Start the server with hot reloading\n\
exec uvicorn main:app --host 0.0.0.0 --port 8000 --reload\n\
' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

# Add Docker healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 CMD [ "/app/healthcheck.sh" ]

# Use the entrypoint script to start the server
ENTRYPOINT ["/app/entrypoint.sh"]