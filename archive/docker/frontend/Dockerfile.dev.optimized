# Optimized Frontend Development Dockerfile for TAP Integration Platform
# Generated by docker-layer-optimizer-enhanced.js

FROM node:18-alpine

# Add metadata labels
LABEL \
    org.opencontainers.image.vendor="TAP Integration Platform" \
    org.opencontainers.image.authors="TAP Platform Team <tap-team@example.com>" \
    org.opencontainers.image.licenses="Proprietary" \
    org.label-schema.schema-version="1.0" \
    org.label-schema.vendor="TAP Integration Platform" \
    com.tap.component.version="1.0.0" \
    com.tap.image.environment="development" \
    com.tap.maintainer="TAP Platform Team" \
    com.tap.component.type="frontend" \
    org.opencontainers.image.created="2025-04-03T02:06:45.333Z"


WORKDIR /app
RUN chown -R node:node /app

# Install development dependencies first for better caching
RUN apk add --no-cache wget curl bash

# Copy package files for dependency caching
COPY package.json package-lock.json* ./

# Install dependencies with clean npm ci for consistent builds
RUN npm ci

# Create proper webpack configuration directory structure
RUN mkdir -p /app/config

# Application code will be mounted as a volume
# This prevents having to rebuild the image when code changes

# Create directory for public files
RUN mkdir -p /app/public /app/src /app/build

# Expose webpack dev server port
EXPOSE 3000

# Add Docker healthcheck for container orchestration
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 CMD wget -q --spider http://localhost:3000 || exit 1

# Start webpack dev server

# Use non-root user
USER node

CMD ["npm", "run", "dev"]